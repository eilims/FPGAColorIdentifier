// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getConvolutionResult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getConvolutionResult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getConvolutionResult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> getConvolutionResult::ap_ST_fsm_state1 = "1";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_state6 = "100";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_pp1_stage1 = "10000";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_state12 = "100000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool getConvolutionResult::ap_const_boolean_1 = true;
const sc_lv<32> getConvolutionResult::ap_const_lv32_1 = "1";
const bool getConvolutionResult::ap_const_boolean_0 = false;
const sc_lv<1> getConvolutionResult::ap_const_lv1_0 = "0";
const sc_lv<32> getConvolutionResult::ap_const_lv32_4 = "100";
const sc_lv<32> getConvolutionResult::ap_const_lv32_3 = "11";
const sc_lv<1> getConvolutionResult::ap_const_lv1_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_2 = "10";
const sc_lv<2> getConvolutionResult::ap_const_lv2_0 = "00";
const sc_lv<2> getConvolutionResult::ap_const_lv2_3 = "11";
const sc_lv<2> getConvolutionResult::ap_const_lv2_1 = "1";
const sc_lv<5> getConvolutionResult::ap_const_lv5_2 = "10";
const sc_lv<32> getConvolutionResult::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> getConvolutionResult::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<5> getConvolutionResult::ap_const_lv5_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_5 = "101";

getConvolutionResult::getConvolutionResult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    getConvolutionResbkb_U1 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U1");
    getConvolutionResbkb_U1->din0(ap_var_for_const0);
    getConvolutionResbkb_U1->din1(ap_var_for_const1);
    getConvolutionResbkb_U1->din2(ap_var_for_const0);
    getConvolutionResbkb_U1->din3(row_i_reg_99);
    getConvolutionResbkb_U1->dout(tmp_1_fu_210_p5);
    getConvolutionResbkb_U2 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U2");
    getConvolutionResbkb_U2->din0(ap_var_for_const2);
    getConvolutionResbkb_U2->din1(ap_var_for_const3);
    getConvolutionResbkb_U2->din2(ap_var_for_const2);
    getConvolutionResbkb_U2->din3(row_i_reg_99);
    getConvolutionResbkb_U2->dout(tmp_2_fu_222_p5);
    getConvolutionResbkb_U3 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U3");
    getConvolutionResbkb_U3->din0(ap_var_for_const0);
    getConvolutionResbkb_U3->din1(ap_var_for_const4);
    getConvolutionResbkb_U3->din2(ap_var_for_const2);
    getConvolutionResbkb_U3->din3(row_i1_reg_123);
    getConvolutionResbkb_U3->dout(tmp_4_fu_314_p5);
    getConvolutionResbkb_U4 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U4");
    getConvolutionResbkb_U4->din0(ap_var_for_const1);
    getConvolutionResbkb_U4->din1(ap_var_for_const4);
    getConvolutionResbkb_U4->din2(ap_var_for_const3);
    getConvolutionResbkb_U4->din3(row_i1_reg_123);
    getConvolutionResbkb_U4->dout(tmp_5_fu_326_p5);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state8_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond1_i_fu_160_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state7);
    sensitive << ( exitcond1_i3_fu_254_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_phi_mux_row_i1_phi_fu_127_p4);
    sensitive << ( row_i1_reg_123 );
    sensitive << ( exitcond1_i3_reg_408 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( row_1_reg_412 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_row_i_phi_fu_103_p4);
    sensitive << ( row_i_reg_99 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_i_reg_364 );
    sensitive << ( row_reg_368 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_return);
    sensitive << ( verticalResult_assig_reg_111 );
    sensitive << ( horizontalResult_ass_reg_135 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_array_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_8_cast_fu_194_p1 );
    sensitive << ( tmp_11_cast_fu_288_p1 );
    sensitive << ( tmp_13_cast_fu_309_p1 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_array_r_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_9_cast_fu_205_p1 );
    sensitive << ( tmp_12_cast_fu_299_p1 );

    SC_METHOD(thread_array_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_array_r_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond1_i3_fu_254_p2);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_phi_mux_row_i1_phi_fu_127_p4 );

    SC_METHOD(thread_exitcond1_i_fu_160_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_row_i_phi_fu_103_p4 );

    SC_METHOD(thread_grp_fu_155_p2);
    sensitive << ( reg_147 );
    sensitive << ( tmp_4_reg_437 );

    SC_METHOD(thread_p_shl1_cast_fu_278_p1);
    sensitive << ( tmp_s_fu_270_p3 );

    SC_METHOD(thread_p_shl_cast_fu_184_p1);
    sensitive << ( tmp_7_fu_176_p3 );

    SC_METHOD(thread_row_1_fu_260_p2);
    sensitive << ( ap_phi_mux_row_i1_phi_fu_127_p4 );

    SC_METHOD(thread_row_fu_166_p2);
    sensitive << ( ap_phi_mux_row_i_phi_fu_103_p4 );

    SC_METHOD(thread_summation_2_2_i_fu_248_p2);
    sensitive << ( verticalResult_assig_reg_111 );
    sensitive << ( tmp_3_fu_244_p2 );

    SC_METHOD(thread_summation_3_2_i_fu_352_p2);
    sensitive << ( horizontalResult_ass_reg_135 );
    sensitive << ( tmp_6_fu_347_p2 );

    SC_METHOD(thread_tmp_10_fu_282_p2);
    sensitive << ( p_shl1_cast_fu_278_p1 );
    sensitive << ( tmp_i4_cast_fu_266_p1 );

    SC_METHOD(thread_tmp_11_cast_fu_288_p1);
    sensitive << ( tmp_10_fu_282_p2 );

    SC_METHOD(thread_tmp_11_fu_293_p2);
    sensitive << ( tmp_10_fu_282_p2 );

    SC_METHOD(thread_tmp_12_cast_fu_299_p1);
    sensitive << ( tmp_11_fu_293_p2 );

    SC_METHOD(thread_tmp_12_fu_304_p2);
    sensitive << ( tmp_10_reg_417 );

    SC_METHOD(thread_tmp_13_cast_fu_309_p1);
    sensitive << ( tmp_12_fu_304_p2 );

    SC_METHOD(thread_tmp_3_2_i_fu_239_p2);
    sensitive << ( reg_151 );
    sensitive << ( tmp_2_reg_388 );

    SC_METHOD(thread_tmp_3_fu_244_p2);
    sensitive << ( tmp_3_i_reg_393 );
    sensitive << ( tmp_3_2_i_reg_398 );

    SC_METHOD(thread_tmp_3_i_fu_234_p2);
    sensitive << ( reg_147 );
    sensitive << ( tmp_1_reg_383 );

    SC_METHOD(thread_tmp_6_fu_347_p2);
    sensitive << ( tmp_8_i_reg_447 );
    sensitive << ( tmp_fu_343_p2 );

    SC_METHOD(thread_tmp_7_fu_176_p3);
    sensitive << ( ap_phi_mux_row_i_phi_fu_103_p4 );

    SC_METHOD(thread_tmp_8_1_i_fu_338_p2);
    sensitive << ( reg_151 );
    sensitive << ( tmp_5_reg_442 );

    SC_METHOD(thread_tmp_8_cast_fu_194_p1);
    sensitive << ( tmp_8_fu_188_p2 );

    SC_METHOD(thread_tmp_8_fu_188_p2);
    sensitive << ( p_shl_cast_fu_184_p1 );
    sensitive << ( tmp_i_cast_fu_172_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_205_p1);
    sensitive << ( tmp_9_fu_199_p2 );

    SC_METHOD(thread_tmp_9_fu_199_p2);
    sensitive << ( tmp_8_fu_188_p2 );

    SC_METHOD(thread_tmp_fu_343_p2);
    sensitive << ( tmp_8_1_i_reg_452 );
    sensitive << ( tmp_8_2_i_reg_457 );

    SC_METHOD(thread_tmp_i4_cast_fu_266_p1);
    sensitive << ( ap_phi_mux_row_i1_phi_fu_127_p4 );

    SC_METHOD(thread_tmp_i_cast_fu_172_p1);
    sensitive << ( ap_phi_mux_row_i_phi_fu_103_p4 );

    SC_METHOD(thread_tmp_s_fu_270_p3);
    sensitive << ( ap_phi_mux_row_i1_phi_fu_127_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( exitcond1_i_fu_160_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( exitcond1_i3_fu_254_p2 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getConvolutionResult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, array_r_address0, "(port)array_r_address0");
    sc_trace(mVcdFile, array_r_ce0, "(port)array_r_ce0");
    sc_trace(mVcdFile, array_r_q0, "(port)array_r_q0");
    sc_trace(mVcdFile, array_r_address1, "(port)array_r_address1");
    sc_trace(mVcdFile, array_r_ce1, "(port)array_r_ce1");
    sc_trace(mVcdFile, array_r_q1, "(port)array_r_q1");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, row_i_reg_99, "row_i_reg_99");
    sc_trace(mVcdFile, verticalResult_assig_reg_111, "verticalResult_assig_reg_111");
    sc_trace(mVcdFile, row_i1_reg_123, "row_i1_reg_123");
    sc_trace(mVcdFile, horizontalResult_ass_reg_135, "horizontalResult_ass_reg_135");
    sc_trace(mVcdFile, reg_147, "reg_147");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond1_i_reg_364, "exitcond1_i_reg_364");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage1_iter0, "ap_block_state8_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage1_iter1, "ap_block_state10_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, exitcond1_i3_reg_408, "exitcond1_i3_reg_408");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter0, "ap_block_state7_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter1, "ap_block_state9_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter2, "ap_block_state11_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, reg_151, "reg_151");
    sc_trace(mVcdFile, exitcond1_i_fu_160_p2, "exitcond1_i_fu_160_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond1_i_reg_364, "ap_reg_pp0_iter1_exitcond1_i_reg_364");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond1_i_reg_364, "ap_reg_pp0_iter2_exitcond1_i_reg_364");
    sc_trace(mVcdFile, row_fu_166_p2, "row_fu_166_p2");
    sc_trace(mVcdFile, row_reg_368, "row_reg_368");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_1_fu_210_p5, "tmp_1_fu_210_p5");
    sc_trace(mVcdFile, tmp_1_reg_383, "tmp_1_reg_383");
    sc_trace(mVcdFile, tmp_2_fu_222_p5, "tmp_2_fu_222_p5");
    sc_trace(mVcdFile, tmp_2_reg_388, "tmp_2_reg_388");
    sc_trace(mVcdFile, tmp_3_i_fu_234_p2, "tmp_3_i_fu_234_p2");
    sc_trace(mVcdFile, tmp_3_i_reg_393, "tmp_3_i_reg_393");
    sc_trace(mVcdFile, tmp_3_2_i_fu_239_p2, "tmp_3_2_i_fu_239_p2");
    sc_trace(mVcdFile, tmp_3_2_i_reg_398, "tmp_3_2_i_reg_398");
    sc_trace(mVcdFile, summation_2_2_i_fu_248_p2, "summation_2_2_i_fu_248_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, exitcond1_i3_fu_254_p2, "exitcond1_i3_fu_254_p2");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_exitcond1_i3_reg_408, "ap_reg_pp1_iter1_exitcond1_i3_reg_408");
    sc_trace(mVcdFile, row_1_fu_260_p2, "row_1_fu_260_p2");
    sc_trace(mVcdFile, row_1_reg_412, "row_1_reg_412");
    sc_trace(mVcdFile, tmp_10_fu_282_p2, "tmp_10_fu_282_p2");
    sc_trace(mVcdFile, tmp_10_reg_417, "tmp_10_reg_417");
    sc_trace(mVcdFile, tmp_4_fu_314_p5, "tmp_4_fu_314_p5");
    sc_trace(mVcdFile, tmp_4_reg_437, "tmp_4_reg_437");
    sc_trace(mVcdFile, tmp_5_fu_326_p5, "tmp_5_fu_326_p5");
    sc_trace(mVcdFile, tmp_5_reg_442, "tmp_5_reg_442");
    sc_trace(mVcdFile, grp_fu_155_p2, "grp_fu_155_p2");
    sc_trace(mVcdFile, tmp_8_i_reg_447, "tmp_8_i_reg_447");
    sc_trace(mVcdFile, tmp_8_1_i_fu_338_p2, "tmp_8_1_i_fu_338_p2");
    sc_trace(mVcdFile, tmp_8_1_i_reg_452, "tmp_8_1_i_reg_452");
    sc_trace(mVcdFile, tmp_8_2_i_reg_457, "tmp_8_2_i_reg_457");
    sc_trace(mVcdFile, summation_3_2_i_fu_352_p2, "summation_3_2_i_fu_352_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state7, "ap_condition_pp1_exit_iter0_state7");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_row_i_phi_fu_103_p4, "ap_phi_mux_row_i_phi_fu_103_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_row_i1_phi_fu_127_p4, "ap_phi_mux_row_i1_phi_fu_127_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_8_cast_fu_194_p1, "tmp_8_cast_fu_194_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_205_p1, "tmp_9_cast_fu_205_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_288_p1, "tmp_11_cast_fu_288_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_299_p1, "tmp_12_cast_fu_299_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_309_p1, "tmp_13_cast_fu_309_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, tmp_7_fu_176_p3, "tmp_7_fu_176_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_184_p1, "p_shl_cast_fu_184_p1");
    sc_trace(mVcdFile, tmp_i_cast_fu_172_p1, "tmp_i_cast_fu_172_p1");
    sc_trace(mVcdFile, tmp_8_fu_188_p2, "tmp_8_fu_188_p2");
    sc_trace(mVcdFile, tmp_9_fu_199_p2, "tmp_9_fu_199_p2");
    sc_trace(mVcdFile, tmp_3_fu_244_p2, "tmp_3_fu_244_p2");
    sc_trace(mVcdFile, tmp_s_fu_270_p3, "tmp_s_fu_270_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_278_p1, "p_shl1_cast_fu_278_p1");
    sc_trace(mVcdFile, tmp_i4_cast_fu_266_p1, "tmp_i4_cast_fu_266_p1");
    sc_trace(mVcdFile, tmp_11_fu_293_p2, "tmp_11_fu_293_p2");
    sc_trace(mVcdFile, tmp_12_fu_304_p2, "tmp_12_fu_304_p2");
    sc_trace(mVcdFile, tmp_fu_343_p2, "tmp_fu_343_p2");
    sc_trace(mVcdFile, tmp_6_fu_347_p2, "tmp_6_fu_347_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("getConvolutionResult.hdltvin.dat");
    mHdltvoutHandle.open("getConvolutionResult.hdltvout.dat");
}

getConvolutionResult::~getConvolutionResult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete getConvolutionResbkb_U1;
    delete getConvolutionResbkb_U2;
    delete getConvolutionResbkb_U3;
    delete getConvolutionResbkb_U4;
}

void getConvolutionResult::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_0;
}

void getConvolutionResult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_1;
}

void getConvolutionResult::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_2;
}

void getConvolutionResult::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_FFFFFFFF;
}

void getConvolutionResult::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_FFFFFFFE;
}

void getConvolutionResult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state7.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state7.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state7.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        horizontalResult_ass_reg_135 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter1_exitcond1_i3_reg_408.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        horizontalResult_ass_reg_135 = summation_3_2_i_fu_352_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        row_i1_reg_123 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        row_i1_reg_123 = row_1_reg_412.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond1_i_reg_364.read(), ap_const_lv1_0))) {
        row_i_reg_99 = row_reg_368.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        row_i_reg_99 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond1_i_reg_364.read()))) {
        verticalResult_assig_reg_111 = summation_2_2_i_fu_248_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        verticalResult_assig_reg_111 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond1_i_reg_364 = exitcond1_i_reg_364.read();
        exitcond1_i_reg_364 = exitcond1_i_fu_160_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond1_i_reg_364 = ap_reg_pp0_iter1_exitcond1_i_reg_364.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp1_iter1_exitcond1_i3_reg_408 = exitcond1_i3_reg_408.read();
        exitcond1_i3_reg_408 = exitcond1_i3_fu_254_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond1_i_reg_364.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_147 = array_r_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond1_i_reg_364.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read())))) {
        reg_151 = array_r_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        row_1_reg_412 = row_1_fu_260_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        row_reg_368 = row_fu_166_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_fu_254_p2.read()))) {
        tmp_10_reg_417 = tmp_10_fu_282_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_i_reg_364.read(), ap_const_lv1_0))) {
        tmp_1_reg_383 = tmp_1_fu_210_p5.read();
        tmp_2_reg_388 = tmp_2_fu_222_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_i_reg_364.read()))) {
        tmp_3_2_i_reg_398 = tmp_3_2_i_fu_239_p2.read();
        tmp_3_i_reg_393 = tmp_3_i_fu_234_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read()))) {
        tmp_4_reg_437 = tmp_4_fu_314_p5.read();
        tmp_5_reg_442 = tmp_5_fu_326_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_8_1_i_reg_452 = tmp_8_1_i_fu_338_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter1_exitcond1_i3_reg_408.read()))) {
        tmp_8_2_i_reg_457 = grp_fu_155_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_8_i_reg_447 = grp_fu_155_p2.read();
    }
}

void getConvolutionResult::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void getConvolutionResult::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void getConvolutionResult::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[4];
}

void getConvolutionResult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getConvolutionResult::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[5];
}

void getConvolutionResult::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void getConvolutionResult::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state10_pp1_stage1_iter1() {
    ap_block_state10_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state11_pp1_stage0_iter2() {
    ap_block_state11_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state7_pp1_stage0_iter0() {
    ap_block_state7_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state8_pp1_stage1_iter0() {
    ap_block_state8_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state9_pp1_stage0_iter1() {
    ap_block_state9_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond1_i_fu_160_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_condition_pp1_exit_iter0_state7() {
    if (esl_seteq<1,1,1>(exitcond1_i3_fu_254_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state7 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state7 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getConvolutionResult::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void getConvolutionResult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_phi_mux_row_i1_phi_fu_127_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i3_reg_408.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_row_i1_phi_fu_127_p4 = row_1_reg_412.read();
    } else {
        ap_phi_mux_row_i1_phi_fu_127_p4 = row_i1_reg_123.read();
    }
}

void getConvolutionResult::thread_ap_phi_mux_row_i_phi_fu_103_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_reg_364.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_row_i_phi_fu_103_p4 = row_reg_368.read();
    } else {
        ap_phi_mux_row_i_phi_fu_103_p4 = row_i_reg_99.read();
    }
}

void getConvolutionResult::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_return() {
    ap_return = (!horizontalResult_ass_reg_135.read().is_01() || !verticalResult_assig_reg_111.read().is_01())? sc_lv<32>(): (sc_biguint<32>(horizontalResult_ass_reg_135.read()) + sc_biguint<32>(verticalResult_assig_reg_111.read()));
}

void getConvolutionResult::thread_array_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        array_r_address0 =  (sc_lv<4>) (tmp_13_cast_fu_309_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        array_r_address0 =  (sc_lv<4>) (tmp_11_cast_fu_288_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        array_r_address0 =  (sc_lv<4>) (tmp_8_cast_fu_194_p1.read());
    } else {
        array_r_address0 = "XXXX";
    }
}

void getConvolutionResult::thread_array_r_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        array_r_address1 =  (sc_lv<4>) (tmp_12_cast_fu_299_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        array_r_address1 =  (sc_lv<4>) (tmp_9_cast_fu_205_p1.read());
    } else {
        array_r_address1 = "XXXX";
    }
}

void getConvolutionResult::thread_array_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        array_r_ce0 = ap_const_logic_1;
    } else {
        array_r_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_array_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        array_r_ce1 = ap_const_logic_1;
    } else {
        array_r_ce1 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_exitcond1_i3_fu_254_p2() {
    exitcond1_i3_fu_254_p2 = (!ap_phi_mux_row_i1_phi_fu_127_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_row_i1_phi_fu_127_p4.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_exitcond1_i_fu_160_p2() {
    exitcond1_i_fu_160_p2 = (!ap_phi_mux_row_i_phi_fu_103_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_row_i_phi_fu_103_p4.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_grp_fu_155_p2() {
    grp_fu_155_p2 = (!tmp_4_reg_437.read().is_01() || !reg_147.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_4_reg_437.read()) * sc_bigint<32>(reg_147.read());
}

void getConvolutionResult::thread_p_shl1_cast_fu_278_p1() {
    p_shl1_cast_fu_278_p1 = esl_zext<5,4>(tmp_s_fu_270_p3.read());
}

void getConvolutionResult::thread_p_shl_cast_fu_184_p1() {
    p_shl_cast_fu_184_p1 = esl_zext<5,4>(tmp_7_fu_176_p3.read());
}

void getConvolutionResult::thread_row_1_fu_260_p2() {
    row_1_fu_260_p2 = (!ap_phi_mux_row_i1_phi_fu_127_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_row_i1_phi_fu_127_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_row_fu_166_p2() {
    row_fu_166_p2 = (!ap_phi_mux_row_i_phi_fu_103_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_row_i_phi_fu_103_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_summation_2_2_i_fu_248_p2() {
    summation_2_2_i_fu_248_p2 = (!tmp_3_fu_244_p2.read().is_01() || !verticalResult_assig_reg_111.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_3_fu_244_p2.read()) + sc_biguint<32>(verticalResult_assig_reg_111.read()));
}

void getConvolutionResult::thread_summation_3_2_i_fu_352_p2() {
    summation_3_2_i_fu_352_p2 = (!tmp_6_fu_347_p2.read().is_01() || !horizontalResult_ass_reg_135.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_fu_347_p2.read()) + sc_biguint<32>(horizontalResult_ass_reg_135.read()));
}

void getConvolutionResult::thread_tmp_10_fu_282_p2() {
    tmp_10_fu_282_p2 = (!p_shl1_cast_fu_278_p1.read().is_01() || !tmp_i4_cast_fu_266_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl1_cast_fu_278_p1.read()) - sc_biguint<5>(tmp_i4_cast_fu_266_p1.read()));
}

void getConvolutionResult::thread_tmp_11_cast_fu_288_p1() {
    tmp_11_cast_fu_288_p1 = esl_sext<64,5>(tmp_10_fu_282_p2.read());
}

void getConvolutionResult::thread_tmp_11_fu_293_p2() {
    tmp_11_fu_293_p2 = (!tmp_10_fu_282_p2.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_10_fu_282_p2.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void getConvolutionResult::thread_tmp_12_cast_fu_299_p1() {
    tmp_12_cast_fu_299_p1 = esl_sext<64,5>(tmp_11_fu_293_p2.read());
}

void getConvolutionResult::thread_tmp_12_fu_304_p2() {
    tmp_12_fu_304_p2 = (!tmp_10_reg_417.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_10_reg_417.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void getConvolutionResult::thread_tmp_13_cast_fu_309_p1() {
    tmp_13_cast_fu_309_p1 = esl_sext<64,5>(tmp_12_fu_304_p2.read());
}

void getConvolutionResult::thread_tmp_3_2_i_fu_239_p2() {
    tmp_3_2_i_fu_239_p2 = (!tmp_2_reg_388.read().is_01() || !reg_151.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_2_reg_388.read()) * sc_bigint<32>(reg_151.read());
}

void getConvolutionResult::thread_tmp_3_fu_244_p2() {
    tmp_3_fu_244_p2 = (!tmp_3_i_reg_393.read().is_01() || !tmp_3_2_i_reg_398.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_3_i_reg_393.read()) + sc_biguint<32>(tmp_3_2_i_reg_398.read()));
}

void getConvolutionResult::thread_tmp_3_i_fu_234_p2() {
    tmp_3_i_fu_234_p2 = (!tmp_1_reg_383.read().is_01() || !reg_147.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_reg_383.read()) * sc_bigint<32>(reg_147.read());
}

void getConvolutionResult::thread_tmp_6_fu_347_p2() {
    tmp_6_fu_347_p2 = (!tmp_8_i_reg_447.read().is_01() || !tmp_fu_343_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_8_i_reg_447.read()) + sc_biguint<32>(tmp_fu_343_p2.read()));
}

void getConvolutionResult::thread_tmp_7_fu_176_p3() {
    tmp_7_fu_176_p3 = esl_concat<2,2>(ap_phi_mux_row_i_phi_fu_103_p4.read(), ap_const_lv2_0);
}

void getConvolutionResult::thread_tmp_8_1_i_fu_338_p2() {
    tmp_8_1_i_fu_338_p2 = (!tmp_5_reg_442.read().is_01() || !reg_151.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_5_reg_442.read()) * sc_bigint<32>(reg_151.read());
}

void getConvolutionResult::thread_tmp_8_cast_fu_194_p1() {
    tmp_8_cast_fu_194_p1 = esl_sext<64,5>(tmp_8_fu_188_p2.read());
}

void getConvolutionResult::thread_tmp_8_fu_188_p2() {
    tmp_8_fu_188_p2 = (!p_shl_cast_fu_184_p1.read().is_01() || !tmp_i_cast_fu_172_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_184_p1.read()) - sc_biguint<5>(tmp_i_cast_fu_172_p1.read()));
}

void getConvolutionResult::thread_tmp_9_cast_fu_205_p1() {
    tmp_9_cast_fu_205_p1 = esl_sext<64,5>(tmp_9_fu_199_p2.read());
}

void getConvolutionResult::thread_tmp_9_fu_199_p2() {
    tmp_9_fu_199_p2 = (!tmp_8_fu_188_p2.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_8_fu_188_p2.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void getConvolutionResult::thread_tmp_fu_343_p2() {
    tmp_fu_343_p2 = (!tmp_8_2_i_reg_457.read().is_01() || !tmp_8_1_i_reg_452.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_8_2_i_reg_457.read()) + sc_biguint<32>(tmp_8_1_i_reg_452.read()));
}

void getConvolutionResult::thread_tmp_i4_cast_fu_266_p1() {
    tmp_i4_cast_fu_266_p1 = esl_zext<5,2>(ap_phi_mux_row_i1_phi_fu_127_p4.read());
}

void getConvolutionResult::thread_tmp_i_cast_fu_172_p1() {
    tmp_i_cast_fu_172_p1 = esl_zext<5,2>(ap_phi_mux_row_i_phi_fu_103_p4.read());
}

void getConvolutionResult::thread_tmp_s_fu_270_p3() {
    tmp_s_fu_270_p3 = esl_concat<2,2>(ap_phi_mux_row_i1_phi_fu_127_p4.read(), ap_const_lv2_0);
}

void getConvolutionResult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_i_fu_160_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond1_i_fu_160_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_i3_fu_254_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond1_i3_fu_254_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void getConvolutionResult::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_address0\" :  \"" << array_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_ce0\" :  \"" << array_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_r_q0\" :  \"" << array_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_address1\" :  \"" << array_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_ce1\" :  \"" << array_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_r_q1\" :  \"" << array_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

