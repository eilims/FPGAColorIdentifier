// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getConvolutionResult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getConvolutionResult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getConvolutionResult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state1 = "1";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state2 = "10";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state3 = "100";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state4 = "1000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state5 = "10000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state6 = "100000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> getConvolutionResult::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_1 = "1";
const sc_lv<1> getConvolutionResult::ap_const_lv1_0 = "0";
const sc_lv<32> getConvolutionResult::ap_const_lv32_2 = "10";
const sc_lv<32> getConvolutionResult::ap_const_lv32_3 = "11";
const sc_lv<32> getConvolutionResult::ap_const_lv32_4 = "100";
const sc_lv<32> getConvolutionResult::ap_const_lv32_5 = "101";
const sc_lv<32> getConvolutionResult::ap_const_lv32_7 = "111";
const sc_lv<32> getConvolutionResult::ap_const_lv32_8 = "1000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_9 = "1001";
const sc_lv<32> getConvolutionResult::ap_const_lv32_A = "1010";
const sc_lv<32> getConvolutionResult::ap_const_lv32_B = "1011";
const sc_lv<2> getConvolutionResult::ap_const_lv2_0 = "00";
const sc_lv<1> getConvolutionResult::ap_const_lv1_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_6 = "110";
const sc_lv<32> getConvolutionResult::ap_const_lv32_C = "1100";
const sc_lv<2> getConvolutionResult::ap_const_lv2_3 = "11";
const sc_lv<2> getConvolutionResult::ap_const_lv2_1 = "1";
const sc_lv<5> getConvolutionResult::ap_const_lv5_0 = "00000";
const sc_lv<7> getConvolutionResult::ap_const_lv7_1F = "11111";
const sc_lv<32> getConvolutionResult::ap_const_lv32_5F = "1011111";
const sc_lv<7> getConvolutionResult::ap_const_lv7_5F = "1011111";
const sc_lv<96> getConvolutionResult::ap_const_lv96_10000000200000001 = "10000000000000000000000000000001000000000000000000000000000000001";
const sc_lv<96> getConvolutionResult::ap_const_lv96_0 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFFFFFFFFFEFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFF0000000000000001 = "111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000001";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFE0000000000000002 = "111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000010";
const bool getConvolutionResult::ap_const_boolean_1 = true;

getConvolutionResult::getConvolutionResult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    getConvolutionResbkb_U1 = new getConvolutionResbkb<1,1,96,96,96,2,96>("getConvolutionResbkb_U1");
    getConvolutionResbkb_U1->din0(ap_var_for_const0);
    getConvolutionResbkb_U1->din1(ap_var_for_const1);
    getConvolutionResbkb_U1->din2(ap_var_for_const2);
    getConvolutionResbkb_U1->din3(col_i_reg_103);
    getConvolutionResbkb_U1->dout(tmp_fu_263_p5);
    getConvolutionResbkb_U2 = new getConvolutionResbkb<1,1,96,96,96,2,96>("getConvolutionResbkb_U2");
    getConvolutionResbkb_U2->din0(ap_var_for_const3);
    getConvolutionResbkb_U2->din1(ap_var_for_const4);
    getConvolutionResbkb_U2->din2(ap_var_for_const3);
    getConvolutionResbkb_U2->din3(col_i7_reg_126);
    getConvolutionResbkb_U2->dout(tmp_1_fu_506_p5);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond1_i4_fu_391_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond1_i4_fu_391_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond1_i4_fu_391_p2 );
    sensitive << ( verticalResult_assig_fu_64 );
    sensitive << ( horizontalResult_ass_fu_68 );

    SC_METHOD(thread_array_r_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_2_i_fu_192_p1 );
    sensitive << ( tmp_7_i9_fu_435_p1 );

    SC_METHOD(thread_array_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_col_1_fu_429_p2);
    sensitive << ( col_i7_reg_126 );

    SC_METHOD(thread_col_fu_186_p2);
    sensitive << ( col_i_reg_103 );

    SC_METHOD(thread_exitcond1_i4_fu_391_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( row_i2_reg_115 );

    SC_METHOD(thread_exitcond1_i_fu_149_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_i_reg_92 );

    SC_METHOD(thread_exitcond_i8_fu_423_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( col_i7_reg_126 );

    SC_METHOD(thread_exitcond_i_fu_180_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( col_i_reg_103 );

    SC_METHOD(thread_row_1_fu_397_p2);
    sensitive << ( row_i2_reg_115 );

    SC_METHOD(thread_row_fu_155_p2);
    sensitive << ( row_i_reg_92 );

    SC_METHOD(thread_summation_1_fu_624_p2);
    sensitive << ( tmp_8_i1_reg_803 );
    sensitive << ( horizontalResult_ass_fu_68 );

    SC_METHOD(thread_summation_fu_381_p2);
    sensitive << ( tmp_3_i_reg_723 );
    sensitive << ( verticalResult_assig_fu_64 );

    SC_METHOD(thread_tmp_10_fu_247_p2);
    sensitive << ( tmp_7_fu_224_p3 );

    SC_METHOD(thread_tmp_11_fu_253_p1);
    sensitive << ( tmp_9_fu_240_p3 );

    SC_METHOD(thread_tmp_12_fu_341_p1);
    sensitive << ( tmp_10_reg_693 );

    SC_METHOD(thread_tmp_12_i_fu_403_p3);
    sensitive << ( row_i2_reg_115 );

    SC_METHOD(thread_tmp_13_fu_257_p2);
    sensitive << ( tmp_8_fu_232_p3 );
    sensitive << ( tmp_11_fu_253_p1 );

    SC_METHOD(thread_tmp_13_i_fu_411_p2);
    sensitive << ( tmp_12_i_fu_403_p3 );

    SC_METHOD(thread_tmp_14_fu_344_p2);
    sensitive << ( tmp_12_fu_341_p1 );

    SC_METHOD(thread_tmp_15_fu_350_p2);
    sensitive << ( tmp_13_reg_698 );
    sensitive << ( tmp_14_fu_344_p2 );

    SC_METHOD(thread_tmp_16_fu_355_p1);
    sensitive << ( tmp_15_fu_350_p2 );

    SC_METHOD(thread_tmp_17_fu_275_p2);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_6_i_reg_663 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_18_fu_279_p4);
    sensitive << ( tmp_fu_263_p5 );

    SC_METHOD(thread_tmp_19_fu_289_p2);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_6_i_reg_663 );

    SC_METHOD(thread_tmp_20_fu_293_p2);
    sensitive << ( tmp_5_i_reg_649 );

    SC_METHOD(thread_tmp_21_fu_298_p2);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_6_i_reg_663 );

    SC_METHOD(thread_tmp_22_fu_302_p3);
    sensitive << ( tmp_17_fu_275_p2 );
    sensitive << ( tmp_19_fu_289_p2 );
    sensitive << ( tmp_21_fu_298_p2 );

    SC_METHOD(thread_tmp_23_fu_310_p3);
    sensitive << ( tmp_fu_263_p5 );
    sensitive << ( tmp_17_fu_275_p2 );
    sensitive << ( tmp_18_fu_279_p4 );

    SC_METHOD(thread_tmp_24_fu_318_p3);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_17_fu_275_p2 );
    sensitive << ( tmp_20_fu_293_p2 );

    SC_METHOD(thread_tmp_25_fu_325_p2);
    sensitive << ( tmp_22_fu_302_p3 );

    SC_METHOD(thread_tmp_26_fu_331_p1);
    sensitive << ( tmp_24_fu_318_p3 );

    SC_METHOD(thread_tmp_27_fu_359_p1);
    sensitive << ( tmp_25_reg_703 );

    SC_METHOD(thread_tmp_28_fu_335_p2);
    sensitive << ( tmp_23_fu_310_p3 );
    sensitive << ( tmp_26_fu_331_p1 );

    SC_METHOD(thread_tmp_29_fu_362_p2);
    sensitive << ( tmp_27_fu_359_p1 );

    SC_METHOD(thread_tmp_2_fu_197_p2);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_6_i_reg_663 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_2_i_fu_192_p1);
    sensitive << ( col_i_reg_103 );

    SC_METHOD(thread_tmp_30_fu_368_p2);
    sensitive << ( tmp_28_reg_708 );
    sensitive << ( tmp_29_fu_362_p2 );

    SC_METHOD(thread_tmp_31_fu_373_p1);
    sensitive << ( tmp_30_fu_368_p2 );

    SC_METHOD(thread_tmp_32_fu_440_p2);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_13_i_reg_750 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp_33_fu_444_p4);
    sensitive << ( array_r_q0 );

    SC_METHOD(thread_tmp_34_fu_454_p2);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_13_i_reg_750 );

    SC_METHOD(thread_tmp_35_fu_458_p2);
    sensitive << ( tmp_12_i_reg_736 );

    SC_METHOD(thread_tmp_36_fu_463_p2);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_13_i_reg_750 );

    SC_METHOD(thread_tmp_37_fu_467_p3);
    sensitive << ( tmp_32_fu_440_p2 );
    sensitive << ( tmp_34_fu_454_p2 );
    sensitive << ( tmp_36_fu_463_p2 );

    SC_METHOD(thread_tmp_38_fu_475_p3);
    sensitive << ( array_r_q0 );
    sensitive << ( tmp_32_fu_440_p2 );
    sensitive << ( tmp_33_fu_444_p4 );

    SC_METHOD(thread_tmp_39_fu_483_p3);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_32_fu_440_p2 );
    sensitive << ( tmp_35_fu_458_p2 );

    SC_METHOD(thread_tmp_3_fu_201_p4);
    sensitive << ( array_r_q0 );

    SC_METHOD(thread_tmp_3_i_fu_377_p2);
    sensitive << ( tmp_16_reg_713 );
    sensitive << ( tmp_31_reg_718 );

    SC_METHOD(thread_tmp_40_fu_490_p2);
    sensitive << ( tmp_37_fu_467_p3 );

    SC_METHOD(thread_tmp_41_fu_496_p1);
    sensitive << ( tmp_39_fu_483_p3 );

    SC_METHOD(thread_tmp_42_fu_584_p1);
    sensitive << ( tmp_40_reg_773 );

    SC_METHOD(thread_tmp_43_fu_500_p2);
    sensitive << ( tmp_38_fu_475_p3 );
    sensitive << ( tmp_41_fu_496_p1 );

    SC_METHOD(thread_tmp_44_fu_587_p2);
    sensitive << ( tmp_42_fu_584_p1 );

    SC_METHOD(thread_tmp_45_fu_593_p2);
    sensitive << ( tmp_43_reg_778 );
    sensitive << ( tmp_44_fu_587_p2 );

    SC_METHOD(thread_tmp_46_fu_598_p1);
    sensitive << ( tmp_45_fu_593_p2 );

    SC_METHOD(thread_tmp_47_fu_518_p2);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_13_i_reg_750 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp_48_fu_522_p4);
    sensitive << ( tmp_1_fu_506_p5 );

    SC_METHOD(thread_tmp_49_fu_532_p2);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_13_i_reg_750 );

    SC_METHOD(thread_tmp_4_fu_211_p2);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_6_i_reg_663 );

    SC_METHOD(thread_tmp_50_fu_536_p2);
    sensitive << ( tmp_12_i_reg_736 );

    SC_METHOD(thread_tmp_51_fu_541_p2);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_13_i_reg_750 );

    SC_METHOD(thread_tmp_52_fu_545_p3);
    sensitive << ( tmp_47_fu_518_p2 );
    sensitive << ( tmp_49_fu_532_p2 );
    sensitive << ( tmp_51_fu_541_p2 );

    SC_METHOD(thread_tmp_53_fu_553_p3);
    sensitive << ( tmp_1_fu_506_p5 );
    sensitive << ( tmp_47_fu_518_p2 );
    sensitive << ( tmp_48_fu_522_p4 );

    SC_METHOD(thread_tmp_54_fu_561_p3);
    sensitive << ( tmp_12_i_reg_736 );
    sensitive << ( tmp_47_fu_518_p2 );
    sensitive << ( tmp_50_fu_536_p2 );

    SC_METHOD(thread_tmp_55_fu_568_p2);
    sensitive << ( tmp_52_fu_545_p3 );

    SC_METHOD(thread_tmp_56_fu_574_p1);
    sensitive << ( tmp_54_fu_561_p3 );

    SC_METHOD(thread_tmp_57_fu_602_p1);
    sensitive << ( tmp_55_reg_783 );

    SC_METHOD(thread_tmp_58_fu_578_p2);
    sensitive << ( tmp_53_fu_553_p3 );
    sensitive << ( tmp_56_fu_574_p1 );

    SC_METHOD(thread_tmp_59_fu_605_p2);
    sensitive << ( tmp_57_fu_602_p1 );

    SC_METHOD(thread_tmp_5_fu_215_p2);
    sensitive << ( tmp_5_i_reg_649 );

    SC_METHOD(thread_tmp_5_i_fu_161_p3);
    sensitive << ( row_i_reg_92 );

    SC_METHOD(thread_tmp_60_fu_611_p2);
    sensitive << ( tmp_58_reg_788 );
    sensitive << ( tmp_59_fu_605_p2 );

    SC_METHOD(thread_tmp_61_fu_616_p1);
    sensitive << ( tmp_60_fu_611_p2 );

    SC_METHOD(thread_tmp_6_fu_220_p2);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_6_i_reg_663 );

    SC_METHOD(thread_tmp_6_i_fu_169_p2);
    sensitive << ( tmp_5_i_fu_161_p3 );

    SC_METHOD(thread_tmp_7_fu_224_p3);
    sensitive << ( tmp_2_fu_197_p2 );
    sensitive << ( tmp_4_fu_211_p2 );
    sensitive << ( tmp_6_fu_220_p2 );

    SC_METHOD(thread_tmp_7_i9_fu_435_p1);
    sensitive << ( col_i7_reg_126 );

    SC_METHOD(thread_tmp_8_fu_232_p3);
    sensitive << ( array_r_q0 );
    sensitive << ( tmp_2_fu_197_p2 );
    sensitive << ( tmp_3_fu_201_p4 );

    SC_METHOD(thread_tmp_8_i1_fu_620_p2);
    sensitive << ( tmp_46_reg_793 );
    sensitive << ( tmp_61_reg_798 );

    SC_METHOD(thread_tmp_9_fu_240_p3);
    sensitive << ( tmp_5_i_reg_649 );
    sensitive << ( tmp_2_fu_197_p2 );
    sensitive << ( tmp_5_fu_215_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_i_fu_149_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_i_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond1_i4_fu_391_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i8_fu_423_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getConvolutionResult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, array_r_address0, "(port)array_r_address0");
    sc_trace(mVcdFile, array_r_ce0, "(port)array_r_ce0");
    sc_trace(mVcdFile, array_r_q0, "(port)array_r_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, row_fu_155_p2, "row_fu_155_p2");
    sc_trace(mVcdFile, row_reg_644, "row_reg_644");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_5_i_fu_161_p3, "tmp_5_i_fu_161_p3");
    sc_trace(mVcdFile, tmp_5_i_reg_649, "tmp_5_i_reg_649");
    sc_trace(mVcdFile, exitcond1_i_fu_149_p2, "exitcond1_i_fu_149_p2");
    sc_trace(mVcdFile, tmp_6_i_fu_169_p2, "tmp_6_i_fu_169_p2");
    sc_trace(mVcdFile, tmp_6_i_reg_663, "tmp_6_i_reg_663");
    sc_trace(mVcdFile, col_fu_186_p2, "col_fu_186_p2");
    sc_trace(mVcdFile, col_reg_683, "col_reg_683");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_i_fu_180_p2, "exitcond_i_fu_180_p2");
    sc_trace(mVcdFile, tmp_10_fu_247_p2, "tmp_10_fu_247_p2");
    sc_trace(mVcdFile, tmp_10_reg_693, "tmp_10_reg_693");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_13_fu_257_p2, "tmp_13_fu_257_p2");
    sc_trace(mVcdFile, tmp_13_reg_698, "tmp_13_reg_698");
    sc_trace(mVcdFile, tmp_25_fu_325_p2, "tmp_25_fu_325_p2");
    sc_trace(mVcdFile, tmp_25_reg_703, "tmp_25_reg_703");
    sc_trace(mVcdFile, tmp_28_fu_335_p2, "tmp_28_fu_335_p2");
    sc_trace(mVcdFile, tmp_28_reg_708, "tmp_28_reg_708");
    sc_trace(mVcdFile, tmp_16_fu_355_p1, "tmp_16_fu_355_p1");
    sc_trace(mVcdFile, tmp_16_reg_713, "tmp_16_reg_713");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_31_fu_373_p1, "tmp_31_fu_373_p1");
    sc_trace(mVcdFile, tmp_31_reg_718, "tmp_31_reg_718");
    sc_trace(mVcdFile, tmp_3_i_fu_377_p2, "tmp_3_i_fu_377_p2");
    sc_trace(mVcdFile, tmp_3_i_reg_723, "tmp_3_i_reg_723");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, row_1_fu_397_p2, "row_1_fu_397_p2");
    sc_trace(mVcdFile, row_1_reg_731, "row_1_reg_731");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_12_i_fu_403_p3, "tmp_12_i_fu_403_p3");
    sc_trace(mVcdFile, tmp_12_i_reg_736, "tmp_12_i_reg_736");
    sc_trace(mVcdFile, exitcond1_i4_fu_391_p2, "exitcond1_i4_fu_391_p2");
    sc_trace(mVcdFile, tmp_13_i_fu_411_p2, "tmp_13_i_fu_411_p2");
    sc_trace(mVcdFile, tmp_13_i_reg_750, "tmp_13_i_reg_750");
    sc_trace(mVcdFile, col_1_fu_429_p2, "col_1_fu_429_p2");
    sc_trace(mVcdFile, col_1_reg_763, "col_1_reg_763");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond_i8_fu_423_p2, "exitcond_i8_fu_423_p2");
    sc_trace(mVcdFile, tmp_40_fu_490_p2, "tmp_40_fu_490_p2");
    sc_trace(mVcdFile, tmp_40_reg_773, "tmp_40_reg_773");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_43_fu_500_p2, "tmp_43_fu_500_p2");
    sc_trace(mVcdFile, tmp_43_reg_778, "tmp_43_reg_778");
    sc_trace(mVcdFile, tmp_55_fu_568_p2, "tmp_55_fu_568_p2");
    sc_trace(mVcdFile, tmp_55_reg_783, "tmp_55_reg_783");
    sc_trace(mVcdFile, tmp_58_fu_578_p2, "tmp_58_fu_578_p2");
    sc_trace(mVcdFile, tmp_58_reg_788, "tmp_58_reg_788");
    sc_trace(mVcdFile, tmp_46_fu_598_p1, "tmp_46_fu_598_p1");
    sc_trace(mVcdFile, tmp_46_reg_793, "tmp_46_reg_793");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_61_fu_616_p1, "tmp_61_fu_616_p1");
    sc_trace(mVcdFile, tmp_61_reg_798, "tmp_61_reg_798");
    sc_trace(mVcdFile, tmp_8_i1_fu_620_p2, "tmp_8_i1_fu_620_p2");
    sc_trace(mVcdFile, tmp_8_i1_reg_803, "tmp_8_i1_reg_803");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, row_i_reg_92, "row_i_reg_92");
    sc_trace(mVcdFile, col_i_reg_103, "col_i_reg_103");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, row_i2_reg_115, "row_i2_reg_115");
    sc_trace(mVcdFile, col_i7_reg_126, "col_i7_reg_126");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_2_i_fu_192_p1, "tmp_2_i_fu_192_p1");
    sc_trace(mVcdFile, tmp_7_i9_fu_435_p1, "tmp_7_i9_fu_435_p1");
    sc_trace(mVcdFile, verticalResult_assig_fu_64, "verticalResult_assig_fu_64");
    sc_trace(mVcdFile, summation_fu_381_p2, "summation_fu_381_p2");
    sc_trace(mVcdFile, horizontalResult_ass_fu_68, "horizontalResult_ass_fu_68");
    sc_trace(mVcdFile, summation_1_fu_624_p2, "summation_1_fu_624_p2");
    sc_trace(mVcdFile, tmp_2_fu_197_p2, "tmp_2_fu_197_p2");
    sc_trace(mVcdFile, tmp_4_fu_211_p2, "tmp_4_fu_211_p2");
    sc_trace(mVcdFile, tmp_6_fu_220_p2, "tmp_6_fu_220_p2");
    sc_trace(mVcdFile, tmp_3_fu_201_p4, "tmp_3_fu_201_p4");
    sc_trace(mVcdFile, tmp_5_fu_215_p2, "tmp_5_fu_215_p2");
    sc_trace(mVcdFile, tmp_7_fu_224_p3, "tmp_7_fu_224_p3");
    sc_trace(mVcdFile, tmp_9_fu_240_p3, "tmp_9_fu_240_p3");
    sc_trace(mVcdFile, tmp_8_fu_232_p3, "tmp_8_fu_232_p3");
    sc_trace(mVcdFile, tmp_11_fu_253_p1, "tmp_11_fu_253_p1");
    sc_trace(mVcdFile, tmp_fu_263_p5, "tmp_fu_263_p5");
    sc_trace(mVcdFile, tmp_17_fu_275_p2, "tmp_17_fu_275_p2");
    sc_trace(mVcdFile, tmp_19_fu_289_p2, "tmp_19_fu_289_p2");
    sc_trace(mVcdFile, tmp_21_fu_298_p2, "tmp_21_fu_298_p2");
    sc_trace(mVcdFile, tmp_18_fu_279_p4, "tmp_18_fu_279_p4");
    sc_trace(mVcdFile, tmp_20_fu_293_p2, "tmp_20_fu_293_p2");
    sc_trace(mVcdFile, tmp_22_fu_302_p3, "tmp_22_fu_302_p3");
    sc_trace(mVcdFile, tmp_24_fu_318_p3, "tmp_24_fu_318_p3");
    sc_trace(mVcdFile, tmp_23_fu_310_p3, "tmp_23_fu_310_p3");
    sc_trace(mVcdFile, tmp_26_fu_331_p1, "tmp_26_fu_331_p1");
    sc_trace(mVcdFile, tmp_12_fu_341_p1, "tmp_12_fu_341_p1");
    sc_trace(mVcdFile, tmp_14_fu_344_p2, "tmp_14_fu_344_p2");
    sc_trace(mVcdFile, tmp_15_fu_350_p2, "tmp_15_fu_350_p2");
    sc_trace(mVcdFile, tmp_27_fu_359_p1, "tmp_27_fu_359_p1");
    sc_trace(mVcdFile, tmp_29_fu_362_p2, "tmp_29_fu_362_p2");
    sc_trace(mVcdFile, tmp_30_fu_368_p2, "tmp_30_fu_368_p2");
    sc_trace(mVcdFile, tmp_32_fu_440_p2, "tmp_32_fu_440_p2");
    sc_trace(mVcdFile, tmp_34_fu_454_p2, "tmp_34_fu_454_p2");
    sc_trace(mVcdFile, tmp_36_fu_463_p2, "tmp_36_fu_463_p2");
    sc_trace(mVcdFile, tmp_33_fu_444_p4, "tmp_33_fu_444_p4");
    sc_trace(mVcdFile, tmp_35_fu_458_p2, "tmp_35_fu_458_p2");
    sc_trace(mVcdFile, tmp_37_fu_467_p3, "tmp_37_fu_467_p3");
    sc_trace(mVcdFile, tmp_39_fu_483_p3, "tmp_39_fu_483_p3");
    sc_trace(mVcdFile, tmp_38_fu_475_p3, "tmp_38_fu_475_p3");
    sc_trace(mVcdFile, tmp_41_fu_496_p1, "tmp_41_fu_496_p1");
    sc_trace(mVcdFile, tmp_1_fu_506_p5, "tmp_1_fu_506_p5");
    sc_trace(mVcdFile, tmp_47_fu_518_p2, "tmp_47_fu_518_p2");
    sc_trace(mVcdFile, tmp_49_fu_532_p2, "tmp_49_fu_532_p2");
    sc_trace(mVcdFile, tmp_51_fu_541_p2, "tmp_51_fu_541_p2");
    sc_trace(mVcdFile, tmp_48_fu_522_p4, "tmp_48_fu_522_p4");
    sc_trace(mVcdFile, tmp_50_fu_536_p2, "tmp_50_fu_536_p2");
    sc_trace(mVcdFile, tmp_52_fu_545_p3, "tmp_52_fu_545_p3");
    sc_trace(mVcdFile, tmp_54_fu_561_p3, "tmp_54_fu_561_p3");
    sc_trace(mVcdFile, tmp_53_fu_553_p3, "tmp_53_fu_553_p3");
    sc_trace(mVcdFile, tmp_56_fu_574_p1, "tmp_56_fu_574_p1");
    sc_trace(mVcdFile, tmp_42_fu_584_p1, "tmp_42_fu_584_p1");
    sc_trace(mVcdFile, tmp_44_fu_587_p2, "tmp_44_fu_587_p2");
    sc_trace(mVcdFile, tmp_45_fu_593_p2, "tmp_45_fu_593_p2");
    sc_trace(mVcdFile, tmp_57_fu_602_p1, "tmp_57_fu_602_p1");
    sc_trace(mVcdFile, tmp_59_fu_605_p2, "tmp_59_fu_605_p2");
    sc_trace(mVcdFile, tmp_60_fu_611_p2, "tmp_60_fu_611_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("getConvolutionResult.hdltvin.dat");
    mHdltvoutHandle.open("getConvolutionResult.hdltvout.dat");
}

getConvolutionResult::~getConvolutionResult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete getConvolutionResbkb_U1;
    delete getConvolutionResbkb_U2;
}

void getConvolutionResult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv96_10000000200000001;
}

void getConvolutionResult::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv96_0;
}

void getConvolutionResult::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv96_FFFFFFFFFFFFFFFEFFFFFFFF;
}

void getConvolutionResult::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv96_FFFFFFFF0000000000000001;
}

void getConvolutionResult::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv96_FFFFFFFE0000000000000002;
}

void getConvolutionResult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        col_i7_reg_126 = col_1_reg_763.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i4_fu_391_p2.read()))) {
        col_i7_reg_126 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        col_i_reg_103 = col_reg_683.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_i_fu_149_p2.read(), ap_const_lv1_0))) {
        col_i_reg_103 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        horizontalResult_ass_fu_68 = summation_1_fu_624_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_i_fu_149_p2.read(), ap_const_lv1_1))) {
        horizontalResult_ass_fu_68 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_i_fu_149_p2.read(), ap_const_lv1_1))) {
        row_i2_reg_115 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(exitcond_i8_fu_423_p2.read(), ap_const_lv1_1))) {
        row_i2_reg_115 = row_1_reg_731.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_180_p2.read(), ap_const_lv1_1))) {
        row_i_reg_92 = row_reg_644.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        row_i_reg_92 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        verticalResult_assig_fu_64 = summation_fu_381_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        verticalResult_assig_fu_64 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        col_1_reg_763 = col_1_fu_429_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        col_reg_683 = col_fu_186_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        row_1_reg_731 = row_1_fu_397_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_reg_644 = row_fu_155_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_10_reg_693 = tmp_10_fu_247_p2.read();
        tmp_13_reg_698 = tmp_13_fu_257_p2.read();
        tmp_25_reg_703 = tmp_25_fu_325_p2.read();
        tmp_28_reg_708 = tmp_28_fu_335_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i4_fu_391_p2.read()))) {
        tmp_12_i_reg_736 = tmp_12_i_fu_403_p3.read();
        tmp_13_i_reg_750 = tmp_13_i_fu_411_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_16_reg_713 = tmp_16_fu_355_p1.read();
        tmp_31_reg_718 = tmp_31_fu_373_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_3_i_reg_723 = tmp_3_i_fu_377_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_40_reg_773 = tmp_40_fu_490_p2.read();
        tmp_43_reg_778 = tmp_43_fu_500_p2.read();
        tmp_55_reg_783 = tmp_55_fu_568_p2.read();
        tmp_58_reg_788 = tmp_58_fu_578_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_46_reg_793 = tmp_46_fu_598_p1.read();
        tmp_61_reg_798 = tmp_61_fu_616_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_149_p2.read(), ap_const_lv1_0))) {
        tmp_5_i_reg_649 = tmp_5_i_fu_161_p3.read();
        tmp_6_i_reg_663 = tmp_6_i_fu_169_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_8_i1_reg_803 = tmp_8_i1_fu_620_p2.read();
    }
}

void getConvolutionResult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getConvolutionResult::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void getConvolutionResult::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void getConvolutionResult::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void getConvolutionResult::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void getConvolutionResult::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void getConvolutionResult::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void getConvolutionResult::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void getConvolutionResult::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void getConvolutionResult::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void getConvolutionResult::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void getConvolutionResult::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void getConvolutionResult::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void getConvolutionResult::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(exitcond1_i4_fu_391_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(exitcond1_i4_fu_391_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_return() {
    ap_return = (!horizontalResult_ass_fu_68.read().is_01() || !verticalResult_assig_fu_64.read().is_01())? sc_lv<32>(): (sc_biguint<32>(horizontalResult_ass_fu_68.read()) + sc_biguint<32>(verticalResult_assig_fu_64.read()));
}

void getConvolutionResult::thread_array_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        array_r_address0 =  (sc_lv<2>) (tmp_7_i9_fu_435_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        array_r_address0 =  (sc_lv<2>) (tmp_2_i_fu_192_p1.read());
    } else {
        array_r_address0 = "XX";
    }
}

void getConvolutionResult::thread_array_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        array_r_ce0 = ap_const_logic_1;
    } else {
        array_r_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_col_1_fu_429_p2() {
    col_1_fu_429_p2 = (!col_i7_reg_126.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(col_i7_reg_126.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_col_fu_186_p2() {
    col_fu_186_p2 = (!col_i_reg_103.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(col_i_reg_103.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_exitcond1_i4_fu_391_p2() {
    exitcond1_i4_fu_391_p2 = (!row_i2_reg_115.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(row_i2_reg_115.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_exitcond1_i_fu_149_p2() {
    exitcond1_i_fu_149_p2 = (!row_i_reg_92.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(row_i_reg_92.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_exitcond_i8_fu_423_p2() {
    exitcond_i8_fu_423_p2 = (!col_i7_reg_126.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_i7_reg_126.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_exitcond_i_fu_180_p2() {
    exitcond_i_fu_180_p2 = (!col_i_reg_103.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_i_reg_103.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_row_1_fu_397_p2() {
    row_1_fu_397_p2 = (!row_i2_reg_115.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(row_i2_reg_115.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_row_fu_155_p2() {
    row_fu_155_p2 = (!row_i_reg_92.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(row_i_reg_92.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_summation_1_fu_624_p2() {
    summation_1_fu_624_p2 = (!horizontalResult_ass_fu_68.read().is_01() || !tmp_8_i1_reg_803.read().is_01())? sc_lv<32>(): (sc_biguint<32>(horizontalResult_ass_fu_68.read()) + sc_biguint<32>(tmp_8_i1_reg_803.read()));
}

void getConvolutionResult::thread_summation_fu_381_p2() {
    summation_fu_381_p2 = (!verticalResult_assig_fu_64.read().is_01() || !tmp_3_i_reg_723.read().is_01())? sc_lv<32>(): (sc_biguint<32>(verticalResult_assig_fu_64.read()) + sc_biguint<32>(tmp_3_i_reg_723.read()));
}

void getConvolutionResult::thread_tmp_10_fu_247_p2() {
    tmp_10_fu_247_p2 = (!ap_const_lv7_5F.is_01() || !tmp_7_fu_224_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_7_fu_224_p3.read()));
}

void getConvolutionResult::thread_tmp_11_fu_253_p1() {
    tmp_11_fu_253_p1 = esl_zext<96,7>(tmp_9_fu_240_p3.read());
}

void getConvolutionResult::thread_tmp_12_fu_341_p1() {
    tmp_12_fu_341_p1 = esl_zext<96,7>(tmp_10_reg_693.read());
}

void getConvolutionResult::thread_tmp_12_i_fu_403_p3() {
    tmp_12_i_fu_403_p3 = esl_concat<2,5>(row_i2_reg_115.read(), ap_const_lv5_0);
}

void getConvolutionResult::thread_tmp_13_fu_257_p2() {
    tmp_13_fu_257_p2 = (!tmp_11_fu_253_p1.read().is_01())? sc_lv<96>(): tmp_8_fu_232_p3.read() >> (unsigned short)tmp_11_fu_253_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_13_i_fu_411_p2() {
    tmp_13_i_fu_411_p2 = (tmp_12_i_fu_403_p3.read() | ap_const_lv7_1F);
}

void getConvolutionResult::thread_tmp_14_fu_344_p2() {
    tmp_14_fu_344_p2 = (!tmp_12_fu_341_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_12_fu_341_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_15_fu_350_p2() {
    tmp_15_fu_350_p2 = (tmp_13_reg_698.read() & tmp_14_fu_344_p2.read());
}

void getConvolutionResult::thread_tmp_16_fu_355_p1() {
    tmp_16_fu_355_p1 = tmp_15_fu_350_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_17_fu_275_p2() {
    tmp_17_fu_275_p2 = (!tmp_5_i_reg_649.read().is_01() || !tmp_6_i_reg_663.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_5_i_reg_649.read()) > sc_biguint<7>(tmp_6_i_reg_663.read()));
}

void getConvolutionResult::thread_tmp_18_fu_279_p4() {
    tmp_18_fu_279_p4 = tmp_fu_263_p5.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_19_fu_289_p2() {
    tmp_19_fu_289_p2 = (!tmp_5_i_reg_649.read().is_01() || !tmp_6_i_reg_663.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_5_i_reg_649.read()) - sc_biguint<7>(tmp_6_i_reg_663.read()));
}

void getConvolutionResult::thread_tmp_20_fu_293_p2() {
    tmp_20_fu_293_p2 = (!ap_const_lv7_5F.is_01() || !tmp_5_i_reg_649.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_5_i_reg_649.read()));
}

void getConvolutionResult::thread_tmp_21_fu_298_p2() {
    tmp_21_fu_298_p2 = (!tmp_6_i_reg_663.read().is_01() || !tmp_5_i_reg_649.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_6_i_reg_663.read()) - sc_biguint<7>(tmp_5_i_reg_649.read()));
}

void getConvolutionResult::thread_tmp_22_fu_302_p3() {
    tmp_22_fu_302_p3 = (!tmp_17_fu_275_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_17_fu_275_p2.read()[0].to_bool())? tmp_19_fu_289_p2.read(): tmp_21_fu_298_p2.read());
}

void getConvolutionResult::thread_tmp_23_fu_310_p3() {
    tmp_23_fu_310_p3 = (!tmp_17_fu_275_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_17_fu_275_p2.read()[0].to_bool())? tmp_18_fu_279_p4.read(): tmp_fu_263_p5.read());
}

void getConvolutionResult::thread_tmp_24_fu_318_p3() {
    tmp_24_fu_318_p3 = (!tmp_17_fu_275_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_17_fu_275_p2.read()[0].to_bool())? tmp_20_fu_293_p2.read(): tmp_5_i_reg_649.read());
}

void getConvolutionResult::thread_tmp_25_fu_325_p2() {
    tmp_25_fu_325_p2 = (!ap_const_lv7_5F.is_01() || !tmp_22_fu_302_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_22_fu_302_p3.read()));
}

void getConvolutionResult::thread_tmp_26_fu_331_p1() {
    tmp_26_fu_331_p1 = esl_zext<96,7>(tmp_24_fu_318_p3.read());
}

void getConvolutionResult::thread_tmp_27_fu_359_p1() {
    tmp_27_fu_359_p1 = esl_zext<96,7>(tmp_25_reg_703.read());
}

void getConvolutionResult::thread_tmp_28_fu_335_p2() {
    tmp_28_fu_335_p2 = (!tmp_26_fu_331_p1.read().is_01())? sc_lv<96>(): tmp_23_fu_310_p3.read() >> (unsigned short)tmp_26_fu_331_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_29_fu_362_p2() {
    tmp_29_fu_362_p2 = (!tmp_27_fu_359_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_27_fu_359_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_2_fu_197_p2() {
    tmp_2_fu_197_p2 = (!tmp_5_i_reg_649.read().is_01() || !tmp_6_i_reg_663.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_5_i_reg_649.read()) > sc_biguint<7>(tmp_6_i_reg_663.read()));
}

void getConvolutionResult::thread_tmp_2_i_fu_192_p1() {
    tmp_2_i_fu_192_p1 = esl_zext<64,2>(col_i_reg_103.read());
}

void getConvolutionResult::thread_tmp_30_fu_368_p2() {
    tmp_30_fu_368_p2 = (tmp_28_reg_708.read() & tmp_29_fu_362_p2.read());
}

void getConvolutionResult::thread_tmp_31_fu_373_p1() {
    tmp_31_fu_373_p1 = tmp_30_fu_368_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_32_fu_440_p2() {
    tmp_32_fu_440_p2 = (!tmp_12_i_reg_736.read().is_01() || !tmp_13_i_reg_750.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_12_i_reg_736.read()) > sc_biguint<7>(tmp_13_i_reg_750.read()));
}

void getConvolutionResult::thread_tmp_33_fu_444_p4() {
    tmp_33_fu_444_p4 = array_r_q0.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_34_fu_454_p2() {
    tmp_34_fu_454_p2 = (!tmp_12_i_reg_736.read().is_01() || !tmp_13_i_reg_750.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_12_i_reg_736.read()) - sc_biguint<7>(tmp_13_i_reg_750.read()));
}

void getConvolutionResult::thread_tmp_35_fu_458_p2() {
    tmp_35_fu_458_p2 = (!ap_const_lv7_5F.is_01() || !tmp_12_i_reg_736.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_12_i_reg_736.read()));
}

void getConvolutionResult::thread_tmp_36_fu_463_p2() {
    tmp_36_fu_463_p2 = (!tmp_13_i_reg_750.read().is_01() || !tmp_12_i_reg_736.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_13_i_reg_750.read()) - sc_biguint<7>(tmp_12_i_reg_736.read()));
}

void getConvolutionResult::thread_tmp_37_fu_467_p3() {
    tmp_37_fu_467_p3 = (!tmp_32_fu_440_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_32_fu_440_p2.read()[0].to_bool())? tmp_34_fu_454_p2.read(): tmp_36_fu_463_p2.read());
}

void getConvolutionResult::thread_tmp_38_fu_475_p3() {
    tmp_38_fu_475_p3 = (!tmp_32_fu_440_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_32_fu_440_p2.read()[0].to_bool())? tmp_33_fu_444_p4.read(): array_r_q0.read());
}

void getConvolutionResult::thread_tmp_39_fu_483_p3() {
    tmp_39_fu_483_p3 = (!tmp_32_fu_440_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_32_fu_440_p2.read()[0].to_bool())? tmp_35_fu_458_p2.read(): tmp_12_i_reg_736.read());
}

void getConvolutionResult::thread_tmp_3_fu_201_p4() {
    tmp_3_fu_201_p4 = array_r_q0.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_3_i_fu_377_p2() {
    tmp_3_i_fu_377_p2 = (!tmp_31_reg_718.read().is_01() || !tmp_16_reg_713.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_31_reg_718.read()) * sc_bigint<32>(tmp_16_reg_713.read());
}

void getConvolutionResult::thread_tmp_40_fu_490_p2() {
    tmp_40_fu_490_p2 = (!ap_const_lv7_5F.is_01() || !tmp_37_fu_467_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_37_fu_467_p3.read()));
}

void getConvolutionResult::thread_tmp_41_fu_496_p1() {
    tmp_41_fu_496_p1 = esl_zext<96,7>(tmp_39_fu_483_p3.read());
}

void getConvolutionResult::thread_tmp_42_fu_584_p1() {
    tmp_42_fu_584_p1 = esl_zext<96,7>(tmp_40_reg_773.read());
}

void getConvolutionResult::thread_tmp_43_fu_500_p2() {
    tmp_43_fu_500_p2 = (!tmp_41_fu_496_p1.read().is_01())? sc_lv<96>(): tmp_38_fu_475_p3.read() >> (unsigned short)tmp_41_fu_496_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_44_fu_587_p2() {
    tmp_44_fu_587_p2 = (!tmp_42_fu_584_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_42_fu_584_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_45_fu_593_p2() {
    tmp_45_fu_593_p2 = (tmp_43_reg_778.read() & tmp_44_fu_587_p2.read());
}

void getConvolutionResult::thread_tmp_46_fu_598_p1() {
    tmp_46_fu_598_p1 = tmp_45_fu_593_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_47_fu_518_p2() {
    tmp_47_fu_518_p2 = (!tmp_12_i_reg_736.read().is_01() || !tmp_13_i_reg_750.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_12_i_reg_736.read()) > sc_biguint<7>(tmp_13_i_reg_750.read()));
}

void getConvolutionResult::thread_tmp_48_fu_522_p4() {
    tmp_48_fu_522_p4 = tmp_1_fu_506_p5.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_49_fu_532_p2() {
    tmp_49_fu_532_p2 = (!tmp_12_i_reg_736.read().is_01() || !tmp_13_i_reg_750.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_12_i_reg_736.read()) - sc_biguint<7>(tmp_13_i_reg_750.read()));
}

void getConvolutionResult::thread_tmp_4_fu_211_p2() {
    tmp_4_fu_211_p2 = (!tmp_5_i_reg_649.read().is_01() || !tmp_6_i_reg_663.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_5_i_reg_649.read()) - sc_biguint<7>(tmp_6_i_reg_663.read()));
}

void getConvolutionResult::thread_tmp_50_fu_536_p2() {
    tmp_50_fu_536_p2 = (!ap_const_lv7_5F.is_01() || !tmp_12_i_reg_736.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_12_i_reg_736.read()));
}

void getConvolutionResult::thread_tmp_51_fu_541_p2() {
    tmp_51_fu_541_p2 = (!tmp_13_i_reg_750.read().is_01() || !tmp_12_i_reg_736.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_13_i_reg_750.read()) - sc_biguint<7>(tmp_12_i_reg_736.read()));
}

void getConvolutionResult::thread_tmp_52_fu_545_p3() {
    tmp_52_fu_545_p3 = (!tmp_47_fu_518_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_47_fu_518_p2.read()[0].to_bool())? tmp_49_fu_532_p2.read(): tmp_51_fu_541_p2.read());
}

void getConvolutionResult::thread_tmp_53_fu_553_p3() {
    tmp_53_fu_553_p3 = (!tmp_47_fu_518_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_47_fu_518_p2.read()[0].to_bool())? tmp_48_fu_522_p4.read(): tmp_1_fu_506_p5.read());
}

void getConvolutionResult::thread_tmp_54_fu_561_p3() {
    tmp_54_fu_561_p3 = (!tmp_47_fu_518_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_47_fu_518_p2.read()[0].to_bool())? tmp_50_fu_536_p2.read(): tmp_12_i_reg_736.read());
}

void getConvolutionResult::thread_tmp_55_fu_568_p2() {
    tmp_55_fu_568_p2 = (!ap_const_lv7_5F.is_01() || !tmp_52_fu_545_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_52_fu_545_p3.read()));
}

void getConvolutionResult::thread_tmp_56_fu_574_p1() {
    tmp_56_fu_574_p1 = esl_zext<96,7>(tmp_54_fu_561_p3.read());
}

void getConvolutionResult::thread_tmp_57_fu_602_p1() {
    tmp_57_fu_602_p1 = esl_zext<96,7>(tmp_55_reg_783.read());
}

void getConvolutionResult::thread_tmp_58_fu_578_p2() {
    tmp_58_fu_578_p2 = (!tmp_56_fu_574_p1.read().is_01())? sc_lv<96>(): tmp_53_fu_553_p3.read() >> (unsigned short)tmp_56_fu_574_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_59_fu_605_p2() {
    tmp_59_fu_605_p2 = (!tmp_57_fu_602_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_57_fu_602_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_5_fu_215_p2() {
    tmp_5_fu_215_p2 = (!ap_const_lv7_5F.is_01() || !tmp_5_i_reg_649.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_5_i_reg_649.read()));
}

void getConvolutionResult::thread_tmp_5_i_fu_161_p3() {
    tmp_5_i_fu_161_p3 = esl_concat<2,5>(row_i_reg_92.read(), ap_const_lv5_0);
}

void getConvolutionResult::thread_tmp_60_fu_611_p2() {
    tmp_60_fu_611_p2 = (tmp_58_reg_788.read() & tmp_59_fu_605_p2.read());
}

void getConvolutionResult::thread_tmp_61_fu_616_p1() {
    tmp_61_fu_616_p1 = tmp_60_fu_611_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_6_fu_220_p2() {
    tmp_6_fu_220_p2 = (!tmp_6_i_reg_663.read().is_01() || !tmp_5_i_reg_649.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_6_i_reg_663.read()) - sc_biguint<7>(tmp_5_i_reg_649.read()));
}

void getConvolutionResult::thread_tmp_6_i_fu_169_p2() {
    tmp_6_i_fu_169_p2 = (tmp_5_i_fu_161_p3.read() | ap_const_lv7_1F);
}

void getConvolutionResult::thread_tmp_7_fu_224_p3() {
    tmp_7_fu_224_p3 = (!tmp_2_fu_197_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_2_fu_197_p2.read()[0].to_bool())? tmp_4_fu_211_p2.read(): tmp_6_fu_220_p2.read());
}

void getConvolutionResult::thread_tmp_7_i9_fu_435_p1() {
    tmp_7_i9_fu_435_p1 = esl_zext<64,2>(col_i7_reg_126.read());
}

void getConvolutionResult::thread_tmp_8_fu_232_p3() {
    tmp_8_fu_232_p3 = (!tmp_2_fu_197_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_2_fu_197_p2.read()[0].to_bool())? tmp_3_fu_201_p4.read(): array_r_q0.read());
}

void getConvolutionResult::thread_tmp_8_i1_fu_620_p2() {
    tmp_8_i1_fu_620_p2 = (!tmp_61_reg_798.read().is_01() || !tmp_46_reg_793.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_61_reg_798.read()) * sc_bigint<32>(tmp_46_reg_793.read());
}

void getConvolutionResult::thread_tmp_9_fu_240_p3() {
    tmp_9_fu_240_p3 = (!tmp_2_fu_197_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_2_fu_197_p2.read()[0].to_bool())? tmp_5_fu_215_p2.read(): tmp_5_i_reg_649.read());
}

void getConvolutionResult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_i_fu_149_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_i_fu_180_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(exitcond1_i4_fu_391_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(exitcond_i8_fu_423_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void getConvolutionResult::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_address0\" :  \"" << array_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_ce0\" :  \"" << array_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_r_q0\" :  \"" << array_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

