// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "combineOperatorResul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic combineOperatorResul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic combineOperatorResul::ap_const_logic_0 = sc_dt::Log_0;
const bool combineOperatorResul::ap_const_boolean_1 = true;
const bool combineOperatorResul::ap_const_boolean_0 = false;
const sc_lv<32> combineOperatorResul::ap_const_lv32_8 = "1000";
const sc_lv<32> combineOperatorResul::ap_const_lv32_13 = "10011";

combineOperatorResul::combineOperatorResul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_fxp_sqrt_fu_34 = new fxp_sqrt("grp_fxp_sqrt_fu_34");
    grp_fxp_sqrt_fu_34->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_34->ap_rst(ap_rst);
    grp_fxp_sqrt_fu_34->in_val_V_read(grp_fxp_sqrt_fu_34_in_val_V_read);
    grp_fxp_sqrt_fu_34->ap_return(grp_fxp_sqrt_fu_34_ap_return);
    grp_fxp_sqrt_fu_34->ap_ce(grp_fxp_sqrt_fu_34_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter8);

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( grp_fxp_sqrt_fu_34_ap_return );

    SC_METHOD(thread_grp_fxp_sqrt_fu_34_ap_ce);
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_34_in_val_V_read);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( p_Val2_3_fu_56_p2 );
    sensitive << ( p_Val2_2_fu_51_p2 );

    SC_METHOD(thread_p_Val2_2_fu_51_p2);
    sensitive << ( result_reg_78 );

    SC_METHOD(thread_p_Val2_3_fu_56_p2);
    sensitive << ( result_1_reg_83 );

    SC_METHOD(thread_result_1_fu_45_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( horizontalResult_int_reg );

    SC_METHOD(thread_result_1_fu_45_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( horizontalResult_int_reg );

    SC_METHOD(thread_result_1_fu_45_p2);
    sensitive << ( result_1_fu_45_p0 );
    sensitive << ( result_1_fu_45_p1 );

    SC_METHOD(thread_result_fu_39_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( verticalResult_int_reg );

    SC_METHOD(thread_result_fu_39_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( verticalResult_int_reg );

    SC_METHOD(thread_result_fu_39_p2);
    sensitive << ( result_fu_39_p0 );
    sensitive << ( result_fu_39_p1 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "combineOperatorResul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, verticalResult, "(port)verticalResult");
    sc_trace(mVcdFile, horizontalResult, "(port)horizontalResult");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, result_fu_39_p2, "result_fu_39_p2");
    sc_trace(mVcdFile, result_reg_78, "result_reg_78");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter6, "ap_block_state7_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter7, "ap_block_state8_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter8, "ap_block_state9_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter9, "ap_block_state10_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter10, "ap_block_state11_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter11, "ap_block_state12_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter12, "ap_block_state13_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter13, "ap_block_state14_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, result_1_fu_45_p2, "result_1_fu_45_p2");
    sc_trace(mVcdFile, result_1_reg_83, "result_1_reg_83");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_34_in_val_V_read, "grp_fxp_sqrt_fu_34_in_val_V_read");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_34_ap_return, "grp_fxp_sqrt_fu_34_ap_return");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_34_ap_ce, "grp_fxp_sqrt_fu_34_ap_ce");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, result_fu_39_p0, "result_fu_39_p0");
    sc_trace(mVcdFile, result_fu_39_p1, "result_fu_39_p1");
    sc_trace(mVcdFile, result_1_fu_45_p0, "result_1_fu_45_p0");
    sc_trace(mVcdFile, result_1_fu_45_p1, "result_1_fu_45_p1");
    sc_trace(mVcdFile, p_Val2_3_fu_56_p2, "p_Val2_3_fu_56_p2");
    sc_trace(mVcdFile, p_Val2_2_fu_51_p2, "p_Val2_2_fu_51_p2");
    sc_trace(mVcdFile, verticalResult_int_reg, "verticalResult_int_reg");
    sc_trace(mVcdFile, horizontalResult_int_reg, "horizontalResult_int_reg");
#endif

    }
}

combineOperatorResul::~combineOperatorResul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_fxp_sqrt_fu_34;
}

void combineOperatorResul::thread_ap_clk_no_reset_() {
    horizontalResult_int_reg = horizontalResult.read();
    verticalResult_int_reg = verticalResult.read();
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        result_1_reg_83 = result_1_fu_45_p2.read();
        result_reg_78 = result_fu_39_p2.read();
    }
}

void combineOperatorResul::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state10_pp0_stage0_iter9() {
    ap_block_state10_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state11_pp0_stage0_iter10() {
    ap_block_state11_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state12_pp0_stage0_iter11() {
    ap_block_state12_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state13_pp0_stage0_iter12() {
    ap_block_state13_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state14_pp0_stage0_iter13() {
    ap_block_state14_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state7_pp0_stage0_iter6() {
    ap_block_state7_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state8_pp0_stage0_iter7() {
    ap_block_state8_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_block_state9_pp0_stage0_iter8() {
    ap_block_state9_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void combineOperatorResul::thread_ap_return() {
    ap_return = grp_fxp_sqrt_fu_34_ap_return.read().range(19, 8);
}

void combineOperatorResul::thread_grp_fxp_sqrt_fu_34_ap_ce() {
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        grp_fxp_sqrt_fu_34_ap_ce = ap_const_logic_1;
    } else {
        grp_fxp_sqrt_fu_34_ap_ce = ap_const_logic_0;
    }
}

void combineOperatorResul::thread_grp_fxp_sqrt_fu_34_in_val_V_read() {
    grp_fxp_sqrt_fu_34_in_val_V_read = (!p_Val2_3_fu_56_p2.read().is_01() || !p_Val2_2_fu_51_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Val2_3_fu_56_p2.read()) + sc_biguint<32>(p_Val2_2_fu_51_p2.read()));
}

void combineOperatorResul::thread_p_Val2_2_fu_51_p2() {
    p_Val2_2_fu_51_p2 = (!ap_const_lv32_8.is_01())? sc_lv<32>(): result_reg_78.read() << (unsigned short)ap_const_lv32_8.to_uint();
}

void combineOperatorResul::thread_p_Val2_3_fu_56_p2() {
    p_Val2_3_fu_56_p2 = (!ap_const_lv32_8.is_01())? sc_lv<32>(): result_1_reg_83.read() << (unsigned short)ap_const_lv32_8.to_uint();
}

void combineOperatorResul::thread_result_1_fu_45_p0() {
    result_1_fu_45_p0 = horizontalResult_int_reg.read();
}

void combineOperatorResul::thread_result_1_fu_45_p1() {
    result_1_fu_45_p1 = horizontalResult_int_reg.read();
}

void combineOperatorResul::thread_result_1_fu_45_p2() {
    result_1_fu_45_p2 = (!result_1_fu_45_p0.read().is_01() || !result_1_fu_45_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(result_1_fu_45_p0.read()) * sc_bigint<32>(result_1_fu_45_p1.read());
}

void combineOperatorResul::thread_result_fu_39_p0() {
    result_fu_39_p0 = verticalResult_int_reg.read();
}

void combineOperatorResul::thread_result_fu_39_p1() {
    result_fu_39_p1 = verticalResult_int_reg.read();
}

void combineOperatorResul::thread_result_fu_39_p2() {
    result_fu_39_p2 = (!result_fu_39_p0.read().is_01() || !result_fu_39_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(result_fu_39_p0.read()) * sc_bigint<32>(result_fu_39_p1.read());
}

}

