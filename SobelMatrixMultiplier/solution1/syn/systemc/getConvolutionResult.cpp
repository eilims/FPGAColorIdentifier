// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getConvolutionResult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getConvolutionResult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getConvolutionResult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> getConvolutionResult::ap_ST_fsm_state1 = "1";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_state7 = "1000";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_state8 = "10000";
const sc_lv<6> getConvolutionResult::ap_ST_fsm_state9 = "100000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool getConvolutionResult::ap_const_boolean_1 = true;
const sc_lv<32> getConvolutionResult::ap_const_lv32_2 = "10";
const bool getConvolutionResult::ap_const_boolean_0 = false;
const sc_lv<1> getConvolutionResult::ap_const_lv1_0 = "0";
const sc_lv<32> getConvolutionResult::ap_const_lv32_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_3 = "11";
const sc_lv<32> getConvolutionResult::ap_const_lv32_4 = "100";
const sc_lv<32> getConvolutionResult::ap_const_lv32_5 = "101";
const sc_lv<1> getConvolutionResult::ap_const_lv1_1 = "1";
const sc_lv<2> getConvolutionResult::ap_const_lv2_0 = "00";
const sc_lv<21> getConvolutionResult::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<5> getConvolutionResult::ap_const_lv5_0 = "00000";
const sc_lv<64> getConvolutionResult::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> getConvolutionResult::ap_const_lv64_1 = "1";
const sc_lv<64> getConvolutionResult::ap_const_lv64_2 = "10";
const sc_lv<2> getConvolutionResult::ap_const_lv2_3 = "11";
const sc_lv<2> getConvolutionResult::ap_const_lv2_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> getConvolutionResult::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<32> getConvolutionResult::ap_const_lv32_8 = "1000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_B = "1011";
const sc_lv<32> getConvolutionResult::ap_const_lv32_1F = "11111";
const sc_lv<22> getConvolutionResult::ap_const_lv22_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_15 = "10101";
const sc_lv<5> getConvolutionResult::ap_const_lv5_16 = "10110";
const sc_lv<5> getConvolutionResult::ap_const_lv5_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_16 = "10110";
const sc_lv<23> getConvolutionResult::ap_const_lv23_1 = "1";
const sc_lv<5> getConvolutionResult::ap_const_lv5_15 = "10101";
const sc_lv<23> getConvolutionResult::ap_const_lv23_3 = "11";
const sc_lv<21> getConvolutionResult::ap_const_lv21_1 = "1";
const sc_lv<23> getConvolutionResult::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_9 = "1001";
const sc_lv<32> getConvolutionResult::ap_const_lv32_14 = "10100";

getConvolutionResult::getConvolutionResult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    getConvolutionResbkb_U1 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U1");
    getConvolutionResbkb_U1->din0(array_0_q0);
    getConvolutionResbkb_U1->din1(array_1_q0);
    getConvolutionResbkb_U1->din2(array_2_q0);
    getConvolutionResbkb_U1->din3(i_reg_195);
    getConvolutionResbkb_U1->dout(grp_fu_273_p5);
    getConvolutionResbkb_U2 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U2");
    getConvolutionResbkb_U2->din0(ap_var_for_const0);
    getConvolutionResbkb_U2->din1(ap_var_for_const1);
    getConvolutionResbkb_U2->din2(ap_var_for_const0);
    getConvolutionResbkb_U2->din3(i_reg_195);
    getConvolutionResbkb_U2->dout(tmp_3_fu_306_p5);
    getConvolutionResbkb_U3 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U3");
    getConvolutionResbkb_U3->din0(ap_var_for_const0);
    getConvolutionResbkb_U3->din1(ap_var_for_const2);
    getConvolutionResbkb_U3->din2(ap_var_for_const3);
    getConvolutionResbkb_U3->din3(i_reg_195);
    getConvolutionResbkb_U3->dout(tmp_5_fu_318_p5);
    getConvolutionResbkb_U4 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U4");
    getConvolutionResbkb_U4->din0(array_0_q1);
    getConvolutionResbkb_U4->din1(array_1_q1);
    getConvolutionResbkb_U4->din2(array_2_q1);
    getConvolutionResbkb_U4->din3(i_reg_195);
    getConvolutionResbkb_U4->dout(tmp_7_fu_330_p5);
    getConvolutionResbkb_U5 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U5");
    getConvolutionResbkb_U5->din0(ap_var_for_const1);
    getConvolutionResbkb_U5->din1(ap_var_for_const2);
    getConvolutionResbkb_U5->din2(ap_var_for_const4);
    getConvolutionResbkb_U5->din3(i_reg_195);
    getConvolutionResbkb_U5->dout(tmp_8_fu_342_p5);
    getConvolutionResbkb_U6 = new getConvolutionResbkb<1,1,32,32,32,2,32>("getConvolutionResbkb_U6");
    getConvolutionResbkb_U6->din0(ap_var_for_const3);
    getConvolutionResbkb_U6->din1(ap_var_for_const4);
    getConvolutionResbkb_U6->din2(ap_var_for_const3);
    getConvolutionResbkb_U6->din3(i_reg_195);
    getConvolutionResbkb_U6->dout(tmp_s_fu_363_p5);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond1_fu_294_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i_i_fu_467_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_199_p4);
    sensitive << ( i_reg_195 );
    sensitive << ( exitcond1_reg_698 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( i_1_reg_702 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i_i_fu_467_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i_i_fu_467_p2 );
    sensitive << ( p_v_i_fu_641_p3 );

    SC_METHOD(thread_array_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_array_0_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_array_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_array_0_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_array_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_array_1_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_array_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_array_1_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_array_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_array_2_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_array_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_array_2_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exitcond1_fu_294_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_phi_fu_199_p4 );

    SC_METHOD(thread_exitcond_i_i_fu_467_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_i_i_reg_262 );

    SC_METHOD(thread_grp_fu_289_p2);
    sensitive << ( reg_285 );
    sensitive << ( tmp_5_reg_712 );

    SC_METHOD(thread_horizontalResult_2_2_fu_399_p2);
    sensitive << ( horizontalResult_ass_reg_207 );
    sensitive << ( tmp_11_fu_394_p2 );

    SC_METHOD(thread_i_1_fu_300_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_199_p4 );

    SC_METHOD(thread_i_2_fu_473_p2);
    sensitive << ( i_i_i_reg_262 );

    SC_METHOD(thread_input_V_fu_427_p2);
    sensitive << ( p_Val2_3_fu_422_p2 );
    sensitive << ( p_Val2_2_fu_417_p2 );

    SC_METHOD(thread_lhs_V_fu_501_p1);
    sensitive << ( r_V_fu_493_p3 );

    SC_METHOD(thread_op2_assign_fu_511_p2);
    sensitive << ( i_i_i_reg_262 );

    SC_METHOD(thread_op2_assign_i_cast_fu_517_p1);
    sensitive << ( op2_assign_fu_511_p2 );

    SC_METHOD(thread_p_0353_1_i_i_fu_571_p3);
    sensitive << ( tmp_16_fu_479_p3 );
    sensitive << ( s_V_2_fu_565_p2 );
    sensitive << ( s_V_1_fu_531_p2 );

    SC_METHOD(thread_p_Val2_2_fu_417_p2);
    sensitive << ( result_reg_767 );

    SC_METHOD(thread_p_Val2_3_fu_422_p2);
    sensitive << ( result_1_reg_772 );

    SC_METHOD(thread_p_v_i_fu_641_p3);
    sensitive << ( tmp_1_i_i_fu_609_p2 );
    sensitive << ( tmp_12_fu_621_p4 );
    sensitive << ( tmp_13_fu_631_p4 );

    SC_METHOD(thread_q_V_1_fu_603_p2);
    sensitive << ( q_star_V_fu_595_p3 );

    SC_METHOD(thread_q_V_fu_615_p2);
    sensitive << ( p_i_i_reg_231 );

    SC_METHOD(thread_q_star_V_fu_595_p3);
    sensitive << ( tmp_22_fu_587_p3 );

    SC_METHOD(thread_r_V_1_fu_505_p2);
    sensitive << ( lhs_V_fu_501_p1 );

    SC_METHOD(thread_r_V_2_fu_537_p3);
    sensitive << ( p_1_i_i_reg_242 );

    SC_METHOD(thread_r_V_3_fu_545_p2);
    sensitive << ( r_V_2_fu_537_p3 );

    SC_METHOD(thread_r_V_4_i_cast_fu_551_p1);
    sensitive << ( r_V_3_fu_545_p2 );

    SC_METHOD(thread_r_V_fu_493_p3);
    sensitive << ( p_i_i_reg_231 );

    SC_METHOD(thread_result_1_fu_411_p2);
    sensitive << ( horizontalResult_ass_reg_207 );

    SC_METHOD(thread_result_fu_405_p2);
    sensitive << ( verticalResult_assig_reg_219 );

    SC_METHOD(thread_s_V_1_fu_531_p2);
    sensitive << ( tmp_17_fu_487_p2 );
    sensitive << ( tmp_18_fu_527_p1 );

    SC_METHOD(thread_s_V_2_fu_565_p2);
    sensitive << ( tmp_17_fu_487_p2 );
    sensitive << ( tmp_19_fu_561_p1 );

    SC_METHOD(thread_s_V_fu_463_p1);
    sensitive << ( val_assign_fu_453_p4 );

    SC_METHOD(thread_tmp_10_fu_380_p2);
    sensitive << ( tmp_4_reg_727 );
    sensitive << ( tmp_4_2_reg_747 );

    SC_METHOD(thread_tmp_11_fu_394_p2);
    sensitive << ( tmp_6_reg_732 );
    sensitive << ( tmp_fu_390_p2 );

    SC_METHOD(thread_tmp_12_fu_621_p4);
    sensitive << ( q_V_fu_615_p2 );

    SC_METHOD(thread_tmp_13_fu_631_p4);
    sensitive << ( p_i_i_reg_231 );

    SC_METHOD(thread_tmp_14_fu_433_p4);
    sensitive << ( input_V_fu_427_p2 );

    SC_METHOD(thread_tmp_16_fu_479_p3);
    sensitive << ( p_2_i_i_reg_253 );

    SC_METHOD(thread_tmp_17_fu_487_p2);
    sensitive << ( p_2_i_i_reg_253 );

    SC_METHOD(thread_tmp_18_fu_527_p1);
    sensitive << ( tmp_5_i_i_fu_521_p2 );

    SC_METHOD(thread_tmp_19_fu_561_p1);
    sensitive << ( tmp_6_i_i_fu_555_p2 );

    SC_METHOD(thread_tmp_1_i_i_fu_609_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i_i_fu_467_p2 );
    sensitive << ( p_2_i_i_reg_253 );

    SC_METHOD(thread_tmp_20_fu_579_p1);
    sensitive << ( p_1_i_i_reg_242 );

    SC_METHOD(thread_tmp_21_fu_583_p1);
    sensitive << ( p_i_i_reg_231 );

    SC_METHOD(thread_tmp_22_fu_587_p3);
    sensitive << ( tmp_16_fu_479_p3 );
    sensitive << ( tmp_20_fu_579_p1 );
    sensitive << ( tmp_21_fu_583_p1 );

    SC_METHOD(thread_tmp_4_2_fu_375_p2);
    sensitive << ( reg_285 );
    sensitive << ( tmp_s_reg_742 );

    SC_METHOD(thread_tmp_4_fu_354_p2);
    sensitive << ( reg_285 );
    sensitive << ( tmp_3_reg_707 );

    SC_METHOD(thread_tmp_5_i_i_fu_521_p2);
    sensitive << ( r_V_1_fu_505_p2 );
    sensitive << ( op2_assign_i_cast_fu_517_p1 );

    SC_METHOD(thread_tmp_6_1_fu_359_p2);
    sensitive << ( tmp_7_reg_717 );
    sensitive << ( tmp_8_reg_722 );

    SC_METHOD(thread_tmp_6_i_i_fu_555_p2);
    sensitive << ( op2_assign_i_cast_fu_517_p1 );
    sensitive << ( r_V_4_i_cast_fu_551_p1 );

    SC_METHOD(thread_tmp_9_i_i_cast_fu_443_p1);
    sensitive << ( tmp_14_fu_433_p4 );

    SC_METHOD(thread_tmp_fu_390_p2);
    sensitive << ( tmp_6_1_reg_737 );
    sensitive << ( tmp_6_2_reg_752 );

    SC_METHOD(thread_tmp_i_i_fu_447_p2);
    sensitive << ( tmp_9_i_i_cast_fu_443_p1 );

    SC_METHOD(thread_val_assign_fu_453_p4);
    sensitive << ( tmp_i_i_fu_447_p2 );

    SC_METHOD(thread_verticalResult_2_2_fu_384_p2);
    sensitive << ( verticalResult_assig_reg_219 );
    sensitive << ( tmp_10_fu_380_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond1_fu_294_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond_i_i_fu_467_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getConvolutionResult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, array_0_address0, "(port)array_0_address0");
    sc_trace(mVcdFile, array_0_ce0, "(port)array_0_ce0");
    sc_trace(mVcdFile, array_0_q0, "(port)array_0_q0");
    sc_trace(mVcdFile, array_0_address1, "(port)array_0_address1");
    sc_trace(mVcdFile, array_0_ce1, "(port)array_0_ce1");
    sc_trace(mVcdFile, array_0_q1, "(port)array_0_q1");
    sc_trace(mVcdFile, array_1_address0, "(port)array_1_address0");
    sc_trace(mVcdFile, array_1_ce0, "(port)array_1_ce0");
    sc_trace(mVcdFile, array_1_q0, "(port)array_1_q0");
    sc_trace(mVcdFile, array_1_address1, "(port)array_1_address1");
    sc_trace(mVcdFile, array_1_ce1, "(port)array_1_ce1");
    sc_trace(mVcdFile, array_1_q1, "(port)array_1_q1");
    sc_trace(mVcdFile, array_2_address0, "(port)array_2_address0");
    sc_trace(mVcdFile, array_2_ce0, "(port)array_2_ce0");
    sc_trace(mVcdFile, array_2_q0, "(port)array_2_q0");
    sc_trace(mVcdFile, array_2_address1, "(port)array_2_address1");
    sc_trace(mVcdFile, array_2_ce1, "(port)array_2_ce1");
    sc_trace(mVcdFile, array_2_q1, "(port)array_2_q1");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_reg_195, "i_reg_195");
    sc_trace(mVcdFile, horizontalResult_ass_reg_207, "horizontalResult_ass_reg_207");
    sc_trace(mVcdFile, verticalResult_assig_reg_219, "verticalResult_assig_reg_219");
    sc_trace(mVcdFile, grp_fu_273_p5, "grp_fu_273_p5");
    sc_trace(mVcdFile, reg_285, "reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, exitcond1_reg_698, "exitcond1_reg_698");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter2, "ap_block_state6_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond1_fu_294_p2, "exitcond1_fu_294_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond1_reg_698, "ap_reg_pp0_iter1_exitcond1_reg_698");
    sc_trace(mVcdFile, i_1_fu_300_p2, "i_1_fu_300_p2");
    sc_trace(mVcdFile, i_1_reg_702, "i_1_reg_702");
    sc_trace(mVcdFile, tmp_3_fu_306_p5, "tmp_3_fu_306_p5");
    sc_trace(mVcdFile, tmp_3_reg_707, "tmp_3_reg_707");
    sc_trace(mVcdFile, tmp_5_fu_318_p5, "tmp_5_fu_318_p5");
    sc_trace(mVcdFile, tmp_5_reg_712, "tmp_5_reg_712");
    sc_trace(mVcdFile, tmp_7_fu_330_p5, "tmp_7_fu_330_p5");
    sc_trace(mVcdFile, tmp_7_reg_717, "tmp_7_reg_717");
    sc_trace(mVcdFile, tmp_8_fu_342_p5, "tmp_8_fu_342_p5");
    sc_trace(mVcdFile, tmp_8_reg_722, "tmp_8_reg_722");
    sc_trace(mVcdFile, tmp_4_fu_354_p2, "tmp_4_fu_354_p2");
    sc_trace(mVcdFile, tmp_4_reg_727, "tmp_4_reg_727");
    sc_trace(mVcdFile, grp_fu_289_p2, "grp_fu_289_p2");
    sc_trace(mVcdFile, tmp_6_reg_732, "tmp_6_reg_732");
    sc_trace(mVcdFile, tmp_6_1_fu_359_p2, "tmp_6_1_fu_359_p2");
    sc_trace(mVcdFile, tmp_6_1_reg_737, "tmp_6_1_reg_737");
    sc_trace(mVcdFile, tmp_s_fu_363_p5, "tmp_s_fu_363_p5");
    sc_trace(mVcdFile, tmp_s_reg_742, "tmp_s_reg_742");
    sc_trace(mVcdFile, tmp_4_2_fu_375_p2, "tmp_4_2_fu_375_p2");
    sc_trace(mVcdFile, tmp_4_2_reg_747, "tmp_4_2_reg_747");
    sc_trace(mVcdFile, tmp_6_2_reg_752, "tmp_6_2_reg_752");
    sc_trace(mVcdFile, verticalResult_2_2_fu_384_p2, "verticalResult_2_2_fu_384_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, horizontalResult_2_2_fu_399_p2, "horizontalResult_2_2_fu_399_p2");
    sc_trace(mVcdFile, result_fu_405_p2, "result_fu_405_p2");
    sc_trace(mVcdFile, result_reg_767, "result_reg_767");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, result_1_fu_411_p2, "result_1_fu_411_p2");
    sc_trace(mVcdFile, result_1_reg_772, "result_1_reg_772");
    sc_trace(mVcdFile, s_V_fu_463_p1, "s_V_fu_463_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_2_fu_473_p2, "i_2_fu_473_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, p_0353_1_i_i_fu_571_p3, "p_0353_1_i_i_fu_571_p3");
    sc_trace(mVcdFile, exitcond_i_i_fu_467_p2, "exitcond_i_i_fu_467_p2");
    sc_trace(mVcdFile, q_star_V_fu_595_p3, "q_star_V_fu_595_p3");
    sc_trace(mVcdFile, q_V_1_fu_603_p2, "q_V_1_fu_603_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_199_p4, "ap_phi_mux_i_phi_fu_199_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, p_i_i_reg_231, "p_i_i_reg_231");
    sc_trace(mVcdFile, p_1_i_i_reg_242, "p_1_i_i_reg_242");
    sc_trace(mVcdFile, p_2_i_i_reg_253, "p_2_i_i_reg_253");
    sc_trace(mVcdFile, i_i_i_reg_262, "i_i_i_reg_262");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_10_fu_380_p2, "tmp_10_fu_380_p2");
    sc_trace(mVcdFile, tmp_fu_390_p2, "tmp_fu_390_p2");
    sc_trace(mVcdFile, tmp_11_fu_394_p2, "tmp_11_fu_394_p2");
    sc_trace(mVcdFile, p_Val2_3_fu_422_p2, "p_Val2_3_fu_422_p2");
    sc_trace(mVcdFile, p_Val2_2_fu_417_p2, "p_Val2_2_fu_417_p2");
    sc_trace(mVcdFile, input_V_fu_427_p2, "input_V_fu_427_p2");
    sc_trace(mVcdFile, tmp_14_fu_433_p4, "tmp_14_fu_433_p4");
    sc_trace(mVcdFile, tmp_9_i_i_cast_fu_443_p1, "tmp_9_i_i_cast_fu_443_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_447_p2, "tmp_i_i_fu_447_p2");
    sc_trace(mVcdFile, val_assign_fu_453_p4, "val_assign_fu_453_p4");
    sc_trace(mVcdFile, r_V_fu_493_p3, "r_V_fu_493_p3");
    sc_trace(mVcdFile, lhs_V_fu_501_p1, "lhs_V_fu_501_p1");
    sc_trace(mVcdFile, op2_assign_fu_511_p2, "op2_assign_fu_511_p2");
    sc_trace(mVcdFile, r_V_1_fu_505_p2, "r_V_1_fu_505_p2");
    sc_trace(mVcdFile, op2_assign_i_cast_fu_517_p1, "op2_assign_i_cast_fu_517_p1");
    sc_trace(mVcdFile, tmp_5_i_i_fu_521_p2, "tmp_5_i_i_fu_521_p2");
    sc_trace(mVcdFile, tmp_17_fu_487_p2, "tmp_17_fu_487_p2");
    sc_trace(mVcdFile, tmp_18_fu_527_p1, "tmp_18_fu_527_p1");
    sc_trace(mVcdFile, r_V_2_fu_537_p3, "r_V_2_fu_537_p3");
    sc_trace(mVcdFile, r_V_3_fu_545_p2, "r_V_3_fu_545_p2");
    sc_trace(mVcdFile, r_V_4_i_cast_fu_551_p1, "r_V_4_i_cast_fu_551_p1");
    sc_trace(mVcdFile, tmp_6_i_i_fu_555_p2, "tmp_6_i_i_fu_555_p2");
    sc_trace(mVcdFile, tmp_19_fu_561_p1, "tmp_19_fu_561_p1");
    sc_trace(mVcdFile, tmp_16_fu_479_p3, "tmp_16_fu_479_p3");
    sc_trace(mVcdFile, s_V_2_fu_565_p2, "s_V_2_fu_565_p2");
    sc_trace(mVcdFile, s_V_1_fu_531_p2, "s_V_1_fu_531_p2");
    sc_trace(mVcdFile, tmp_20_fu_579_p1, "tmp_20_fu_579_p1");
    sc_trace(mVcdFile, tmp_21_fu_583_p1, "tmp_21_fu_583_p1");
    sc_trace(mVcdFile, tmp_22_fu_587_p3, "tmp_22_fu_587_p3");
    sc_trace(mVcdFile, q_V_fu_615_p2, "q_V_fu_615_p2");
    sc_trace(mVcdFile, tmp_1_i_i_fu_609_p2, "tmp_1_i_i_fu_609_p2");
    sc_trace(mVcdFile, tmp_12_fu_621_p4, "tmp_12_fu_621_p4");
    sc_trace(mVcdFile, tmp_13_fu_631_p4, "tmp_13_fu_631_p4");
    sc_trace(mVcdFile, p_v_i_fu_641_p3, "p_v_i_fu_641_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("getConvolutionResult.hdltvin.dat");
    mHdltvoutHandle.open("getConvolutionResult.hdltvout.dat");
}

getConvolutionResult::~getConvolutionResult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete getConvolutionResbkb_U1;
    delete getConvolutionResbkb_U2;
    delete getConvolutionResbkb_U3;
    delete getConvolutionResbkb_U4;
    delete getConvolutionResbkb_U5;
    delete getConvolutionResbkb_U6;
}

void getConvolutionResult::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void getConvolutionResult::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_2;
}

void getConvolutionResult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_1;
}

void getConvolutionResult::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_FFFFFFFF;
}

void getConvolutionResult::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_FFFFFFFE;
}

void getConvolutionResult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_698.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        horizontalResult_ass_reg_207 = horizontalResult_2_2_fu_399_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        horizontalResult_ass_reg_207 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_467_p2.read()))) {
        i_i_i_reg_262 = i_2_fu_473_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_i_i_reg_262 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_698.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_195 = i_1_reg_702.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_195 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_467_p2.read()))) {
        p_1_i_i_reg_242 = q_star_V_fu_595_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_1_i_i_reg_242 = ap_const_lv21_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_467_p2.read()))) {
        p_2_i_i_reg_253 = p_0353_1_i_i_fu_571_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_2_i_i_reg_253 = s_V_fu_463_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_i_fu_467_p2.read()))) {
        p_i_i_reg_231 = q_V_1_fu_603_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        p_i_i_reg_231 = ap_const_lv21_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_698.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        verticalResult_assig_reg_219 = verticalResult_2_2_fu_384_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        verticalResult_assig_reg_219 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond1_reg_698 = exitcond1_reg_698.read();
        exitcond1_reg_698 = exitcond1_fu_294_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_1_reg_702 = i_1_fu_300_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond1_reg_698.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(exitcond1_reg_698.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_285 = grp_fu_273_p5.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        result_1_reg_772 = result_1_fu_411_p2.read();
        result_reg_767 = result_fu_405_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_reg_698.read(), ap_const_lv1_0))) {
        tmp_3_reg_707 = tmp_3_fu_306_p5.read();
        tmp_5_reg_712 = tmp_5_fu_318_p5.read();
        tmp_7_reg_717 = tmp_7_fu_330_p5.read();
        tmp_8_reg_722 = tmp_8_fu_342_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_698.read()))) {
        tmp_4_2_reg_747 = tmp_4_2_fu_375_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_698.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_4_reg_727 = tmp_4_fu_354_p2.read();
        tmp_6_1_reg_737 = tmp_6_1_fu_359_p2.read();
        tmp_s_reg_742 = tmp_s_fu_363_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond1_reg_698.read()))) {
        tmp_6_2_reg_752 = grp_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_698.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_6_reg_732 = grp_fu_289_p2.read();
    }
}

void getConvolutionResult::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void getConvolutionResult::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void getConvolutionResult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getConvolutionResult::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[3];
}

void getConvolutionResult::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[4];
}

void getConvolutionResult::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[5];
}

void getConvolutionResult::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state6_pp0_stage0_iter2() {
    ap_block_state6_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond1_fu_294_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(exitcond_i_i_fu_467_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getConvolutionResult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_phi_mux_i_phi_fu_199_p4() {
    if ((esl_seteq<1,1,1>(exitcond1_reg_698.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_199_p4 = i_1_reg_702.read();
    } else {
        ap_phi_mux_i_phi_fu_199_p4 = i_reg_195.read();
    }
}

void getConvolutionResult::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(exitcond_i_i_fu_467_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_return() {
    ap_return = esl_zext<32,12>(p_v_i_fu_641_p3.read());
}

void getConvolutionResult::thread_array_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            array_0_address0 =  (sc_lv<2>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            array_0_address0 =  (sc_lv<2>) (ap_const_lv64_0);
        } else {
            array_0_address0 = "XX";
        }
    } else {
        array_0_address0 = "XX";
    }
}

void getConvolutionResult::thread_array_0_address1() {
    array_0_address1 =  (sc_lv<2>) (ap_const_lv64_1);
}

void getConvolutionResult::thread_array_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        array_0_ce0 = ap_const_logic_1;
    } else {
        array_0_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_array_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        array_0_ce1 = ap_const_logic_1;
    } else {
        array_0_ce1 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_array_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            array_1_address0 =  (sc_lv<2>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            array_1_address0 =  (sc_lv<2>) (ap_const_lv64_0);
        } else {
            array_1_address0 = "XX";
        }
    } else {
        array_1_address0 = "XX";
    }
}

void getConvolutionResult::thread_array_1_address1() {
    array_1_address1 =  (sc_lv<2>) (ap_const_lv64_1);
}

void getConvolutionResult::thread_array_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        array_1_ce0 = ap_const_logic_1;
    } else {
        array_1_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_array_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        array_1_ce1 = ap_const_logic_1;
    } else {
        array_1_ce1 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_array_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            array_2_address0 =  (sc_lv<2>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            array_2_address0 =  (sc_lv<2>) (ap_const_lv64_0);
        } else {
            array_2_address0 = "XX";
        }
    } else {
        array_2_address0 = "XX";
    }
}

void getConvolutionResult::thread_array_2_address1() {
    array_2_address1 =  (sc_lv<2>) (ap_const_lv64_1);
}

void getConvolutionResult::thread_array_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        array_2_ce0 = ap_const_logic_1;
    } else {
        array_2_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_array_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        array_2_ce1 = ap_const_logic_1;
    } else {
        array_2_ce1 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_exitcond1_fu_294_p2() {
    exitcond1_fu_294_p2 = (!ap_phi_mux_i_phi_fu_199_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_199_p4.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_exitcond_i_i_fu_467_p2() {
    exitcond_i_i_fu_467_p2 = (!i_i_i_reg_262.read().is_01() || !ap_const_lv5_16.is_01())? sc_lv<1>(): sc_lv<1>(i_i_i_reg_262.read() == ap_const_lv5_16);
}

void getConvolutionResult::thread_grp_fu_289_p2() {
    grp_fu_289_p2 = (!tmp_5_reg_712.read().is_01() || !reg_285.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_5_reg_712.read()) * sc_bigint<32>(reg_285.read());
}

void getConvolutionResult::thread_horizontalResult_2_2_fu_399_p2() {
    horizontalResult_2_2_fu_399_p2 = (!horizontalResult_ass_reg_207.read().is_01() || !tmp_11_fu_394_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(horizontalResult_ass_reg_207.read()) + sc_biguint<32>(tmp_11_fu_394_p2.read()));
}

void getConvolutionResult::thread_i_1_fu_300_p2() {
    i_1_fu_300_p2 = (!ap_phi_mux_i_phi_fu_199_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_i_phi_fu_199_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_i_2_fu_473_p2() {
    i_2_fu_473_p2 = (!i_i_i_reg_262.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_i_i_reg_262.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void getConvolutionResult::thread_input_V_fu_427_p2() {
    input_V_fu_427_p2 = (!p_Val2_3_fu_422_p2.read().is_01() || !p_Val2_2_fu_417_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Val2_3_fu_422_p2.read()) + sc_biguint<32>(p_Val2_2_fu_417_p2.read()));
}

void getConvolutionResult::thread_lhs_V_fu_501_p1() {
    lhs_V_fu_501_p1 = esl_sext<32,23>(r_V_fu_493_p3.read());
}

void getConvolutionResult::thread_op2_assign_fu_511_p2() {
    op2_assign_fu_511_p2 = (!ap_const_lv5_15.is_01() || !i_i_i_reg_262.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_15) - sc_biguint<5>(i_i_i_reg_262.read()));
}

void getConvolutionResult::thread_op2_assign_i_cast_fu_517_p1() {
    op2_assign_i_cast_fu_517_p1 = esl_zext<32,5>(op2_assign_fu_511_p2.read());
}

void getConvolutionResult::thread_p_0353_1_i_i_fu_571_p3() {
    p_0353_1_i_i_fu_571_p3 = (!tmp_16_fu_479_p3.read()[0].is_01())? sc_lv<23>(): ((tmp_16_fu_479_p3.read()[0].to_bool())? s_V_2_fu_565_p2.read(): s_V_1_fu_531_p2.read());
}

void getConvolutionResult::thread_p_Val2_2_fu_417_p2() {
    p_Val2_2_fu_417_p2 = (!ap_const_lv32_8.is_01())? sc_lv<32>(): result_reg_767.read() << (unsigned short)ap_const_lv32_8.to_uint();
}

void getConvolutionResult::thread_p_Val2_3_fu_422_p2() {
    p_Val2_3_fu_422_p2 = (!ap_const_lv32_8.is_01())? sc_lv<32>(): result_1_reg_772.read() << (unsigned short)ap_const_lv32_8.to_uint();
}

void getConvolutionResult::thread_p_v_i_fu_641_p3() {
    p_v_i_fu_641_p3 = (!tmp_1_i_i_fu_609_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_1_i_i_fu_609_p2.read()[0].to_bool())? tmp_12_fu_621_p4.read(): tmp_13_fu_631_p4.read());
}

void getConvolutionResult::thread_q_V_1_fu_603_p2() {
    q_V_1_fu_603_p2 = (q_star_V_fu_595_p3.read() | ap_const_lv21_1);
}

void getConvolutionResult::thread_q_V_fu_615_p2() {
    q_V_fu_615_p2 = (!p_i_i_reg_231.read().is_01() || !ap_const_lv21_1.is_01())? sc_lv<21>(): (sc_biguint<21>(p_i_i_reg_231.read()) + sc_biguint<21>(ap_const_lv21_1));
}

void getConvolutionResult::thread_q_star_V_fu_595_p3() {
    q_star_V_fu_595_p3 = esl_concat<20,1>(tmp_22_fu_587_p3.read(), ap_const_lv1_0);
}

void getConvolutionResult::thread_r_V_1_fu_505_p2() {
    r_V_1_fu_505_p2 = (lhs_V_fu_501_p1.read() | ap_const_lv32_1);
}

void getConvolutionResult::thread_r_V_2_fu_537_p3() {
    r_V_2_fu_537_p3 = esl_concat<21,2>(p_1_i_i_reg_242.read(), ap_const_lv2_0);
}

void getConvolutionResult::thread_r_V_3_fu_545_p2() {
    r_V_3_fu_545_p2 = (r_V_2_fu_537_p3.read() | ap_const_lv23_3);
}

void getConvolutionResult::thread_r_V_4_i_cast_fu_551_p1() {
    r_V_4_i_cast_fu_551_p1 = esl_sext<32,23>(r_V_3_fu_545_p2.read());
}

void getConvolutionResult::thread_r_V_fu_493_p3() {
    r_V_fu_493_p3 = esl_concat<21,2>(p_i_i_reg_231.read(), ap_const_lv2_0);
}

void getConvolutionResult::thread_result_1_fu_411_p2() {
    result_1_fu_411_p2 = (!horizontalResult_ass_reg_207.read().is_01() || !horizontalResult_ass_reg_207.read().is_01())? sc_lv<32>(): sc_bigint<32>(horizontalResult_ass_reg_207.read()) * sc_bigint<32>(horizontalResult_ass_reg_207.read());
}

void getConvolutionResult::thread_result_fu_405_p2() {
    result_fu_405_p2 = (!verticalResult_assig_reg_219.read().is_01() || !verticalResult_assig_reg_219.read().is_01())? sc_lv<32>(): sc_bigint<32>(verticalResult_assig_reg_219.read()) * sc_bigint<32>(verticalResult_assig_reg_219.read());
}

void getConvolutionResult::thread_s_V_1_fu_531_p2() {
    s_V_1_fu_531_p2 = (!tmp_17_fu_487_p2.read().is_01() || !tmp_18_fu_527_p1.read().is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_17_fu_487_p2.read()) - sc_biguint<23>(tmp_18_fu_527_p1.read()));
}

void getConvolutionResult::thread_s_V_2_fu_565_p2() {
    s_V_2_fu_565_p2 = (!tmp_19_fu_561_p1.read().is_01() || !tmp_17_fu_487_p2.read().is_01())? sc_lv<23>(): (sc_biguint<23>(tmp_19_fu_561_p1.read()) + sc_biguint<23>(tmp_17_fu_487_p2.read()));
}

void getConvolutionResult::thread_s_V_fu_463_p1() {
    s_V_fu_463_p1 = esl_zext<23,21>(val_assign_fu_453_p4.read());
}

void getConvolutionResult::thread_tmp_10_fu_380_p2() {
    tmp_10_fu_380_p2 = (!tmp_4_2_reg_747.read().is_01() || !tmp_4_reg_727.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_4_2_reg_747.read()) + sc_biguint<32>(tmp_4_reg_727.read()));
}

void getConvolutionResult::thread_tmp_11_fu_394_p2() {
    tmp_11_fu_394_p2 = (!tmp_fu_390_p2.read().is_01() || !tmp_6_reg_732.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_fu_390_p2.read()) + sc_biguint<32>(tmp_6_reg_732.read()));
}

void getConvolutionResult::thread_tmp_12_fu_621_p4() {
    tmp_12_fu_621_p4 = q_V_fu_615_p2.read().range(20, 9);
}

void getConvolutionResult::thread_tmp_13_fu_631_p4() {
    tmp_13_fu_631_p4 = p_i_i_reg_231.read().range(20, 9);
}

void getConvolutionResult::thread_tmp_14_fu_433_p4() {
    tmp_14_fu_433_p4 = input_V_fu_427_p2.read().range(31, 11);
}

void getConvolutionResult::thread_tmp_16_fu_479_p3() {
    tmp_16_fu_479_p3 = p_2_i_i_reg_253.read().range(22, 22);
}

void getConvolutionResult::thread_tmp_17_fu_487_p2() {
    tmp_17_fu_487_p2 = (!ap_const_lv23_1.is_01())? sc_lv<23>(): p_2_i_i_reg_253.read() << (unsigned short)ap_const_lv23_1.to_uint();
}

void getConvolutionResult::thread_tmp_18_fu_527_p1() {
    tmp_18_fu_527_p1 = tmp_5_i_i_fu_521_p2.read().range(23-1, 0);
}

void getConvolutionResult::thread_tmp_19_fu_561_p1() {
    tmp_19_fu_561_p1 = tmp_6_i_i_fu_555_p2.read().range(23-1, 0);
}

void getConvolutionResult::thread_tmp_1_i_i_fu_609_p2() {
    tmp_1_i_i_fu_609_p2 = (!p_2_i_i_reg_253.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): (sc_bigint<23>(p_2_i_i_reg_253.read()) > sc_bigint<23>(ap_const_lv23_0));
}

void getConvolutionResult::thread_tmp_20_fu_579_p1() {
    tmp_20_fu_579_p1 = p_1_i_i_reg_242.read().range(20-1, 0);
}

void getConvolutionResult::thread_tmp_21_fu_583_p1() {
    tmp_21_fu_583_p1 = p_i_i_reg_231.read().range(20-1, 0);
}

void getConvolutionResult::thread_tmp_22_fu_587_p3() {
    tmp_22_fu_587_p3 = (!tmp_16_fu_479_p3.read()[0].is_01())? sc_lv<20>(): ((tmp_16_fu_479_p3.read()[0].to_bool())? tmp_20_fu_579_p1.read(): tmp_21_fu_583_p1.read());
}

void getConvolutionResult::thread_tmp_4_2_fu_375_p2() {
    tmp_4_2_fu_375_p2 = (!tmp_s_reg_742.read().is_01() || !reg_285.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_s_reg_742.read()) * sc_bigint<32>(reg_285.read());
}

void getConvolutionResult::thread_tmp_4_fu_354_p2() {
    tmp_4_fu_354_p2 = (!tmp_3_reg_707.read().is_01() || !reg_285.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_3_reg_707.read()) * sc_bigint<32>(reg_285.read());
}

void getConvolutionResult::thread_tmp_5_i_i_fu_521_p2() {
    tmp_5_i_i_fu_521_p2 = (!op2_assign_i_cast_fu_517_p1.read().is_01())? sc_lv<32>(): r_V_1_fu_505_p2.read() << (unsigned short)op2_assign_i_cast_fu_517_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_6_1_fu_359_p2() {
    tmp_6_1_fu_359_p2 = (!tmp_8_reg_722.read().is_01() || !tmp_7_reg_717.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_8_reg_722.read()) * sc_bigint<32>(tmp_7_reg_717.read());
}

void getConvolutionResult::thread_tmp_6_i_i_fu_555_p2() {
    tmp_6_i_i_fu_555_p2 = (!op2_assign_i_cast_fu_517_p1.read().is_01())? sc_lv<32>(): r_V_4_i_cast_fu_551_p1.read() << (unsigned short)op2_assign_i_cast_fu_517_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_9_i_i_cast_fu_443_p1() {
    tmp_9_i_i_cast_fu_443_p1 = esl_zext<22,21>(tmp_14_fu_433_p4.read());
}

void getConvolutionResult::thread_tmp_fu_390_p2() {
    tmp_fu_390_p2 = (!tmp_6_1_reg_737.read().is_01() || !tmp_6_2_reg_752.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_6_1_reg_737.read()) + sc_biguint<32>(tmp_6_2_reg_752.read()));
}

void getConvolutionResult::thread_tmp_i_i_fu_447_p2() {
    tmp_i_i_fu_447_p2 = (!ap_const_lv22_1.is_01() || !tmp_9_i_i_cast_fu_443_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(ap_const_lv22_1) + sc_biguint<22>(tmp_9_i_i_cast_fu_443_p1.read()));
}

void getConvolutionResult::thread_val_assign_fu_453_p4() {
    val_assign_fu_453_p4 = tmp_i_i_fu_447_p2.read().range(21, 1);
}

void getConvolutionResult::thread_verticalResult_2_2_fu_384_p2() {
    verticalResult_2_2_fu_384_p2 = (!verticalResult_assig_reg_219.read().is_01() || !tmp_10_fu_380_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(verticalResult_assig_reg_219.read()) + sc_biguint<32>(tmp_10_fu_380_p2.read()));
}

void getConvolutionResult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_fu_294_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond1_fu_294_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(exitcond_i_i_fu_467_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void getConvolutionResult::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_0_address0\" :  \"" << array_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_0_ce0\" :  \"" << array_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_0_q0\" :  \"" << array_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_0_address1\" :  \"" << array_0_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_0_ce1\" :  \"" << array_0_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_0_q1\" :  \"" << array_0_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_1_address0\" :  \"" << array_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_1_ce0\" :  \"" << array_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_1_q0\" :  \"" << array_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_1_address1\" :  \"" << array_1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_1_ce1\" :  \"" << array_1_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_1_q1\" :  \"" << array_1_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_2_address0\" :  \"" << array_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_2_ce0\" :  \"" << array_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_2_q0\" :  \"" << array_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_2_address1\" :  \"" << array_2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_2_ce1\" :  \"" << array_2_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_2_q1\" :  \"" << array_2_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

