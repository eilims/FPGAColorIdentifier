// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getConvolutionResult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getConvolutionResult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getConvolutionResult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> getConvolutionResult::ap_ST_fsm_state1 = "1";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_state7 = "100";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_state13 = "10000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool getConvolutionResult::ap_const_boolean_1 = true;
const sc_lv<32> getConvolutionResult::ap_const_lv32_1 = "1";
const bool getConvolutionResult::ap_const_boolean_0 = false;
const sc_lv<1> getConvolutionResult::ap_const_lv1_0 = "0";
const sc_lv<32> getConvolutionResult::ap_const_lv32_3 = "11";
const sc_lv<1> getConvolutionResult::ap_const_lv1_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_2 = "10";
const sc_lv<4> getConvolutionResult::ap_const_lv4_0 = "0000";
const sc_lv<2> getConvolutionResult::ap_const_lv2_0 = "00";
const sc_lv<4> getConvolutionResult::ap_const_lv4_9 = "1001";
const sc_lv<4> getConvolutionResult::ap_const_lv4_1 = "1";
const sc_lv<2> getConvolutionResult::ap_const_lv2_3 = "11";
const sc_lv<2> getConvolutionResult::ap_const_lv2_1 = "1";
const sc_lv<5> getConvolutionResult::ap_const_lv5_0 = "00000";
const sc_lv<7> getConvolutionResult::ap_const_lv7_1F = "11111";
const sc_lv<32> getConvolutionResult::ap_const_lv32_5F = "1011111";
const sc_lv<7> getConvolutionResult::ap_const_lv7_5F = "1011111";
const sc_lv<96> getConvolutionResult::ap_const_lv96_10000000200000001 = "10000000000000000000000000000001000000000000000000000000000000001";
const sc_lv<96> getConvolutionResult::ap_const_lv96_0 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFFFFFFFFFEFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFF0000000000000001 = "111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000001";
const sc_lv<96> getConvolutionResult::ap_const_lv96_FFFFFFFE0000000000000002 = "111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000010";
const sc_lv<32> getConvolutionResult::ap_const_lv32_4 = "100";

getConvolutionResult::getConvolutionResult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    getConvolutionResbkb_U1 = new getConvolutionResbkb<1,1,96,96,96,2,96>("getConvolutionResbkb_U1");
    getConvolutionResbkb_U1->din0(ap_var_for_const0);
    getConvolutionResbkb_U1->din1(ap_var_for_const1);
    getConvolutionResbkb_U1->din2(ap_var_for_const2);
    getConvolutionResbkb_U1->din3(col_i_mid2_reg_731);
    getConvolutionResbkb_U1->dout(tmp_fu_318_p5);
    getConvolutionResbkb_U2 = new getConvolutionResbkb<1,1,96,96,96,2,96>("getConvolutionResbkb_U2");
    getConvolutionResbkb_U2->din0(ap_var_for_const3);
    getConvolutionResbkb_U2->din1(ap_var_for_const4);
    getConvolutionResbkb_U2->din2(ap_var_for_const3);
    getConvolutionResbkb_U2->din3(col_i7_mid2_reg_801);
    getConvolutionResbkb_U2->dout(tmp_1_fu_586_p5);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_180_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state8);
    sensitive << ( exitcond_flatten1_fu_448_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_METHOD(thread_ap_phi_mux_row_i2_phi_fu_150_p4);
    sensitive << ( row_i2_reg_146 );
    sensitive << ( exitcond_flatten1_reg_792 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_14_i_cast_mid2_v_1_reg_806 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_row_i_phi_fu_105_p4);
    sensitive << ( row_i_reg_101 );
    sensitive << ( exitcond_flatten_reg_722 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_6_i_cast_mid2_v_s_reg_736 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return);
    sensitive << ( summation_1_i_reg_112 );
    sensitive << ( summation_1_i6_reg_157 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_array_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_2_i_fu_220_p1 );
    sensitive << ( tmp_7_i9_fu_488_p1 );

    SC_METHOD(thread_array_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_col_1_fu_493_p2);
    sensitive << ( col_i7_mid2_fu_466_p3 );

    SC_METHOD(thread_col_fu_225_p2);
    sensitive << ( col_i_mid2_fu_198_p3 );

    SC_METHOD(thread_col_i7_mid2_fu_466_p3);
    sensitive << ( col_i7_reg_169 );
    sensitive << ( exitcond_i1_fu_460_p2 );

    SC_METHOD(thread_col_i_mid2_fu_198_p3);
    sensitive << ( col_i_reg_124 );
    sensitive << ( exitcond_i_fu_192_p2 );

    SC_METHOD(thread_exitcond_flatten1_fu_448_p2);
    sensitive << ( indvar_flatten1_reg_135 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_180_p2);
    sensitive << ( indvar_flatten_reg_90 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i1_fu_460_p2);
    sensitive << ( col_i7_reg_169 );
    sensitive << ( exitcond_flatten1_fu_448_p2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_i_fu_192_p2);
    sensitive << ( col_i_reg_124 );
    sensitive << ( exitcond_flatten_fu_180_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_indvar_flatten_next1_fu_454_p2);
    sensitive << ( indvar_flatten1_reg_135 );

    SC_METHOD(thread_indvar_flatten_next_fu_186_p2);
    sensitive << ( indvar_flatten_reg_90 );

    SC_METHOD(thread_row_fu_206_p2);
    sensitive << ( ap_phi_mux_row_i_phi_fu_105_p4 );

    SC_METHOD(thread_row_s_fu_474_p2);
    sensitive << ( ap_phi_mux_row_i2_phi_fu_150_p4 );

    SC_METHOD(thread_summation_1_fu_711_p2);
    sensitive << ( summation_1_i6_reg_157 );
    sensitive << ( tmp_8_i1_reg_852 );

    SC_METHOD(thread_summation_fu_443_p2);
    sensitive << ( summation_1_i_reg_112 );
    sensitive << ( tmp_3_i_reg_782 );

    SC_METHOD(thread_tmp_10_fu_302_p2);
    sensitive << ( tmp_7_fu_278_p3 );

    SC_METHOD(thread_tmp_11_fu_308_p1);
    sensitive << ( tmp_9_fu_294_p3 );

    SC_METHOD(thread_tmp_12_fu_403_p1);
    sensitive << ( tmp_10_reg_752 );

    SC_METHOD(thread_tmp_13_fu_312_p2);
    sensitive << ( tmp_8_fu_286_p3 );
    sensitive << ( tmp_11_fu_308_p1 );

    SC_METHOD(thread_tmp_14_fu_406_p2);
    sensitive << ( tmp_12_fu_403_p1 );

    SC_METHOD(thread_tmp_14_i_cast_mid2_v_1_fu_480_p3);
    sensitive << ( ap_phi_mux_row_i2_phi_fu_150_p4 );
    sensitive << ( exitcond_i1_fu_460_p2 );
    sensitive << ( row_s_fu_474_p2 );

    SC_METHOD(thread_tmp_14_i_cast_mid2_v_fu_499_p3);
    sensitive << ( tmp_14_i_cast_mid2_v_1_reg_806 );

    SC_METHOD(thread_tmp_15_fu_412_p2);
    sensitive << ( tmp_13_reg_757 );
    sensitive << ( tmp_14_fu_406_p2 );

    SC_METHOD(thread_tmp_15_i_cast_mid2_v_fu_506_p2);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );

    SC_METHOD(thread_tmp_16_fu_417_p1);
    sensitive << ( tmp_15_fu_412_p2 );

    SC_METHOD(thread_tmp_17_fu_329_p2);
    sensitive << ( exitcond_flatten_reg_722 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_7_i_cast_mid2_v_fu_238_p2 );

    SC_METHOD(thread_tmp_18_fu_335_p4);
    sensitive << ( tmp_fu_318_p5 );

    SC_METHOD(thread_tmp_19_fu_345_p2);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_7_i_cast_mid2_v_fu_238_p2 );

    SC_METHOD(thread_tmp_20_fu_351_p2);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );

    SC_METHOD(thread_tmp_21_fu_357_p2);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_7_i_cast_mid2_v_fu_238_p2 );

    SC_METHOD(thread_tmp_22_fu_363_p3);
    sensitive << ( tmp_17_fu_329_p2 );
    sensitive << ( tmp_19_fu_345_p2 );
    sensitive << ( tmp_21_fu_357_p2 );

    SC_METHOD(thread_tmp_23_fu_371_p3);
    sensitive << ( tmp_fu_318_p5 );
    sensitive << ( tmp_17_fu_329_p2 );
    sensitive << ( tmp_18_fu_335_p4 );

    SC_METHOD(thread_tmp_24_fu_379_p3);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_17_fu_329_p2 );
    sensitive << ( tmp_20_fu_351_p2 );

    SC_METHOD(thread_tmp_25_fu_387_p2);
    sensitive << ( tmp_22_fu_363_p3 );

    SC_METHOD(thread_tmp_26_fu_393_p1);
    sensitive << ( tmp_24_fu_379_p3 );

    SC_METHOD(thread_tmp_27_fu_421_p1);
    sensitive << ( tmp_25_reg_762 );

    SC_METHOD(thread_tmp_28_fu_397_p2);
    sensitive << ( tmp_23_fu_371_p3 );
    sensitive << ( tmp_26_fu_393_p1 );

    SC_METHOD(thread_tmp_29_fu_424_p2);
    sensitive << ( tmp_27_fu_421_p1 );

    SC_METHOD(thread_tmp_2_fu_244_p2);
    sensitive << ( exitcond_flatten_reg_722 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_7_i_cast_mid2_v_fu_238_p2 );

    SC_METHOD(thread_tmp_2_i_fu_220_p1);
    sensitive << ( col_i_mid2_fu_198_p3 );

    SC_METHOD(thread_tmp_30_fu_430_p2);
    sensitive << ( tmp_28_reg_767 );
    sensitive << ( tmp_29_fu_424_p2 );

    SC_METHOD(thread_tmp_31_fu_435_p1);
    sensitive << ( tmp_30_fu_430_p2 );

    SC_METHOD(thread_tmp_32_fu_512_p2);
    sensitive << ( exitcond_flatten1_reg_792 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_15_i_cast_mid2_v_fu_506_p2 );

    SC_METHOD(thread_tmp_33_fu_518_p4);
    sensitive << ( array_r_q0 );

    SC_METHOD(thread_tmp_34_fu_528_p2);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_15_i_cast_mid2_v_fu_506_p2 );

    SC_METHOD(thread_tmp_35_fu_534_p2);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );

    SC_METHOD(thread_tmp_36_fu_540_p2);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_15_i_cast_mid2_v_fu_506_p2 );

    SC_METHOD(thread_tmp_37_fu_546_p3);
    sensitive << ( tmp_32_fu_512_p2 );
    sensitive << ( tmp_34_fu_528_p2 );
    sensitive << ( tmp_36_fu_540_p2 );

    SC_METHOD(thread_tmp_38_fu_554_p3);
    sensitive << ( array_r_q0 );
    sensitive << ( tmp_32_fu_512_p2 );
    sensitive << ( tmp_33_fu_518_p4 );

    SC_METHOD(thread_tmp_39_fu_562_p3);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_32_fu_512_p2 );
    sensitive << ( tmp_35_fu_534_p2 );

    SC_METHOD(thread_tmp_3_fu_250_p4);
    sensitive << ( array_r_q0 );

    SC_METHOD(thread_tmp_3_i_fu_439_p2);
    sensitive << ( tmp_16_reg_772 );
    sensitive << ( tmp_31_reg_777 );

    SC_METHOD(thread_tmp_40_fu_570_p2);
    sensitive << ( tmp_37_fu_546_p3 );

    SC_METHOD(thread_tmp_41_fu_576_p1);
    sensitive << ( tmp_39_fu_562_p3 );

    SC_METHOD(thread_tmp_42_fu_671_p1);
    sensitive << ( tmp_40_reg_822 );

    SC_METHOD(thread_tmp_43_fu_580_p2);
    sensitive << ( tmp_38_fu_554_p3 );
    sensitive << ( tmp_41_fu_576_p1 );

    SC_METHOD(thread_tmp_44_fu_674_p2);
    sensitive << ( tmp_42_fu_671_p1 );

    SC_METHOD(thread_tmp_45_fu_680_p2);
    sensitive << ( tmp_43_reg_827 );
    sensitive << ( tmp_44_fu_674_p2 );

    SC_METHOD(thread_tmp_46_fu_685_p1);
    sensitive << ( tmp_45_fu_680_p2 );

    SC_METHOD(thread_tmp_47_fu_597_p2);
    sensitive << ( exitcond_flatten1_reg_792 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_15_i_cast_mid2_v_fu_506_p2 );

    SC_METHOD(thread_tmp_48_fu_603_p4);
    sensitive << ( tmp_1_fu_586_p5 );

    SC_METHOD(thread_tmp_49_fu_613_p2);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_15_i_cast_mid2_v_fu_506_p2 );

    SC_METHOD(thread_tmp_4_fu_260_p2);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_7_i_cast_mid2_v_fu_238_p2 );

    SC_METHOD(thread_tmp_50_fu_619_p2);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );

    SC_METHOD(thread_tmp_51_fu_625_p2);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_15_i_cast_mid2_v_fu_506_p2 );

    SC_METHOD(thread_tmp_52_fu_631_p3);
    sensitive << ( tmp_47_fu_597_p2 );
    sensitive << ( tmp_49_fu_613_p2 );
    sensitive << ( tmp_51_fu_625_p2 );

    SC_METHOD(thread_tmp_53_fu_639_p3);
    sensitive << ( tmp_1_fu_586_p5 );
    sensitive << ( tmp_47_fu_597_p2 );
    sensitive << ( tmp_48_fu_603_p4 );

    SC_METHOD(thread_tmp_54_fu_647_p3);
    sensitive << ( tmp_14_i_cast_mid2_v_fu_499_p3 );
    sensitive << ( tmp_47_fu_597_p2 );
    sensitive << ( tmp_50_fu_619_p2 );

    SC_METHOD(thread_tmp_55_fu_655_p2);
    sensitive << ( tmp_52_fu_631_p3 );

    SC_METHOD(thread_tmp_56_fu_661_p1);
    sensitive << ( tmp_54_fu_647_p3 );

    SC_METHOD(thread_tmp_57_fu_689_p1);
    sensitive << ( tmp_55_reg_832 );

    SC_METHOD(thread_tmp_58_fu_665_p2);
    sensitive << ( tmp_53_fu_639_p3 );
    sensitive << ( tmp_56_fu_661_p1 );

    SC_METHOD(thread_tmp_59_fu_692_p2);
    sensitive << ( tmp_57_fu_689_p1 );

    SC_METHOD(thread_tmp_5_fu_266_p2);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );

    SC_METHOD(thread_tmp_60_fu_698_p2);
    sensitive << ( tmp_58_reg_837 );
    sensitive << ( tmp_59_fu_692_p2 );

    SC_METHOD(thread_tmp_61_fu_703_p1);
    sensitive << ( tmp_60_fu_698_p2 );

    SC_METHOD(thread_tmp_6_fu_272_p2);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_7_i_cast_mid2_v_fu_238_p2 );

    SC_METHOD(thread_tmp_6_i_cast_mid2_v_fu_231_p3);
    sensitive << ( tmp_6_i_cast_mid2_v_s_reg_736 );

    SC_METHOD(thread_tmp_6_i_cast_mid2_v_s_fu_212_p3);
    sensitive << ( ap_phi_mux_row_i_phi_fu_105_p4 );
    sensitive << ( exitcond_i_fu_192_p2 );
    sensitive << ( row_fu_206_p2 );

    SC_METHOD(thread_tmp_7_fu_278_p3);
    sensitive << ( tmp_2_fu_244_p2 );
    sensitive << ( tmp_4_fu_260_p2 );
    sensitive << ( tmp_6_fu_272_p2 );

    SC_METHOD(thread_tmp_7_i9_fu_488_p1);
    sensitive << ( col_i7_mid2_fu_466_p3 );

    SC_METHOD(thread_tmp_7_i_cast_mid2_v_fu_238_p2);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );

    SC_METHOD(thread_tmp_8_fu_286_p3);
    sensitive << ( array_r_q0 );
    sensitive << ( tmp_2_fu_244_p2 );
    sensitive << ( tmp_3_fu_250_p4 );

    SC_METHOD(thread_tmp_8_i1_fu_707_p2);
    sensitive << ( tmp_46_reg_842 );
    sensitive << ( tmp_61_reg_847 );

    SC_METHOD(thread_tmp_9_fu_294_p3);
    sensitive << ( tmp_6_i_cast_mid2_v_fu_231_p3 );
    sensitive << ( tmp_2_fu_244_p2 );
    sensitive << ( tmp_5_fu_266_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_180_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten1_fu_448_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getConvolutionResult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, array_r_address0, "(port)array_r_address0");
    sc_trace(mVcdFile, array_r_ce0, "(port)array_r_ce0");
    sc_trace(mVcdFile, array_r_q0, "(port)array_r_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_90, "indvar_flatten_reg_90");
    sc_trace(mVcdFile, row_i_reg_101, "row_i_reg_101");
    sc_trace(mVcdFile, summation_1_i_reg_112, "summation_1_i_reg_112");
    sc_trace(mVcdFile, col_i_reg_124, "col_i_reg_124");
    sc_trace(mVcdFile, indvar_flatten1_reg_135, "indvar_flatten1_reg_135");
    sc_trace(mVcdFile, row_i2_reg_146, "row_i2_reg_146");
    sc_trace(mVcdFile, summation_1_i6_reg_157, "summation_1_i6_reg_157");
    sc_trace(mVcdFile, col_i7_reg_169, "col_i7_reg_169");
    sc_trace(mVcdFile, exitcond_flatten_fu_180_p2, "exitcond_flatten_fu_180_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_722, "exitcond_flatten_reg_722");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_722, "ap_reg_pp0_iter1_exitcond_flatten_reg_722");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_722, "ap_reg_pp0_iter2_exitcond_flatten_reg_722");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_722, "ap_reg_pp0_iter3_exitcond_flatten_reg_722");
    sc_trace(mVcdFile, indvar_flatten_next_fu_186_p2, "indvar_flatten_next_fu_186_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, col_i_mid2_fu_198_p3, "col_i_mid2_fu_198_p3");
    sc_trace(mVcdFile, col_i_mid2_reg_731, "col_i_mid2_reg_731");
    sc_trace(mVcdFile, tmp_6_i_cast_mid2_v_s_fu_212_p3, "tmp_6_i_cast_mid2_v_s_fu_212_p3");
    sc_trace(mVcdFile, tmp_6_i_cast_mid2_v_s_reg_736, "tmp_6_i_cast_mid2_v_s_reg_736");
    sc_trace(mVcdFile, col_fu_225_p2, "col_fu_225_p2");
    sc_trace(mVcdFile, tmp_10_fu_302_p2, "tmp_10_fu_302_p2");
    sc_trace(mVcdFile, tmp_10_reg_752, "tmp_10_reg_752");
    sc_trace(mVcdFile, tmp_13_fu_312_p2, "tmp_13_fu_312_p2");
    sc_trace(mVcdFile, tmp_13_reg_757, "tmp_13_reg_757");
    sc_trace(mVcdFile, tmp_25_fu_387_p2, "tmp_25_fu_387_p2");
    sc_trace(mVcdFile, tmp_25_reg_762, "tmp_25_reg_762");
    sc_trace(mVcdFile, tmp_28_fu_397_p2, "tmp_28_fu_397_p2");
    sc_trace(mVcdFile, tmp_28_reg_767, "tmp_28_reg_767");
    sc_trace(mVcdFile, tmp_16_fu_417_p1, "tmp_16_fu_417_p1");
    sc_trace(mVcdFile, tmp_16_reg_772, "tmp_16_reg_772");
    sc_trace(mVcdFile, tmp_31_fu_435_p1, "tmp_31_fu_435_p1");
    sc_trace(mVcdFile, tmp_31_reg_777, "tmp_31_reg_777");
    sc_trace(mVcdFile, tmp_3_i_fu_439_p2, "tmp_3_i_fu_439_p2");
    sc_trace(mVcdFile, tmp_3_i_reg_782, "tmp_3_i_reg_782");
    sc_trace(mVcdFile, summation_fu_443_p2, "summation_fu_443_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, exitcond_flatten1_fu_448_p2, "exitcond_flatten1_fu_448_p2");
    sc_trace(mVcdFile, exitcond_flatten1_reg_792, "exitcond_flatten1_reg_792");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage0_iter0, "ap_block_state8_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter1, "ap_block_state9_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage0_iter2, "ap_block_state10_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter3, "ap_block_state11_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter4, "ap_block_state12_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_exitcond_flatten1_reg_792, "ap_reg_pp1_iter1_exitcond_flatten1_reg_792");
    sc_trace(mVcdFile, ap_reg_pp1_iter2_exitcond_flatten1_reg_792, "ap_reg_pp1_iter2_exitcond_flatten1_reg_792");
    sc_trace(mVcdFile, ap_reg_pp1_iter3_exitcond_flatten1_reg_792, "ap_reg_pp1_iter3_exitcond_flatten1_reg_792");
    sc_trace(mVcdFile, indvar_flatten_next1_fu_454_p2, "indvar_flatten_next1_fu_454_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, col_i7_mid2_fu_466_p3, "col_i7_mid2_fu_466_p3");
    sc_trace(mVcdFile, col_i7_mid2_reg_801, "col_i7_mid2_reg_801");
    sc_trace(mVcdFile, tmp_14_i_cast_mid2_v_1_fu_480_p3, "tmp_14_i_cast_mid2_v_1_fu_480_p3");
    sc_trace(mVcdFile, tmp_14_i_cast_mid2_v_1_reg_806, "tmp_14_i_cast_mid2_v_1_reg_806");
    sc_trace(mVcdFile, col_1_fu_493_p2, "col_1_fu_493_p2");
    sc_trace(mVcdFile, tmp_40_fu_570_p2, "tmp_40_fu_570_p2");
    sc_trace(mVcdFile, tmp_40_reg_822, "tmp_40_reg_822");
    sc_trace(mVcdFile, tmp_43_fu_580_p2, "tmp_43_fu_580_p2");
    sc_trace(mVcdFile, tmp_43_reg_827, "tmp_43_reg_827");
    sc_trace(mVcdFile, tmp_55_fu_655_p2, "tmp_55_fu_655_p2");
    sc_trace(mVcdFile, tmp_55_reg_832, "tmp_55_reg_832");
    sc_trace(mVcdFile, tmp_58_fu_665_p2, "tmp_58_fu_665_p2");
    sc_trace(mVcdFile, tmp_58_reg_837, "tmp_58_reg_837");
    sc_trace(mVcdFile, tmp_46_fu_685_p1, "tmp_46_fu_685_p1");
    sc_trace(mVcdFile, tmp_46_reg_842, "tmp_46_reg_842");
    sc_trace(mVcdFile, tmp_61_fu_703_p1, "tmp_61_fu_703_p1");
    sc_trace(mVcdFile, tmp_61_reg_847, "tmp_61_reg_847");
    sc_trace(mVcdFile, tmp_8_i1_fu_707_p2, "tmp_8_i1_fu_707_p2");
    sc_trace(mVcdFile, tmp_8_i1_reg_852, "tmp_8_i1_reg_852");
    sc_trace(mVcdFile, summation_1_fu_711_p2, "summation_1_fu_711_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state8, "ap_condition_pp1_exit_iter0_state8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_phi_mux_row_i_phi_fu_105_p4, "ap_phi_mux_row_i_phi_fu_105_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_row_i2_phi_fu_150_p4, "ap_phi_mux_row_i2_phi_fu_150_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_2_i_fu_220_p1, "tmp_2_i_fu_220_p1");
    sc_trace(mVcdFile, tmp_7_i9_fu_488_p1, "tmp_7_i9_fu_488_p1");
    sc_trace(mVcdFile, exitcond_i_fu_192_p2, "exitcond_i_fu_192_p2");
    sc_trace(mVcdFile, row_fu_206_p2, "row_fu_206_p2");
    sc_trace(mVcdFile, tmp_6_i_cast_mid2_v_fu_231_p3, "tmp_6_i_cast_mid2_v_fu_231_p3");
    sc_trace(mVcdFile, tmp_7_i_cast_mid2_v_fu_238_p2, "tmp_7_i_cast_mid2_v_fu_238_p2");
    sc_trace(mVcdFile, tmp_2_fu_244_p2, "tmp_2_fu_244_p2");
    sc_trace(mVcdFile, tmp_4_fu_260_p2, "tmp_4_fu_260_p2");
    sc_trace(mVcdFile, tmp_6_fu_272_p2, "tmp_6_fu_272_p2");
    sc_trace(mVcdFile, tmp_3_fu_250_p4, "tmp_3_fu_250_p4");
    sc_trace(mVcdFile, tmp_5_fu_266_p2, "tmp_5_fu_266_p2");
    sc_trace(mVcdFile, tmp_7_fu_278_p3, "tmp_7_fu_278_p3");
    sc_trace(mVcdFile, tmp_9_fu_294_p3, "tmp_9_fu_294_p3");
    sc_trace(mVcdFile, tmp_8_fu_286_p3, "tmp_8_fu_286_p3");
    sc_trace(mVcdFile, tmp_11_fu_308_p1, "tmp_11_fu_308_p1");
    sc_trace(mVcdFile, tmp_fu_318_p5, "tmp_fu_318_p5");
    sc_trace(mVcdFile, tmp_17_fu_329_p2, "tmp_17_fu_329_p2");
    sc_trace(mVcdFile, tmp_19_fu_345_p2, "tmp_19_fu_345_p2");
    sc_trace(mVcdFile, tmp_21_fu_357_p2, "tmp_21_fu_357_p2");
    sc_trace(mVcdFile, tmp_18_fu_335_p4, "tmp_18_fu_335_p4");
    sc_trace(mVcdFile, tmp_20_fu_351_p2, "tmp_20_fu_351_p2");
    sc_trace(mVcdFile, tmp_22_fu_363_p3, "tmp_22_fu_363_p3");
    sc_trace(mVcdFile, tmp_24_fu_379_p3, "tmp_24_fu_379_p3");
    sc_trace(mVcdFile, tmp_23_fu_371_p3, "tmp_23_fu_371_p3");
    sc_trace(mVcdFile, tmp_26_fu_393_p1, "tmp_26_fu_393_p1");
    sc_trace(mVcdFile, tmp_12_fu_403_p1, "tmp_12_fu_403_p1");
    sc_trace(mVcdFile, tmp_14_fu_406_p2, "tmp_14_fu_406_p2");
    sc_trace(mVcdFile, tmp_15_fu_412_p2, "tmp_15_fu_412_p2");
    sc_trace(mVcdFile, tmp_27_fu_421_p1, "tmp_27_fu_421_p1");
    sc_trace(mVcdFile, tmp_29_fu_424_p2, "tmp_29_fu_424_p2");
    sc_trace(mVcdFile, tmp_30_fu_430_p2, "tmp_30_fu_430_p2");
    sc_trace(mVcdFile, exitcond_i1_fu_460_p2, "exitcond_i1_fu_460_p2");
    sc_trace(mVcdFile, row_s_fu_474_p2, "row_s_fu_474_p2");
    sc_trace(mVcdFile, tmp_14_i_cast_mid2_v_fu_499_p3, "tmp_14_i_cast_mid2_v_fu_499_p3");
    sc_trace(mVcdFile, tmp_15_i_cast_mid2_v_fu_506_p2, "tmp_15_i_cast_mid2_v_fu_506_p2");
    sc_trace(mVcdFile, tmp_32_fu_512_p2, "tmp_32_fu_512_p2");
    sc_trace(mVcdFile, tmp_34_fu_528_p2, "tmp_34_fu_528_p2");
    sc_trace(mVcdFile, tmp_36_fu_540_p2, "tmp_36_fu_540_p2");
    sc_trace(mVcdFile, tmp_33_fu_518_p4, "tmp_33_fu_518_p4");
    sc_trace(mVcdFile, tmp_35_fu_534_p2, "tmp_35_fu_534_p2");
    sc_trace(mVcdFile, tmp_37_fu_546_p3, "tmp_37_fu_546_p3");
    sc_trace(mVcdFile, tmp_39_fu_562_p3, "tmp_39_fu_562_p3");
    sc_trace(mVcdFile, tmp_38_fu_554_p3, "tmp_38_fu_554_p3");
    sc_trace(mVcdFile, tmp_41_fu_576_p1, "tmp_41_fu_576_p1");
    sc_trace(mVcdFile, tmp_1_fu_586_p5, "tmp_1_fu_586_p5");
    sc_trace(mVcdFile, tmp_47_fu_597_p2, "tmp_47_fu_597_p2");
    sc_trace(mVcdFile, tmp_49_fu_613_p2, "tmp_49_fu_613_p2");
    sc_trace(mVcdFile, tmp_51_fu_625_p2, "tmp_51_fu_625_p2");
    sc_trace(mVcdFile, tmp_48_fu_603_p4, "tmp_48_fu_603_p4");
    sc_trace(mVcdFile, tmp_50_fu_619_p2, "tmp_50_fu_619_p2");
    sc_trace(mVcdFile, tmp_52_fu_631_p3, "tmp_52_fu_631_p3");
    sc_trace(mVcdFile, tmp_54_fu_647_p3, "tmp_54_fu_647_p3");
    sc_trace(mVcdFile, tmp_53_fu_639_p3, "tmp_53_fu_639_p3");
    sc_trace(mVcdFile, tmp_56_fu_661_p1, "tmp_56_fu_661_p1");
    sc_trace(mVcdFile, tmp_42_fu_671_p1, "tmp_42_fu_671_p1");
    sc_trace(mVcdFile, tmp_44_fu_674_p2, "tmp_44_fu_674_p2");
    sc_trace(mVcdFile, tmp_45_fu_680_p2, "tmp_45_fu_680_p2");
    sc_trace(mVcdFile, tmp_57_fu_689_p1, "tmp_57_fu_689_p1");
    sc_trace(mVcdFile, tmp_59_fu_692_p2, "tmp_59_fu_692_p2");
    sc_trace(mVcdFile, tmp_60_fu_698_p2, "tmp_60_fu_698_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("getConvolutionResult.hdltvin.dat");
    mHdltvoutHandle.open("getConvolutionResult.hdltvout.dat");
}

getConvolutionResult::~getConvolutionResult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete getConvolutionResbkb_U1;
    delete getConvolutionResbkb_U2;
}

void getConvolutionResult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv96_10000000200000001;
}

void getConvolutionResult::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv96_0;
}

void getConvolutionResult::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv96_FFFFFFFFFFFFFFFEFFFFFFFF;
}

void getConvolutionResult::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv96_FFFFFFFF0000000000000001;
}

void getConvolutionResult::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv96_FFFFFFFE0000000000000002;
}

void getConvolutionResult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state8.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter4 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        col_i7_reg_169 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_448_p2.read()))) {
        col_i7_reg_169 = col_1_fu_493_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_180_p2.read(), ap_const_lv1_0))) {
        col_i_reg_124 = col_fu_225_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        col_i_reg_124 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        indvar_flatten1_reg_135 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_448_p2.read()))) {
        indvar_flatten1_reg_135 = indvar_flatten_next1_fu_454_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_180_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_90 = indvar_flatten_next_fu_186_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_90 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        row_i2_reg_146 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_792.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        row_i2_reg_146 = tmp_14_i_cast_mid2_v_1_reg_806.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_722.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        row_i_reg_101 = tmp_6_i_cast_mid2_v_s_reg_736.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        row_i_reg_101 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        summation_1_i6_reg_157 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter3_exitcond_flatten1_reg_792.read()))) {
        summation_1_i6_reg_157 = summation_1_fu_711_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_flatten_reg_722.read(), ap_const_lv1_0))) {
        summation_1_i_reg_112 = summation_fu_443_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        summation_1_i_reg_112 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_722 = exitcond_flatten_reg_722.read();
        exitcond_flatten_reg_722 = exitcond_flatten_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_722 = ap_reg_pp0_iter1_exitcond_flatten_reg_722.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_722 = ap_reg_pp0_iter2_exitcond_flatten_reg_722.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp1_iter1_exitcond_flatten1_reg_792 = exitcond_flatten1_reg_792.read();
        exitcond_flatten1_reg_792 = exitcond_flatten1_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp1_iter2_exitcond_flatten1_reg_792 = ap_reg_pp1_iter1_exitcond_flatten1_reg_792.read();
        ap_reg_pp1_iter3_exitcond_flatten1_reg_792 = ap_reg_pp1_iter2_exitcond_flatten1_reg_792.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_448_p2.read()))) {
        col_i7_mid2_reg_801 = col_i7_mid2_fu_466_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_180_p2.read(), ap_const_lv1_0))) {
        col_i_mid2_reg_731 = col_i_mid2_fu_198_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_reg_722.read(), ap_const_lv1_0))) {
        tmp_10_reg_752 = tmp_10_fu_302_p2.read();
        tmp_13_reg_757 = tmp_13_fu_312_p2.read();
        tmp_25_reg_762 = tmp_25_fu_387_p2.read();
        tmp_28_reg_767 = tmp_28_fu_397_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_448_p2.read()))) {
        tmp_14_i_cast_mid2_v_1_reg_806 = tmp_14_i_cast_mid2_v_1_fu_480_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_722.read(), ap_const_lv1_0))) {
        tmp_16_reg_772 = tmp_16_fu_417_p1.read();
        tmp_31_reg_777 = tmp_31_fu_435_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_flatten_reg_722.read(), ap_const_lv1_0))) {
        tmp_3_i_reg_782 = tmp_3_i_fu_439_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_792.read()))) {
        tmp_40_reg_822 = tmp_40_fu_570_p2.read();
        tmp_43_reg_827 = tmp_43_fu_580_p2.read();
        tmp_55_reg_832 = tmp_55_fu_655_p2.read();
        tmp_58_reg_837 = tmp_58_fu_665_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter1_exitcond_flatten1_reg_792.read()))) {
        tmp_46_reg_842 = tmp_46_fu_685_p1.read();
        tmp_61_reg_847 = tmp_61_fu_703_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_180_p2.read(), ap_const_lv1_0))) {
        tmp_6_i_cast_mid2_v_s_reg_736 = tmp_6_i_cast_mid2_v_s_fu_212_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter2_exitcond_flatten1_reg_792.read()))) {
        tmp_8_i1_reg_852 = tmp_8_i1_fu_707_p2.read();
    }
}

void getConvolutionResult::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void getConvolutionResult::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void getConvolutionResult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getConvolutionResult::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[4];
}

void getConvolutionResult::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void getConvolutionResult::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state10_pp1_stage0_iter2() {
    ap_block_state10_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state11_pp1_stage0_iter3() {
    ap_block_state11_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state12_pp1_stage0_iter4() {
    ap_block_state12_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state8_pp1_stage0_iter0() {
    ap_block_state8_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state9_pp1_stage0_iter1() {
    ap_block_state9_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_180_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_condition_pp1_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(exitcond_flatten1_fu_448_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getConvolutionResult::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void getConvolutionResult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_phi_mux_row_i2_phi_fu_150_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_792.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_row_i2_phi_fu_150_p4 = tmp_14_i_cast_mid2_v_1_reg_806.read();
    } else {
        ap_phi_mux_row_i2_phi_fu_150_p4 = row_i2_reg_146.read();
    }
}

void getConvolutionResult::thread_ap_phi_mux_row_i_phi_fu_105_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_722.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_row_i_phi_fu_105_p4 = tmp_6_i_cast_mid2_v_s_reg_736.read();
    } else {
        ap_phi_mux_row_i_phi_fu_105_p4 = row_i_reg_101.read();
    }
}

void getConvolutionResult::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_return() {
    ap_return = (!summation_1_i6_reg_157.read().is_01() || !summation_1_i_reg_112.read().is_01())? sc_lv<32>(): (sc_biguint<32>(summation_1_i6_reg_157.read()) + sc_biguint<32>(summation_1_i_reg_112.read()));
}

void getConvolutionResult::thread_array_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        array_r_address0 =  (sc_lv<2>) (tmp_7_i9_fu_488_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        array_r_address0 =  (sc_lv<2>) (tmp_2_i_fu_220_p1.read());
    } else {
        array_r_address0 = "XX";
    }
}

void getConvolutionResult::thread_array_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        array_r_ce0 = ap_const_logic_1;
    } else {
        array_r_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_col_1_fu_493_p2() {
    col_1_fu_493_p2 = (!ap_const_lv2_1.is_01() || !col_i7_mid2_fu_466_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(col_i7_mid2_fu_466_p3.read()));
}

void getConvolutionResult::thread_col_fu_225_p2() {
    col_fu_225_p2 = (!ap_const_lv2_1.is_01() || !col_i_mid2_fu_198_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(col_i_mid2_fu_198_p3.read()));
}

void getConvolutionResult::thread_col_i7_mid2_fu_466_p3() {
    col_i7_mid2_fu_466_p3 = (!exitcond_i1_fu_460_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i1_fu_460_p2.read()[0].to_bool())? ap_const_lv2_0: col_i7_reg_169.read());
}

void getConvolutionResult::thread_col_i_mid2_fu_198_p3() {
    col_i_mid2_fu_198_p3 = (!exitcond_i_fu_192_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i_fu_192_p2.read()[0].to_bool())? ap_const_lv2_0: col_i_reg_124.read());
}

void getConvolutionResult::thread_exitcond_flatten1_fu_448_p2() {
    exitcond_flatten1_fu_448_p2 = (!indvar_flatten1_reg_135.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten1_reg_135.read() == ap_const_lv4_9);
}

void getConvolutionResult::thread_exitcond_flatten_fu_180_p2() {
    exitcond_flatten_fu_180_p2 = (!indvar_flatten_reg_90.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_90.read() == ap_const_lv4_9);
}

void getConvolutionResult::thread_exitcond_i1_fu_460_p2() {
    exitcond_i1_fu_460_p2 = (!col_i7_reg_169.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_i7_reg_169.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_exitcond_i_fu_192_p2() {
    exitcond_i_fu_192_p2 = (!col_i_reg_124.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_i_reg_124.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_indvar_flatten_next1_fu_454_p2() {
    indvar_flatten_next1_fu_454_p2 = (!indvar_flatten1_reg_135.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten1_reg_135.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void getConvolutionResult::thread_indvar_flatten_next_fu_186_p2() {
    indvar_flatten_next_fu_186_p2 = (!indvar_flatten_reg_90.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten_reg_90.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void getConvolutionResult::thread_row_fu_206_p2() {
    row_fu_206_p2 = (!ap_const_lv2_1.is_01() || !ap_phi_mux_row_i_phi_fu_105_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(ap_phi_mux_row_i_phi_fu_105_p4.read()));
}

void getConvolutionResult::thread_row_s_fu_474_p2() {
    row_s_fu_474_p2 = (!ap_const_lv2_1.is_01() || !ap_phi_mux_row_i2_phi_fu_150_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(ap_phi_mux_row_i2_phi_fu_150_p4.read()));
}

void getConvolutionResult::thread_summation_1_fu_711_p2() {
    summation_1_fu_711_p2 = (!tmp_8_i1_reg_852.read().is_01() || !summation_1_i6_reg_157.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_8_i1_reg_852.read()) + sc_biguint<32>(summation_1_i6_reg_157.read()));
}

void getConvolutionResult::thread_summation_fu_443_p2() {
    summation_fu_443_p2 = (!tmp_3_i_reg_782.read().is_01() || !summation_1_i_reg_112.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_3_i_reg_782.read()) + sc_biguint<32>(summation_1_i_reg_112.read()));
}

void getConvolutionResult::thread_tmp_10_fu_302_p2() {
    tmp_10_fu_302_p2 = (!ap_const_lv7_5F.is_01() || !tmp_7_fu_278_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_7_fu_278_p3.read()));
}

void getConvolutionResult::thread_tmp_11_fu_308_p1() {
    tmp_11_fu_308_p1 = esl_zext<96,7>(tmp_9_fu_294_p3.read());
}

void getConvolutionResult::thread_tmp_12_fu_403_p1() {
    tmp_12_fu_403_p1 = esl_zext<96,7>(tmp_10_reg_752.read());
}

void getConvolutionResult::thread_tmp_13_fu_312_p2() {
    tmp_13_fu_312_p2 = (!tmp_11_fu_308_p1.read().is_01())? sc_lv<96>(): tmp_8_fu_286_p3.read() >> (unsigned short)tmp_11_fu_308_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_14_fu_406_p2() {
    tmp_14_fu_406_p2 = (!tmp_12_fu_403_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_12_fu_403_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_14_i_cast_mid2_v_1_fu_480_p3() {
    tmp_14_i_cast_mid2_v_1_fu_480_p3 = (!exitcond_i1_fu_460_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i1_fu_460_p2.read()[0].to_bool())? row_s_fu_474_p2.read(): ap_phi_mux_row_i2_phi_fu_150_p4.read());
}

void getConvolutionResult::thread_tmp_14_i_cast_mid2_v_fu_499_p3() {
    tmp_14_i_cast_mid2_v_fu_499_p3 = esl_concat<2,5>(tmp_14_i_cast_mid2_v_1_reg_806.read(), ap_const_lv5_0);
}

void getConvolutionResult::thread_tmp_15_fu_412_p2() {
    tmp_15_fu_412_p2 = (tmp_13_reg_757.read() & tmp_14_fu_406_p2.read());
}

void getConvolutionResult::thread_tmp_15_i_cast_mid2_v_fu_506_p2() {
    tmp_15_i_cast_mid2_v_fu_506_p2 = (tmp_14_i_cast_mid2_v_fu_499_p3.read() | ap_const_lv7_1F);
}

void getConvolutionResult::thread_tmp_16_fu_417_p1() {
    tmp_16_fu_417_p1 = tmp_15_fu_412_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_17_fu_329_p2() {
    tmp_17_fu_329_p2 = (!tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01() || !tmp_7_i_cast_mid2_v_fu_238_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()) > sc_biguint<7>(tmp_7_i_cast_mid2_v_fu_238_p2.read()));
}

void getConvolutionResult::thread_tmp_18_fu_335_p4() {
    tmp_18_fu_335_p4 = tmp_fu_318_p5.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_19_fu_345_p2() {
    tmp_19_fu_345_p2 = (!tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01() || !tmp_7_i_cast_mid2_v_fu_238_p2.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()) - sc_biguint<7>(tmp_7_i_cast_mid2_v_fu_238_p2.read()));
}

void getConvolutionResult::thread_tmp_20_fu_351_p2() {
    tmp_20_fu_351_p2 = (!ap_const_lv7_5F.is_01() || !tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()));
}

void getConvolutionResult::thread_tmp_21_fu_357_p2() {
    tmp_21_fu_357_p2 = (!tmp_7_i_cast_mid2_v_fu_238_p2.read().is_01() || !tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_7_i_cast_mid2_v_fu_238_p2.read()) - sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()));
}

void getConvolutionResult::thread_tmp_22_fu_363_p3() {
    tmp_22_fu_363_p3 = (!tmp_17_fu_329_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_17_fu_329_p2.read()[0].to_bool())? tmp_19_fu_345_p2.read(): tmp_21_fu_357_p2.read());
}

void getConvolutionResult::thread_tmp_23_fu_371_p3() {
    tmp_23_fu_371_p3 = (!tmp_17_fu_329_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_17_fu_329_p2.read()[0].to_bool())? tmp_18_fu_335_p4.read(): tmp_fu_318_p5.read());
}

void getConvolutionResult::thread_tmp_24_fu_379_p3() {
    tmp_24_fu_379_p3 = (!tmp_17_fu_329_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_17_fu_329_p2.read()[0].to_bool())? tmp_20_fu_351_p2.read(): tmp_6_i_cast_mid2_v_fu_231_p3.read());
}

void getConvolutionResult::thread_tmp_25_fu_387_p2() {
    tmp_25_fu_387_p2 = (!ap_const_lv7_5F.is_01() || !tmp_22_fu_363_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_22_fu_363_p3.read()));
}

void getConvolutionResult::thread_tmp_26_fu_393_p1() {
    tmp_26_fu_393_p1 = esl_zext<96,7>(tmp_24_fu_379_p3.read());
}

void getConvolutionResult::thread_tmp_27_fu_421_p1() {
    tmp_27_fu_421_p1 = esl_zext<96,7>(tmp_25_reg_762.read());
}

void getConvolutionResult::thread_tmp_28_fu_397_p2() {
    tmp_28_fu_397_p2 = (!tmp_26_fu_393_p1.read().is_01())? sc_lv<96>(): tmp_23_fu_371_p3.read() >> (unsigned short)tmp_26_fu_393_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_29_fu_424_p2() {
    tmp_29_fu_424_p2 = (!tmp_27_fu_421_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_27_fu_421_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_2_fu_244_p2() {
    tmp_2_fu_244_p2 = (!tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01() || !tmp_7_i_cast_mid2_v_fu_238_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()) > sc_biguint<7>(tmp_7_i_cast_mid2_v_fu_238_p2.read()));
}

void getConvolutionResult::thread_tmp_2_i_fu_220_p1() {
    tmp_2_i_fu_220_p1 = esl_zext<64,2>(col_i_mid2_fu_198_p3.read());
}

void getConvolutionResult::thread_tmp_30_fu_430_p2() {
    tmp_30_fu_430_p2 = (tmp_28_reg_767.read() & tmp_29_fu_424_p2.read());
}

void getConvolutionResult::thread_tmp_31_fu_435_p1() {
    tmp_31_fu_435_p1 = tmp_30_fu_430_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_32_fu_512_p2() {
    tmp_32_fu_512_p2 = (!tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01() || !tmp_15_i_cast_mid2_v_fu_506_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()) > sc_biguint<7>(tmp_15_i_cast_mid2_v_fu_506_p2.read()));
}

void getConvolutionResult::thread_tmp_33_fu_518_p4() {
    tmp_33_fu_518_p4 = array_r_q0.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_34_fu_528_p2() {
    tmp_34_fu_528_p2 = (!tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01() || !tmp_15_i_cast_mid2_v_fu_506_p2.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()) - sc_biguint<7>(tmp_15_i_cast_mid2_v_fu_506_p2.read()));
}

void getConvolutionResult::thread_tmp_35_fu_534_p2() {
    tmp_35_fu_534_p2 = (!ap_const_lv7_5F.is_01() || !tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()));
}

void getConvolutionResult::thread_tmp_36_fu_540_p2() {
    tmp_36_fu_540_p2 = (!tmp_15_i_cast_mid2_v_fu_506_p2.read().is_01() || !tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_15_i_cast_mid2_v_fu_506_p2.read()) - sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()));
}

void getConvolutionResult::thread_tmp_37_fu_546_p3() {
    tmp_37_fu_546_p3 = (!tmp_32_fu_512_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_32_fu_512_p2.read()[0].to_bool())? tmp_34_fu_528_p2.read(): tmp_36_fu_540_p2.read());
}

void getConvolutionResult::thread_tmp_38_fu_554_p3() {
    tmp_38_fu_554_p3 = (!tmp_32_fu_512_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_32_fu_512_p2.read()[0].to_bool())? tmp_33_fu_518_p4.read(): array_r_q0.read());
}

void getConvolutionResult::thread_tmp_39_fu_562_p3() {
    tmp_39_fu_562_p3 = (!tmp_32_fu_512_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_32_fu_512_p2.read()[0].to_bool())? tmp_35_fu_534_p2.read(): tmp_14_i_cast_mid2_v_fu_499_p3.read());
}

void getConvolutionResult::thread_tmp_3_fu_250_p4() {
    tmp_3_fu_250_p4 = array_r_q0.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_3_i_fu_439_p2() {
    tmp_3_i_fu_439_p2 = (!tmp_16_reg_772.read().is_01() || !tmp_31_reg_777.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_16_reg_772.read()) * sc_bigint<32>(tmp_31_reg_777.read());
}

void getConvolutionResult::thread_tmp_40_fu_570_p2() {
    tmp_40_fu_570_p2 = (!ap_const_lv7_5F.is_01() || !tmp_37_fu_546_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_37_fu_546_p3.read()));
}

void getConvolutionResult::thread_tmp_41_fu_576_p1() {
    tmp_41_fu_576_p1 = esl_zext<96,7>(tmp_39_fu_562_p3.read());
}

void getConvolutionResult::thread_tmp_42_fu_671_p1() {
    tmp_42_fu_671_p1 = esl_zext<96,7>(tmp_40_reg_822.read());
}

void getConvolutionResult::thread_tmp_43_fu_580_p2() {
    tmp_43_fu_580_p2 = (!tmp_41_fu_576_p1.read().is_01())? sc_lv<96>(): tmp_38_fu_554_p3.read() >> (unsigned short)tmp_41_fu_576_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_44_fu_674_p2() {
    tmp_44_fu_674_p2 = (!tmp_42_fu_671_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_42_fu_671_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_45_fu_680_p2() {
    tmp_45_fu_680_p2 = (tmp_43_reg_827.read() & tmp_44_fu_674_p2.read());
}

void getConvolutionResult::thread_tmp_46_fu_685_p1() {
    tmp_46_fu_685_p1 = tmp_45_fu_680_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_47_fu_597_p2() {
    tmp_47_fu_597_p2 = (!tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01() || !tmp_15_i_cast_mid2_v_fu_506_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()) > sc_biguint<7>(tmp_15_i_cast_mid2_v_fu_506_p2.read()));
}

void getConvolutionResult::thread_tmp_48_fu_603_p4() {
    tmp_48_fu_603_p4 = tmp_1_fu_586_p5.read().range(0, 95);
}

void getConvolutionResult::thread_tmp_49_fu_613_p2() {
    tmp_49_fu_613_p2 = (!tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01() || !tmp_15_i_cast_mid2_v_fu_506_p2.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()) - sc_biguint<7>(tmp_15_i_cast_mid2_v_fu_506_p2.read()));
}

void getConvolutionResult::thread_tmp_4_fu_260_p2() {
    tmp_4_fu_260_p2 = (!tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01() || !tmp_7_i_cast_mid2_v_fu_238_p2.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()) - sc_biguint<7>(tmp_7_i_cast_mid2_v_fu_238_p2.read()));
}

void getConvolutionResult::thread_tmp_50_fu_619_p2() {
    tmp_50_fu_619_p2 = (!ap_const_lv7_5F.is_01() || !tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()));
}

void getConvolutionResult::thread_tmp_51_fu_625_p2() {
    tmp_51_fu_625_p2 = (!tmp_15_i_cast_mid2_v_fu_506_p2.read().is_01() || !tmp_14_i_cast_mid2_v_fu_499_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_15_i_cast_mid2_v_fu_506_p2.read()) - sc_biguint<7>(tmp_14_i_cast_mid2_v_fu_499_p3.read()));
}

void getConvolutionResult::thread_tmp_52_fu_631_p3() {
    tmp_52_fu_631_p3 = (!tmp_47_fu_597_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_47_fu_597_p2.read()[0].to_bool())? tmp_49_fu_613_p2.read(): tmp_51_fu_625_p2.read());
}

void getConvolutionResult::thread_tmp_53_fu_639_p3() {
    tmp_53_fu_639_p3 = (!tmp_47_fu_597_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_47_fu_597_p2.read()[0].to_bool())? tmp_48_fu_603_p4.read(): tmp_1_fu_586_p5.read());
}

void getConvolutionResult::thread_tmp_54_fu_647_p3() {
    tmp_54_fu_647_p3 = (!tmp_47_fu_597_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_47_fu_597_p2.read()[0].to_bool())? tmp_50_fu_619_p2.read(): tmp_14_i_cast_mid2_v_fu_499_p3.read());
}

void getConvolutionResult::thread_tmp_55_fu_655_p2() {
    tmp_55_fu_655_p2 = (!ap_const_lv7_5F.is_01() || !tmp_52_fu_631_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_52_fu_631_p3.read()));
}

void getConvolutionResult::thread_tmp_56_fu_661_p1() {
    tmp_56_fu_661_p1 = esl_zext<96,7>(tmp_54_fu_647_p3.read());
}

void getConvolutionResult::thread_tmp_57_fu_689_p1() {
    tmp_57_fu_689_p1 = esl_zext<96,7>(tmp_55_reg_832.read());
}

void getConvolutionResult::thread_tmp_58_fu_665_p2() {
    tmp_58_fu_665_p2 = (!tmp_56_fu_661_p1.read().is_01())? sc_lv<96>(): tmp_53_fu_639_p3.read() >> (unsigned short)tmp_56_fu_661_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_59_fu_692_p2() {
    tmp_59_fu_692_p2 = (!tmp_57_fu_689_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_57_fu_689_p1.read().to_uint();
}

void getConvolutionResult::thread_tmp_5_fu_266_p2() {
    tmp_5_fu_266_p2 = (!ap_const_lv7_5F.is_01() || !tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()));
}

void getConvolutionResult::thread_tmp_60_fu_698_p2() {
    tmp_60_fu_698_p2 = (tmp_58_reg_837.read() & tmp_59_fu_692_p2.read());
}

void getConvolutionResult::thread_tmp_61_fu_703_p1() {
    tmp_61_fu_703_p1 = tmp_60_fu_698_p2.read().range(32-1, 0);
}

void getConvolutionResult::thread_tmp_6_fu_272_p2() {
    tmp_6_fu_272_p2 = (!tmp_7_i_cast_mid2_v_fu_238_p2.read().is_01() || !tmp_6_i_cast_mid2_v_fu_231_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_7_i_cast_mid2_v_fu_238_p2.read()) - sc_biguint<7>(tmp_6_i_cast_mid2_v_fu_231_p3.read()));
}

void getConvolutionResult::thread_tmp_6_i_cast_mid2_v_fu_231_p3() {
    tmp_6_i_cast_mid2_v_fu_231_p3 = esl_concat<2,5>(tmp_6_i_cast_mid2_v_s_reg_736.read(), ap_const_lv5_0);
}

void getConvolutionResult::thread_tmp_6_i_cast_mid2_v_s_fu_212_p3() {
    tmp_6_i_cast_mid2_v_s_fu_212_p3 = (!exitcond_i_fu_192_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i_fu_192_p2.read()[0].to_bool())? row_fu_206_p2.read(): ap_phi_mux_row_i_phi_fu_105_p4.read());
}

void getConvolutionResult::thread_tmp_7_fu_278_p3() {
    tmp_7_fu_278_p3 = (!tmp_2_fu_244_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_2_fu_244_p2.read()[0].to_bool())? tmp_4_fu_260_p2.read(): tmp_6_fu_272_p2.read());
}

void getConvolutionResult::thread_tmp_7_i9_fu_488_p1() {
    tmp_7_i9_fu_488_p1 = esl_zext<64,2>(col_i7_mid2_fu_466_p3.read());
}

void getConvolutionResult::thread_tmp_7_i_cast_mid2_v_fu_238_p2() {
    tmp_7_i_cast_mid2_v_fu_238_p2 = (tmp_6_i_cast_mid2_v_fu_231_p3.read() | ap_const_lv7_1F);
}

void getConvolutionResult::thread_tmp_8_fu_286_p3() {
    tmp_8_fu_286_p3 = (!tmp_2_fu_244_p2.read()[0].is_01())? sc_lv<96>(): ((tmp_2_fu_244_p2.read()[0].to_bool())? tmp_3_fu_250_p4.read(): array_r_q0.read());
}

void getConvolutionResult::thread_tmp_8_i1_fu_707_p2() {
    tmp_8_i1_fu_707_p2 = (!tmp_46_reg_842.read().is_01() || !tmp_61_reg_847.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_46_reg_842.read()) * sc_bigint<32>(tmp_61_reg_847.read());
}

void getConvolutionResult::thread_tmp_9_fu_294_p3() {
    tmp_9_fu_294_p3 = (!tmp_2_fu_244_p2.read()[0].is_01())? sc_lv<7>(): ((tmp_2_fu_244_p2.read()[0].to_bool())? tmp_5_fu_266_p2.read(): tmp_6_i_cast_mid2_v_fu_231_p3.read());
}

void getConvolutionResult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_180_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_180_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_448_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten1_fu_448_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void getConvolutionResult::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_address0\" :  \"" << array_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_ce0\" :  \"" << array_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_r_q0\" :  \"" << array_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

