// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getConvolutionResult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getConvolutionResult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getConvolutionResult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> getConvolutionResult::ap_ST_fsm_state1 = "1";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_state7 = "100";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<5> getConvolutionResult::ap_ST_fsm_state13 = "10000";
const sc_lv<32> getConvolutionResult::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool getConvolutionResult::ap_const_boolean_1 = true;
const bool getConvolutionResult::ap_const_boolean_0 = false;
const sc_lv<1> getConvolutionResult::ap_const_lv1_0 = "0";
const sc_lv<32> getConvolutionResult::ap_const_lv32_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_3 = "11";
const sc_lv<1> getConvolutionResult::ap_const_lv1_1 = "1";
const sc_lv<32> getConvolutionResult::ap_const_lv32_2 = "10";
const sc_lv<4> getConvolutionResult::ap_const_lv4_0 = "0000";
const sc_lv<2> getConvolutionResult::ap_const_lv2_0 = "00";
const sc_lv<4> getConvolutionResult::ap_const_lv4_9 = "1001";
const sc_lv<4> getConvolutionResult::ap_const_lv4_1 = "1";
const sc_lv<2> getConvolutionResult::ap_const_lv2_1 = "1";
const sc_lv<2> getConvolutionResult::ap_const_lv2_3 = "11";
const sc_lv<32> getConvolutionResult::ap_const_lv32_4 = "100";

getConvolutionResult::getConvolutionResult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_vertical_sobel_oper_U = new getConvolutionResbkb("p_vertical_sobel_oper_U");
    p_vertical_sobel_oper_U->clk(ap_clk);
    p_vertical_sobel_oper_U->reset(ap_rst);
    p_vertical_sobel_oper_U->address0(p_vertical_sobel_oper_address0);
    p_vertical_sobel_oper_U->ce0(p_vertical_sobel_oper_ce0);
    p_vertical_sobel_oper_U->q0(p_vertical_sobel_oper_q0);
    p_horizontal_sobel_op_U = new getConvolutionRescud("p_horizontal_sobel_op_U");
    p_horizontal_sobel_op_U->clk(ap_clk);
    p_horizontal_sobel_op_U->reset(ap_rst);
    p_horizontal_sobel_op_U->address0(p_horizontal_sobel_op_address0);
    p_horizontal_sobel_op_U->ce0(p_horizontal_sobel_op_ce0);
    p_horizontal_sobel_op_U->q0(p_horizontal_sobel_op_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_188_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state8);
    sensitive << ( exitcond_flatten1_fu_283_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_METHOD(thread_ap_phi_mux_row_i1_phi_fu_154_p4);
    sensitive << ( row_i1_reg_150 );
    sensitive << ( exitcond_flatten1_reg_435 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_i4_mid2_v_reg_449 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_row_i_phi_fu_109_p4);
    sensitive << ( row_i_reg_105 );
    sensitive << ( exitcond_flatten_reg_384 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_i_mid2_v_reg_398 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return);
    sensitive << ( summation_1_i_reg_116 );
    sensitive << ( summation_1_i5_reg_161 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_array_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_2_cast_fu_263_p1 );
    sensitive << ( tmp_5_cast_fu_358_p1 );

    SC_METHOD(thread_array_r_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_col_1_fu_323_p2);
    sensitive << ( col_i6_mid2_fu_307_p3 );

    SC_METHOD(thread_col_fu_228_p2);
    sensitive << ( col_i_mid2_fu_212_p3 );

    SC_METHOD(thread_col_i6_mid2_fu_307_p3);
    sensitive << ( col_i6_reg_173 );
    sensitive << ( exitcond_i_fu_301_p2 );

    SC_METHOD(thread_col_i_mid2_fu_212_p3);
    sensitive << ( col_i_reg_128 );
    sensitive << ( exitcond_i3_fu_206_p2 );

    SC_METHOD(thread_exitcond_flatten1_fu_283_p2);
    sensitive << ( indvar_flatten1_reg_139 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_188_p2);
    sensitive << ( indvar_flatten_reg_94 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i3_fu_206_p2);
    sensitive << ( col_i_reg_128 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_188_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i_fu_301_p2);
    sensitive << ( col_i6_reg_173 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten1_fu_283_p2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_indvar_flatten_next1_fu_289_p2);
    sensitive << ( indvar_flatten1_reg_139 );

    SC_METHOD(thread_indvar_flatten_next_fu_194_p2);
    sensitive << ( indvar_flatten_reg_94 );

    SC_METHOD(thread_p_horizontal_sobel_op_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_5_cast_fu_358_p1 );

    SC_METHOD(thread_p_horizontal_sobel_op_ce0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_p_shl1_cast_fu_339_p1);
    sensitive << ( tmp_3_fu_332_p3 );

    SC_METHOD(thread_p_shl_cast_fu_244_p1);
    sensitive << ( tmp_fu_237_p3 );

    SC_METHOD(thread_p_vertical_sobel_oper_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_2_cast_fu_263_p1 );

    SC_METHOD(thread_p_vertical_sobel_oper_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_row_1_fu_295_p2);
    sensitive << ( ap_phi_mux_row_i1_phi_fu_154_p4 );

    SC_METHOD(thread_row_fu_200_p2);
    sensitive << ( ap_phi_mux_row_i_phi_fu_109_p4 );

    SC_METHOD(thread_summation_1_fu_373_p2);
    sensitive << ( summation_1_i5_reg_161 );
    sensitive << ( tmp_8_i_reg_476 );

    SC_METHOD(thread_summation_fu_278_p2);
    sensitive << ( summation_1_i_reg_116 );
    sensitive << ( tmp_3_i_reg_425 );

    SC_METHOD(thread_tmp_1_fu_248_p2);
    sensitive << ( p_shl_cast_fu_244_p1 );
    sensitive << ( tmp_i_mid2_cast_fu_234_p1 );

    SC_METHOD(thread_tmp_2_cast_fu_263_p1);
    sensitive << ( tmp_2_fu_257_p2 );

    SC_METHOD(thread_tmp_2_fu_257_p2);
    sensitive << ( tmp_1_fu_248_p2 );
    sensitive << ( tmp_2_i_cast_fu_254_p1 );

    SC_METHOD(thread_tmp_2_i_cast_fu_254_p1);
    sensitive << ( col_i_mid2_reg_393 );

    SC_METHOD(thread_tmp_3_fu_332_p3);
    sensitive << ( tmp_i4_mid2_v_reg_449 );

    SC_METHOD(thread_tmp_3_i_fu_272_p0);
    sensitive << ( p_vertical_sobel_oper_1_reg_420 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_3_i_fu_272_p2);
    sensitive << ( reg_184 );
    sensitive << ( tmp_3_i_fu_272_p0 );

    SC_METHOD(thread_tmp_4_fu_343_p2);
    sensitive << ( p_shl1_cast_fu_339_p1 );
    sensitive << ( tmp_i4_mid2_cast_fu_329_p1 );

    SC_METHOD(thread_tmp_5_cast_fu_358_p1);
    sensitive << ( tmp_5_fu_352_p2 );

    SC_METHOD(thread_tmp_5_fu_352_p2);
    sensitive << ( tmp_4_fu_343_p2 );
    sensitive << ( tmp_7_i_cast_fu_349_p1 );

    SC_METHOD(thread_tmp_7_i_cast_fu_349_p1);
    sensitive << ( col_i6_mid2_reg_444 );

    SC_METHOD(thread_tmp_8_i_fu_367_p0);
    sensitive << ( p_horizontal_sobel_op_1_reg_471 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_tmp_8_i_fu_367_p2);
    sensitive << ( reg_184 );
    sensitive << ( tmp_8_i_fu_367_p0 );

    SC_METHOD(thread_tmp_fu_237_p3);
    sensitive << ( tmp_i_mid2_v_reg_398 );

    SC_METHOD(thread_tmp_i4_mid2_cast_fu_329_p1);
    sensitive << ( tmp_i4_mid2_v_reg_449 );

    SC_METHOD(thread_tmp_i4_mid2_v_fu_315_p3);
    sensitive << ( ap_phi_mux_row_i1_phi_fu_154_p4 );
    sensitive << ( exitcond_i_fu_301_p2 );
    sensitive << ( row_1_fu_295_p2 );

    SC_METHOD(thread_tmp_i_mid2_cast_fu_234_p1);
    sensitive << ( tmp_i_mid2_v_reg_398 );

    SC_METHOD(thread_tmp_i_mid2_v_fu_220_p3);
    sensitive << ( ap_phi_mux_row_i_phi_fu_109_p4 );
    sensitive << ( exitcond_i3_fu_206_p2 );
    sensitive << ( row_fu_200_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_188_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( exitcond_flatten1_fu_283_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getConvolutionResult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, array_r_address0, "(port)array_r_address0");
    sc_trace(mVcdFile, array_r_ce0, "(port)array_r_ce0");
    sc_trace(mVcdFile, array_r_q0, "(port)array_r_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_vertical_sobel_oper_address0, "p_vertical_sobel_oper_address0");
    sc_trace(mVcdFile, p_vertical_sobel_oper_ce0, "p_vertical_sobel_oper_ce0");
    sc_trace(mVcdFile, p_vertical_sobel_oper_q0, "p_vertical_sobel_oper_q0");
    sc_trace(mVcdFile, p_horizontal_sobel_op_address0, "p_horizontal_sobel_op_address0");
    sc_trace(mVcdFile, p_horizontal_sobel_op_ce0, "p_horizontal_sobel_op_ce0");
    sc_trace(mVcdFile, p_horizontal_sobel_op_q0, "p_horizontal_sobel_op_q0");
    sc_trace(mVcdFile, indvar_flatten_reg_94, "indvar_flatten_reg_94");
    sc_trace(mVcdFile, row_i_reg_105, "row_i_reg_105");
    sc_trace(mVcdFile, summation_1_i_reg_116, "summation_1_i_reg_116");
    sc_trace(mVcdFile, col_i_reg_128, "col_i_reg_128");
    sc_trace(mVcdFile, indvar_flatten1_reg_139, "indvar_flatten1_reg_139");
    sc_trace(mVcdFile, row_i1_reg_150, "row_i1_reg_150");
    sc_trace(mVcdFile, summation_1_i5_reg_161, "summation_1_i5_reg_161");
    sc_trace(mVcdFile, col_i6_reg_173, "col_i6_reg_173");
    sc_trace(mVcdFile, reg_184, "reg_184");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten_reg_384, "exitcond_flatten_reg_384");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_flatten_reg_384, "ap_reg_pp0_iter1_exitcond_flatten_reg_384");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage0_iter0, "ap_block_state8_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter1, "ap_block_state9_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage0_iter2, "ap_block_state10_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter3, "ap_block_state11_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter4, "ap_block_state12_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten1_reg_435, "exitcond_flatten1_reg_435");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_exitcond_flatten1_reg_435, "ap_reg_pp1_iter1_exitcond_flatten1_reg_435");
    sc_trace(mVcdFile, exitcond_flatten_fu_188_p2, "exitcond_flatten_fu_188_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_flatten_reg_384, "ap_reg_pp0_iter2_exitcond_flatten_reg_384");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_flatten_reg_384, "ap_reg_pp0_iter3_exitcond_flatten_reg_384");
    sc_trace(mVcdFile, indvar_flatten_next_fu_194_p2, "indvar_flatten_next_fu_194_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, col_i_mid2_fu_212_p3, "col_i_mid2_fu_212_p3");
    sc_trace(mVcdFile, col_i_mid2_reg_393, "col_i_mid2_reg_393");
    sc_trace(mVcdFile, tmp_i_mid2_v_fu_220_p3, "tmp_i_mid2_v_fu_220_p3");
    sc_trace(mVcdFile, tmp_i_mid2_v_reg_398, "tmp_i_mid2_v_reg_398");
    sc_trace(mVcdFile, col_fu_228_p2, "col_fu_228_p2");
    sc_trace(mVcdFile, p_vertical_sobel_oper_1_reg_420, "p_vertical_sobel_oper_1_reg_420");
    sc_trace(mVcdFile, tmp_3_i_fu_272_p2, "tmp_3_i_fu_272_p2");
    sc_trace(mVcdFile, tmp_3_i_reg_425, "tmp_3_i_reg_425");
    sc_trace(mVcdFile, summation_fu_278_p2, "summation_fu_278_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, exitcond_flatten1_fu_283_p2, "exitcond_flatten1_fu_283_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_reg_pp1_iter2_exitcond_flatten1_reg_435, "ap_reg_pp1_iter2_exitcond_flatten1_reg_435");
    sc_trace(mVcdFile, ap_reg_pp1_iter3_exitcond_flatten1_reg_435, "ap_reg_pp1_iter3_exitcond_flatten1_reg_435");
    sc_trace(mVcdFile, indvar_flatten_next1_fu_289_p2, "indvar_flatten_next1_fu_289_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, col_i6_mid2_fu_307_p3, "col_i6_mid2_fu_307_p3");
    sc_trace(mVcdFile, col_i6_mid2_reg_444, "col_i6_mid2_reg_444");
    sc_trace(mVcdFile, tmp_i4_mid2_v_fu_315_p3, "tmp_i4_mid2_v_fu_315_p3");
    sc_trace(mVcdFile, tmp_i4_mid2_v_reg_449, "tmp_i4_mid2_v_reg_449");
    sc_trace(mVcdFile, col_1_fu_323_p2, "col_1_fu_323_p2");
    sc_trace(mVcdFile, p_horizontal_sobel_op_1_reg_471, "p_horizontal_sobel_op_1_reg_471");
    sc_trace(mVcdFile, tmp_8_i_fu_367_p2, "tmp_8_i_fu_367_p2");
    sc_trace(mVcdFile, tmp_8_i_reg_476, "tmp_8_i_reg_476");
    sc_trace(mVcdFile, summation_1_fu_373_p2, "summation_1_fu_373_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state8, "ap_condition_pp1_exit_iter0_state8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_phi_mux_row_i_phi_fu_109_p4, "ap_phi_mux_row_i_phi_fu_109_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_row_i1_phi_fu_154_p4, "ap_phi_mux_row_i1_phi_fu_154_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_2_cast_fu_263_p1, "tmp_2_cast_fu_263_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_358_p1, "tmp_5_cast_fu_358_p1");
    sc_trace(mVcdFile, exitcond_i3_fu_206_p2, "exitcond_i3_fu_206_p2");
    sc_trace(mVcdFile, row_fu_200_p2, "row_fu_200_p2");
    sc_trace(mVcdFile, tmp_fu_237_p3, "tmp_fu_237_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_244_p1, "p_shl_cast_fu_244_p1");
    sc_trace(mVcdFile, tmp_i_mid2_cast_fu_234_p1, "tmp_i_mid2_cast_fu_234_p1");
    sc_trace(mVcdFile, tmp_1_fu_248_p2, "tmp_1_fu_248_p2");
    sc_trace(mVcdFile, tmp_2_i_cast_fu_254_p1, "tmp_2_i_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_2_fu_257_p2, "tmp_2_fu_257_p2");
    sc_trace(mVcdFile, tmp_3_i_fu_272_p0, "tmp_3_i_fu_272_p0");
    sc_trace(mVcdFile, exitcond_i_fu_301_p2, "exitcond_i_fu_301_p2");
    sc_trace(mVcdFile, row_1_fu_295_p2, "row_1_fu_295_p2");
    sc_trace(mVcdFile, tmp_3_fu_332_p3, "tmp_3_fu_332_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_339_p1, "p_shl1_cast_fu_339_p1");
    sc_trace(mVcdFile, tmp_i4_mid2_cast_fu_329_p1, "tmp_i4_mid2_cast_fu_329_p1");
    sc_trace(mVcdFile, tmp_4_fu_343_p2, "tmp_4_fu_343_p2");
    sc_trace(mVcdFile, tmp_7_i_cast_fu_349_p1, "tmp_7_i_cast_fu_349_p1");
    sc_trace(mVcdFile, tmp_5_fu_352_p2, "tmp_5_fu_352_p2");
    sc_trace(mVcdFile, tmp_8_i_fu_367_p0, "tmp_8_i_fu_367_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("getConvolutionResult.hdltvin.dat");
    mHdltvoutHandle.open("getConvolutionResult.hdltvout.dat");
}

getConvolutionResult::~getConvolutionResult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete p_vertical_sobel_oper_U;
    delete p_horizontal_sobel_op_U;
}

void getConvolutionResult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state8.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter4 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        col_i6_reg_173 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_283_p2.read()))) {
        col_i6_reg_173 = col_1_fu_323_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_188_p2.read()))) {
        col_i_reg_128 = col_fu_228_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        col_i_reg_128 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        indvar_flatten1_reg_139 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_283_p2.read()))) {
        indvar_flatten1_reg_139 = indvar_flatten_next1_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_188_p2.read()))) {
        indvar_flatten_reg_94 = indvar_flatten_next_fu_194_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_94 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        row_i1_reg_150 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_435.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        row_i1_reg_150 = tmp_i4_mid2_v_reg_449.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_384.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        row_i_reg_105 = tmp_i_mid2_v_reg_398.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        row_i_reg_105 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        summation_1_i5_reg_161 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter3_exitcond_flatten1_reg_435.read()))) {
        summation_1_i5_reg_161 = summation_1_fu_373_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter3_exitcond_flatten_reg_384.read()))) {
        summation_1_i_reg_116 = summation_fu_278_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        summation_1_i_reg_116 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_reg_pp0_iter1_exitcond_flatten_reg_384 = exitcond_flatten_reg_384.read();
        exitcond_flatten_reg_384 = exitcond_flatten_fu_188_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter2_exitcond_flatten_reg_384 = ap_reg_pp0_iter1_exitcond_flatten_reg_384.read();
        ap_reg_pp0_iter3_exitcond_flatten_reg_384 = ap_reg_pp0_iter2_exitcond_flatten_reg_384.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
        ap_reg_pp1_iter1_exitcond_flatten1_reg_435 = exitcond_flatten1_reg_435.read();
        exitcond_flatten1_reg_435 = exitcond_flatten1_fu_283_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp1_iter2_exitcond_flatten1_reg_435 = ap_reg_pp1_iter1_exitcond_flatten1_reg_435.read();
        ap_reg_pp1_iter3_exitcond_flatten1_reg_435 = ap_reg_pp1_iter2_exitcond_flatten1_reg_435.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_283_p2.read()))) {
        col_i6_mid2_reg_444 = col_i6_mid2_fu_307_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_188_p2.read()))) {
        col_i_mid2_reg_393 = col_i_mid2_fu_212_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter1_exitcond_flatten1_reg_435.read()))) {
        p_horizontal_sobel_op_1_reg_471 = p_horizontal_sobel_op_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_384.read(), ap_const_lv1_0))) {
        p_vertical_sobel_oper_1_reg_420 = p_vertical_sobel_oper_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_flatten_reg_384.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter1_exitcond_flatten1_reg_435.read())))) {
        reg_184 = array_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_flatten_reg_384.read()))) {
        tmp_3_i_reg_425 = tmp_3_i_fu_272_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter2_exitcond_flatten1_reg_435.read()))) {
        tmp_8_i_reg_476 = tmp_8_i_fu_367_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_fu_283_p2.read()))) {
        tmp_i4_mid2_v_reg_449 = tmp_i4_mid2_v_fu_315_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_188_p2.read()))) {
        tmp_i_mid2_v_reg_398 = tmp_i_mid2_v_fu_220_p3.read();
    }
}

void getConvolutionResult::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void getConvolutionResult::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void getConvolutionResult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getConvolutionResult::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[4];
}

void getConvolutionResult::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[2];
}

void getConvolutionResult::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state10_pp1_stage0_iter2() {
    ap_block_state10_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state11_pp1_stage0_iter3() {
    ap_block_state11_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state12_pp1_stage0_iter4() {
    ap_block_state12_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state8_pp1_stage0_iter0() {
    ap_block_state8_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_block_state9_pp1_stage0_iter1() {
    ap_block_state9_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getConvolutionResult::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_188_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_condition_pp1_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(exitcond_flatten1_fu_283_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getConvolutionResult::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void getConvolutionResult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_phi_mux_row_i1_phi_fu_154_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten1_reg_435.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_row_i1_phi_fu_154_p4 = tmp_i4_mid2_v_reg_449.read();
    } else {
        ap_phi_mux_row_i1_phi_fu_154_p4 = row_i1_reg_150.read();
    }
}

void getConvolutionResult::thread_ap_phi_mux_row_i_phi_fu_109_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_384.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_row_i_phi_fu_109_p4 = tmp_i_mid2_v_reg_398.read();
    } else {
        ap_phi_mux_row_i_phi_fu_109_p4 = row_i_reg_105.read();
    }
}

void getConvolutionResult::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_ap_return() {
    ap_return = (!summation_1_i5_reg_161.read().is_01() || !summation_1_i_reg_116.read().is_01())? sc_lv<32>(): (sc_biguint<32>(summation_1_i5_reg_161.read()) + sc_biguint<32>(summation_1_i_reg_116.read()));
}

void getConvolutionResult::thread_array_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        array_r_address0 =  (sc_lv<4>) (tmp_5_cast_fu_358_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        array_r_address0 =  (sc_lv<4>) (tmp_2_cast_fu_263_p1.read());
    } else {
        array_r_address0 = "XXXX";
    }
}

void getConvolutionResult::thread_array_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())))) {
        array_r_ce0 = ap_const_logic_1;
    } else {
        array_r_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_col_1_fu_323_p2() {
    col_1_fu_323_p2 = (!col_i6_mid2_fu_307_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(col_i6_mid2_fu_307_p3.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_col_fu_228_p2() {
    col_fu_228_p2 = (!col_i_mid2_fu_212_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(col_i_mid2_fu_212_p3.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_col_i6_mid2_fu_307_p3() {
    col_i6_mid2_fu_307_p3 = (!exitcond_i_fu_301_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i_fu_301_p2.read()[0].to_bool())? ap_const_lv2_0: col_i6_reg_173.read());
}

void getConvolutionResult::thread_col_i_mid2_fu_212_p3() {
    col_i_mid2_fu_212_p3 = (!exitcond_i3_fu_206_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i3_fu_206_p2.read()[0].to_bool())? ap_const_lv2_0: col_i_reg_128.read());
}

void getConvolutionResult::thread_exitcond_flatten1_fu_283_p2() {
    exitcond_flatten1_fu_283_p2 = (!indvar_flatten1_reg_139.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten1_reg_139.read() == ap_const_lv4_9);
}

void getConvolutionResult::thread_exitcond_flatten_fu_188_p2() {
    exitcond_flatten_fu_188_p2 = (!indvar_flatten_reg_94.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_94.read() == ap_const_lv4_9);
}

void getConvolutionResult::thread_exitcond_i3_fu_206_p2() {
    exitcond_i3_fu_206_p2 = (!col_i_reg_128.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_i_reg_128.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_exitcond_i_fu_301_p2() {
    exitcond_i_fu_301_p2 = (!col_i6_reg_173.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(col_i6_reg_173.read() == ap_const_lv2_3);
}

void getConvolutionResult::thread_indvar_flatten_next1_fu_289_p2() {
    indvar_flatten_next1_fu_289_p2 = (!indvar_flatten1_reg_139.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten1_reg_139.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void getConvolutionResult::thread_indvar_flatten_next_fu_194_p2() {
    indvar_flatten_next_fu_194_p2 = (!indvar_flatten_reg_94.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten_reg_94.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void getConvolutionResult::thread_p_horizontal_sobel_op_address0() {
    p_horizontal_sobel_op_address0 =  (sc_lv<4>) (tmp_5_cast_fu_358_p1.read());
}

void getConvolutionResult::thread_p_horizontal_sobel_op_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        p_horizontal_sobel_op_ce0 = ap_const_logic_1;
    } else {
        p_horizontal_sobel_op_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_p_shl1_cast_fu_339_p1() {
    p_shl1_cast_fu_339_p1 = esl_zext<5,4>(tmp_3_fu_332_p3.read());
}

void getConvolutionResult::thread_p_shl_cast_fu_244_p1() {
    p_shl_cast_fu_244_p1 = esl_zext<5,4>(tmp_fu_237_p3.read());
}

void getConvolutionResult::thread_p_vertical_sobel_oper_address0() {
    p_vertical_sobel_oper_address0 =  (sc_lv<4>) (tmp_2_cast_fu_263_p1.read());
}

void getConvolutionResult::thread_p_vertical_sobel_oper_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        p_vertical_sobel_oper_ce0 = ap_const_logic_1;
    } else {
        p_vertical_sobel_oper_ce0 = ap_const_logic_0;
    }
}

void getConvolutionResult::thread_row_1_fu_295_p2() {
    row_1_fu_295_p2 = (!ap_phi_mux_row_i1_phi_fu_154_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_row_i1_phi_fu_154_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_row_fu_200_p2() {
    row_fu_200_p2 = (!ap_phi_mux_row_i_phi_fu_109_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_row_i_phi_fu_109_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void getConvolutionResult::thread_summation_1_fu_373_p2() {
    summation_1_fu_373_p2 = (!summation_1_i5_reg_161.read().is_01() || !tmp_8_i_reg_476.read().is_01())? sc_lv<32>(): (sc_biguint<32>(summation_1_i5_reg_161.read()) + sc_biguint<32>(tmp_8_i_reg_476.read()));
}

void getConvolutionResult::thread_summation_fu_278_p2() {
    summation_fu_278_p2 = (!summation_1_i_reg_116.read().is_01() || !tmp_3_i_reg_425.read().is_01())? sc_lv<32>(): (sc_biguint<32>(summation_1_i_reg_116.read()) + sc_biguint<32>(tmp_3_i_reg_425.read()));
}

void getConvolutionResult::thread_tmp_1_fu_248_p2() {
    tmp_1_fu_248_p2 = (!p_shl_cast_fu_244_p1.read().is_01() || !tmp_i_mid2_cast_fu_234_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_244_p1.read()) - sc_biguint<5>(tmp_i_mid2_cast_fu_234_p1.read()));
}

void getConvolutionResult::thread_tmp_2_cast_fu_263_p1() {
    tmp_2_cast_fu_263_p1 = esl_sext<64,5>(tmp_2_fu_257_p2.read());
}

void getConvolutionResult::thread_tmp_2_fu_257_p2() {
    tmp_2_fu_257_p2 = (!tmp_1_fu_248_p2.read().is_01() || !tmp_2_i_cast_fu_254_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_1_fu_248_p2.read()) + sc_biguint<5>(tmp_2_i_cast_fu_254_p1.read()));
}

void getConvolutionResult::thread_tmp_2_i_cast_fu_254_p1() {
    tmp_2_i_cast_fu_254_p1 = esl_zext<5,2>(col_i_mid2_reg_393.read());
}

void getConvolutionResult::thread_tmp_3_fu_332_p3() {
    tmp_3_fu_332_p3 = esl_concat<2,2>(tmp_i4_mid2_v_reg_449.read(), ap_const_lv2_0);
}

void getConvolutionResult::thread_tmp_3_i_fu_272_p0() {
    tmp_3_i_fu_272_p0 = p_vertical_sobel_oper_1_reg_420.read();
}

void getConvolutionResult::thread_tmp_3_i_fu_272_p2() {
    tmp_3_i_fu_272_p2 = (!tmp_3_i_fu_272_p0.read().is_01() || !reg_184.read().is_01())? sc_lv<32>(): sc_bigint<3>(tmp_3_i_fu_272_p0.read()) * sc_bigint<32>(reg_184.read());
}

void getConvolutionResult::thread_tmp_4_fu_343_p2() {
    tmp_4_fu_343_p2 = (!p_shl1_cast_fu_339_p1.read().is_01() || !tmp_i4_mid2_cast_fu_329_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl1_cast_fu_339_p1.read()) - sc_biguint<5>(tmp_i4_mid2_cast_fu_329_p1.read()));
}

void getConvolutionResult::thread_tmp_5_cast_fu_358_p1() {
    tmp_5_cast_fu_358_p1 = esl_sext<64,5>(tmp_5_fu_352_p2.read());
}

void getConvolutionResult::thread_tmp_5_fu_352_p2() {
    tmp_5_fu_352_p2 = (!tmp_4_fu_343_p2.read().is_01() || !tmp_7_i_cast_fu_349_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_4_fu_343_p2.read()) + sc_biguint<5>(tmp_7_i_cast_fu_349_p1.read()));
}

void getConvolutionResult::thread_tmp_7_i_cast_fu_349_p1() {
    tmp_7_i_cast_fu_349_p1 = esl_zext<5,2>(col_i6_mid2_reg_444.read());
}

void getConvolutionResult::thread_tmp_8_i_fu_367_p0() {
    tmp_8_i_fu_367_p0 = p_horizontal_sobel_op_1_reg_471.read();
}

void getConvolutionResult::thread_tmp_8_i_fu_367_p2() {
    tmp_8_i_fu_367_p2 = (!tmp_8_i_fu_367_p0.read().is_01() || !reg_184.read().is_01())? sc_lv<32>(): sc_bigint<3>(tmp_8_i_fu_367_p0.read()) * sc_bigint<32>(reg_184.read());
}

void getConvolutionResult::thread_tmp_fu_237_p3() {
    tmp_fu_237_p3 = esl_concat<2,2>(tmp_i_mid2_v_reg_398.read(), ap_const_lv2_0);
}

void getConvolutionResult::thread_tmp_i4_mid2_cast_fu_329_p1() {
    tmp_i4_mid2_cast_fu_329_p1 = esl_zext<5,2>(tmp_i4_mid2_v_reg_449.read());
}

void getConvolutionResult::thread_tmp_i4_mid2_v_fu_315_p3() {
    tmp_i4_mid2_v_fu_315_p3 = (!exitcond_i_fu_301_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i_fu_301_p2.read()[0].to_bool())? row_1_fu_295_p2.read(): ap_phi_mux_row_i1_phi_fu_154_p4.read());
}

void getConvolutionResult::thread_tmp_i_mid2_cast_fu_234_p1() {
    tmp_i_mid2_cast_fu_234_p1 = esl_zext<5,2>(tmp_i_mid2_v_reg_398.read());
}

void getConvolutionResult::thread_tmp_i_mid2_v_fu_220_p3() {
    tmp_i_mid2_v_fu_220_p3 = (!exitcond_i3_fu_206_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_i3_fu_206_p2.read()[0].to_bool())? row_fu_200_p2.read(): ap_phi_mux_row_i_phi_fu_109_p4.read());
}

void getConvolutionResult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_188_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten_fu_188_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_283_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter3.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten1_fu_283_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void getConvolutionResult::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_address0\" :  \"" << array_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array_r_ce0\" :  \"" << array_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array_r_q0\" :  \"" << array_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

