-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getPixelClassification is
port (
    pixel : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of getPixelClassification is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "getPixelClassification,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.679625,HLS_SYN_LAT=23,HLS_SYN_TPT=24,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=701,HLS_SYN_LUT=4239}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal Loop_PIXEL_COLOR_LOO_U0_ap_start : STD_LOGIC;
    signal Loop_PIXEL_COLOR_LOO_U0_ap_done : STD_LOGIC;
    signal Loop_PIXEL_COLOR_LOO_U0_ap_continue : STD_LOGIC;
    signal Loop_PIXEL_COLOR_LOO_U0_ap_idle : STD_LOGIC;
    signal Loop_PIXEL_COLOR_LOO_U0_ap_ready : STD_LOGIC;
    signal Loop_PIXEL_COLOR_LOO_U0_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_minimumDistanceIndex : STD_LOGIC;
    signal minimumDistanceIndex_full_n : STD_LOGIC;
    signal p_ColorComparator_Co_U0_ap_start : STD_LOGIC;
    signal p_ColorComparator_Co_U0_ap_done : STD_LOGIC;
    signal p_ColorComparator_Co_U0_ap_continue : STD_LOGIC;
    signal p_ColorComparator_Co_U0_ap_idle : STD_LOGIC;
    signal p_ColorComparator_Co_U0_ap_ready : STD_LOGIC;
    signal p_ColorComparator_Co_U0_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_p_ColorComparator_Co_fu_38_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal minimumDistanceIndex_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Loop_PIXEL_COLOR_LOO_U0_start_full_n : STD_LOGIC;
    signal Loop_PIXEL_COLOR_LOO_U0_start_write : STD_LOGIC;
    signal p_ColorComparator_Co_U0_start_full_n : STD_LOGIC;
    signal p_ColorComparator_Co_U0_start_write : STD_LOGIC;

    component Loop_PIXEL_COLOR_LOO IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pixel : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component p_ColorComparator_Co IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Loop_PIXEL_COLOR_LOO_U0 : component Loop_PIXEL_COLOR_LOO
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_PIXEL_COLOR_LOO_U0_ap_start,
        ap_done => Loop_PIXEL_COLOR_LOO_U0_ap_done,
        ap_continue => Loop_PIXEL_COLOR_LOO_U0_ap_continue,
        ap_idle => Loop_PIXEL_COLOR_LOO_U0_ap_idle,
        ap_ready => Loop_PIXEL_COLOR_LOO_U0_ap_ready,
        pixel => pixel,
        ap_return => Loop_PIXEL_COLOR_LOO_U0_ap_return);

    p_ColorComparator_Co_U0 : component p_ColorComparator_Co
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => p_ColorComparator_Co_U0_ap_start,
        ap_done => p_ColorComparator_Co_U0_ap_done,
        ap_continue => p_ColorComparator_Co_U0_ap_continue,
        ap_idle => p_ColorComparator_Co_U0_ap_idle,
        ap_ready => p_ColorComparator_Co_U0_ap_ready,
        p_read => minimumDistanceIndex_dout,
        ap_return => p_ColorComparator_Co_U0_ap_return);

    minimumDistanceIndex_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_PIXEL_COLOR_LOO_U0_ap_return,
        if_full_n => minimumDistanceIndex_full_n,
        if_write => Loop_PIXEL_COLOR_LOO_U0_ap_done,
        if_dout => minimumDistanceIndex_dout,
        if_empty_n => minimumDistanceIndex_empty_n,
        if_read => p_ColorComparator_Co_U0_ap_ready);




    Loop_PIXEL_COLOR_LOO_U0_ap_continue <= minimumDistanceIndex_full_n;
    Loop_PIXEL_COLOR_LOO_U0_ap_start <= ap_start;
    Loop_PIXEL_COLOR_LOO_U0_start_full_n <= ap_const_logic_1;
    Loop_PIXEL_COLOR_LOO_U0_start_write <= ap_const_logic_0;
    ap_channel_done_minimumDistanceIndex <= Loop_PIXEL_COLOR_LOO_U0_ap_done;
    ap_done <= p_ColorComparator_Co_U0_ap_done;
    ap_idle <= (p_ColorComparator_Co_U0_ap_idle and (minimumDistanceIndex_empty_n xor ap_const_logic_1) and Loop_PIXEL_COLOR_LOO_U0_ap_idle);
    ap_ready <= Loop_PIXEL_COLOR_LOO_U0_ap_ready;
    ap_return <= p_ColorComparator_Co_U0_ap_return;
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= p_ColorComparator_Co_U0_ap_done;
    ap_sync_ready <= Loop_PIXEL_COLOR_LOO_U0_ap_ready;
    p_ColorComparator_Co_U0_ap_continue <= ap_const_logic_1;
    p_ColorComparator_Co_U0_ap_start <= minimumDistanceIndex_empty_n;
    p_ColorComparator_Co_U0_start_full_n <= ap_const_logic_1;
    p_ColorComparator_Co_U0_start_write <= ap_const_logic_0;
    tmp_p_ColorComparator_Co_fu_38_ap_return <= ap_const_lv32_0;
end behav;
