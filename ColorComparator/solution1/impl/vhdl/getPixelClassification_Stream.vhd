-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getPixelClassification_Stream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_pixel_V_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    in_pixel_V_TVALID : IN STD_LOGIC;
    in_pixel_V_TREADY : OUT STD_LOGIC;
    out_pixel_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_pixel_V_TVALID : OUT STD_LOGIC;
    out_pixel_V_TREADY : IN STD_LOGIC );
end;


architecture behav of getPixelClassification_Stream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "getPixelClassification_Stream,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.679625,HLS_SYN_LAT=20,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2078,HLS_SYN_LUT=12715}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv24_FFFF : STD_LOGIC_VECTOR (23 downto 0) := "000000001111111111111111";
    constant ap_const_lv24_FF00FF : STD_LOGIC_VECTOR (23 downto 0) := "111111110000000011111111";
    constant ap_const_lv24_FFFF00 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111100000000";
    constant ap_const_lv24_FF00 : STD_LOGIC_VECTOR (23 downto 0) := "000000001111111100000000";
    constant ap_const_lv24_FF : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000011111111";
    constant ap_const_lv24_FF0000 : STD_LOGIC_VECTOR (23 downto 0) := "111111110000000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_pixel_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal in_pixel_V_0_vld_in : STD_LOGIC;
    signal in_pixel_V_0_vld_out : STD_LOGIC;
    signal in_pixel_V_0_ack_in : STD_LOGIC;
    signal in_pixel_V_0_ack_out : STD_LOGIC;
    signal in_pixel_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal in_pixel_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal in_pixel_V_0_sel_rd : STD_LOGIC := '0';
    signal in_pixel_V_0_sel_wr : STD_LOGIC := '0';
    signal in_pixel_V_0_sel : STD_LOGIC;
    signal in_pixel_V_0_load_A : STD_LOGIC;
    signal in_pixel_V_0_load_B : STD_LOGIC;
    signal in_pixel_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_pixel_V_0_state_cmp_full : STD_LOGIC;
    signal out_pixel_V_1_data_in : STD_LOGIC_VECTOR (23 downto 0);
    signal out_pixel_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal out_pixel_V_1_vld_in : STD_LOGIC;
    signal out_pixel_V_1_vld_out : STD_LOGIC;
    signal out_pixel_V_1_ack_in : STD_LOGIC;
    signal out_pixel_V_1_ack_out : STD_LOGIC;
    signal out_pixel_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal out_pixel_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal out_pixel_V_1_sel_rd : STD_LOGIC := '0';
    signal out_pixel_V_1_sel_wr : STD_LOGIC := '0';
    signal out_pixel_V_1_sel : STD_LOGIC;
    signal out_pixel_V_1_load_A : STD_LOGIC;
    signal out_pixel_V_1_load_B : STD_LOGIC;
    signal out_pixel_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_pixel_V_1_state_cmp_full : STD_LOGIC;
    signal p_color_array_stream_s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_color_array_stream_s_ce0 : STD_LOGIC;
    signal p_color_array_stream_s_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_color_array_stream_s_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_color_array_stream_s_ce1 : STD_LOGIC;
    signal p_color_array_stream_s_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_color_array_stream_s_address2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_color_array_stream_s_ce2 : STD_LOGIC;
    signal p_color_array_stream_s_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal in_pixel_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal do_init_reg_175 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_pixel_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel2_reg_1117 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter18_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_newSel2_reg_1117 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_predicate_op207_write_state20 : BOOLEAN;
    signal ap_predicate_op208_write_state20 : BOOLEAN;
    signal ap_predicate_op209_write_state20 : BOOLEAN;
    signal ap_predicate_op210_write_state20 : BOOLEAN;
    signal ap_predicate_op211_write_state20 : BOOLEAN;
    signal ap_predicate_op212_write_state20 : BOOLEAN;
    signal ap_predicate_op213_write_state20 : BOOLEAN;
    signal ap_block_state20_io : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_predicate_op222_write_state21 : BOOLEAN;
    signal ap_predicate_op224_write_state21 : BOOLEAN;
    signal ap_predicate_op226_write_state21 : BOOLEAN;
    signal ap_predicate_op228_write_state21 : BOOLEAN;
    signal ap_predicate_op230_write_state21 : BOOLEAN;
    signal ap_predicate_op232_write_state21 : BOOLEAN;
    signal ap_predicate_op234_write_state21 : BOOLEAN;
    signal ap_block_state21_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter1_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter2_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter3_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter4_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter5_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter6_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter7_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter8_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter9_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter10_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter11_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter12_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter13_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter14_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter15_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_pixel_V9_rewind_reg_206 : STD_LOGIC_VECTOR (23 downto 0);
    signal in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter2_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter3_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter4_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter5_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter6_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter7_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter8_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter9_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter10_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter11_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter12_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter13_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter14_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter15_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter16_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter17_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal minimumDistance4_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_1_reg_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_286_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter1_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter2_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter3_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter4_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter5_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter6_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter7_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter8_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter9_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter10_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter11_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter12_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter13_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter14_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter15_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter16_i_reg_953 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_fu_297_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter1_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter2_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter3_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter4_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter5_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter6_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter7_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter8_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter9_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter10_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter11_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter12_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter13_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter14_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter15_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter16_i_1_reg_963 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_28_fu_314_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_reg_973 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_exitcond_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_382_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_reg_982 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_396_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_reg_987 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_2_fu_410_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_2_reg_992 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_fu_446_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_reg_998 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_fu_456_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_reg_1003 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_5_fu_466_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_5_reg_1008 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_6_fu_502_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_6_reg_1014 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_6_reg_1014 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_fu_512_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_reg_1019 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_fu_522_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_reg_1024 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_fu_531_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_reg_1030 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_s_fu_540_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_s_reg_1035 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_s_fu_582_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_s_reg_1040 : STD_LOGIC_VECTOR (27 downto 0);
    signal result_3_fu_591_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_3_reg_1045 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_6_fu_600_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_6_reg_1050 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_fu_642_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_1_reg_1055 : STD_LOGIC_VECTOR (27 downto 0);
    signal result_4_fu_651_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_4_reg_1060 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_27_fu_663_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_27_reg_1065 : STD_LOGIC_VECTOR (16 downto 0);
    signal powerSummation_V_2_fu_827_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal powerSummation_V_2_reg_1081 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_6_reg_1086 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_reg_1091 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1096 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_1_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_1_reg_1101 : STD_LOGIC_VECTOR (0 downto 0);
    signal distance_0_minimumDi_1_fu_879_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_0_minimumDi_1_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_1112 : STD_LOGIC_VECTOR (11 downto 0);
    signal newSel2_fu_931_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal distance_0_minimumDi_2_fu_939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fxp_sqrt_fu_262_in_val_V_read : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fxp_sqrt_fu_262_ap_return : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fxp_sqrt_fu_262_ap_ce : STD_LOGIC;
    signal grp_fxp_sqrt_fu_267_in_val_V_read : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fxp_sqrt_fu_267_ap_return : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fxp_sqrt_fu_267_ap_ce : STD_LOGIC;
    signal grp_fxp_sqrt_fu_272_ap_return : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fxp_sqrt_fu_272_ap_ce : STD_LOGIC;
    signal ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_in_pixel_V9_rewind_phi_fu_210_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_220 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_minimumDistance4_phi_fu_238_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_minimumDistanceIndex_1_phi_fu_252_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_303_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal minimumDistanceIndex_fu_277_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_fu_308_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal pixelRed_V_fu_324_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_fu_348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_370_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_cast_fu_374_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pixelGreen_V_fu_334_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorGreen_V_fu_356_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_1_fu_388_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_1_fu_392_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pixelBlue_V_fu_338_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorBlue_V_fu_360_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_2_fu_402_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_2_fu_406_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_3_fu_416_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_3_cast_fu_438_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorGreen_V_1_fu_424_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_4_fu_452_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorBlue_V_1_fu_428_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_5_fu_462_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_6_fu_472_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_6_cast_fu_494_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorGreen_V_2_fu_480_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_7_fu_508_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorBlue_V_2_fu_484_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_8_fu_518_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_fu_531_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast1_fu_528_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_fu_531_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_s_fu_540_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast2_fu_537_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_s_fu_540_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_15_fu_552_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_15_fu_552_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_15_fu_552_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl_i_fu_558_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_shl3_i_fu_570_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl_i_cast_fu_566_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl3_i_cast_fu_578_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal result_3_fu_591_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast3_fu_588_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_3_fu_591_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_6_fu_600_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast4_fu_597_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_6_fu_600_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_612_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_612_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_612_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl_i1_fu_618_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_shl3_i1_fu_630_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl_i1_cast_fu_626_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl3_i1_cast_fu_638_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal result_4_fu_651_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast_fu_648_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_4_fu_651_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_fu_663_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_fu_663_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_669_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_5_fu_680_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_2_cast_cast_fu_691_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_1_cast_fu_687_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp5_fu_694_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_cast_fu_676_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp5_cast_fu_700_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_fu_711_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_7_fu_722_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_6_cast_cast_fu_733_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_4_cast_fu_729_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp9_fu_736_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_3_cast_fu_718_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp9_cast_fu_742_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal result_9_fu_756_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast5_fu_753_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_9_fu_756_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_9_fu_756_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_fu_762_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_11_fu_774_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl_i2_fu_785_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_shl3_i2_fu_796_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl_i2_cast_fu_792_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_shl3_i2_cast_fu_803_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_2_fu_807_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_10_cast_cas_fu_813_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_7_cast_fu_781_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp13_fu_817_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_6_cast5_fu_770_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp13_cast_fu_823_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_5_i_fu_853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_i1_fu_870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_0_minimumDi_fu_862_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_i2_fu_901_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_909_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal minimumDistanceIndex_2_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_cast_fu_915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_fu_924_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_165 : BOOLEAN;
    signal ap_condition_618 : BOOLEAN;

    component fxp_sqrt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        in_val_V_read : IN STD_LOGIC_VECTOR (29 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (19 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component getPixelClassificbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    p_color_array_stream_s_U : component getPixelClassificbkb
    generic map (
        DataWidth => 17,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_color_array_stream_s_address0,
        ce0 => p_color_array_stream_s_ce0,
        q0 => p_color_array_stream_s_q0,
        address1 => p_color_array_stream_s_address1,
        ce1 => p_color_array_stream_s_ce1,
        q1 => p_color_array_stream_s_q1,
        address2 => p_color_array_stream_s_address2,
        ce2 => p_color_array_stream_s_ce2,
        q2 => p_color_array_stream_s_q2);

    grp_fxp_sqrt_fu_262 : component fxp_sqrt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        in_val_V_read => grp_fxp_sqrt_fu_262_in_val_V_read,
        ap_return => grp_fxp_sqrt_fu_262_ap_return,
        ap_ce => grp_fxp_sqrt_fu_262_ap_ce);

    grp_fxp_sqrt_fu_267 : component fxp_sqrt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        in_val_V_read => grp_fxp_sqrt_fu_267_in_val_V_read,
        ap_return => grp_fxp_sqrt_fu_267_ap_return,
        ap_ce => grp_fxp_sqrt_fu_267_ap_ce);

    grp_fxp_sqrt_fu_272 : component fxp_sqrt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        in_val_V_read => powerSummation_V_2_reg_1081,
        ap_return => grp_fxp_sqrt_fu_272_ap_return,
        ap_ce => grp_fxp_sqrt_fu_272_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    in_pixel_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_pixel_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_pixel_V_0_ack_out = ap_const_logic_1) and (in_pixel_V_0_vld_out = ap_const_logic_1))) then 
                                        in_pixel_V_0_sel_rd <= not(in_pixel_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_pixel_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_pixel_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_pixel_V_0_ack_in = ap_const_logic_1) and (in_pixel_V_0_vld_in = ap_const_logic_1))) then 
                                        in_pixel_V_0_sel_wr <= not(in_pixel_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_pixel_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_pixel_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_pixel_V_0_vld_in = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_2)) or ((in_pixel_V_0_vld_in = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_3) and (in_pixel_V_0_ack_out = ap_const_logic_1)))) then 
                    in_pixel_V_0_state <= ap_const_lv2_2;
                elsif ((((in_pixel_V_0_ack_out = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_1)) or ((in_pixel_V_0_ack_out = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_3) and (in_pixel_V_0_vld_in = ap_const_logic_1)))) then 
                    in_pixel_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_pixel_V_0_vld_in = ap_const_logic_0) and (in_pixel_V_0_ack_out = ap_const_logic_1))) and not(((in_pixel_V_0_ack_out = ap_const_logic_0) and (in_pixel_V_0_vld_in = ap_const_logic_1))) and (in_pixel_V_0_state = ap_const_lv2_3)) or ((in_pixel_V_0_state = ap_const_lv2_1) and (in_pixel_V_0_ack_out = ap_const_logic_1)) or ((in_pixel_V_0_state = ap_const_lv2_2) and (in_pixel_V_0_vld_in = ap_const_logic_1)))) then 
                    in_pixel_V_0_state <= ap_const_lv2_3;
                else 
                    in_pixel_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_pixel_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_pixel_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_pixel_V_1_ack_out = ap_const_logic_1) and (out_pixel_V_1_vld_out = ap_const_logic_1))) then 
                                        out_pixel_V_1_sel_rd <= not(out_pixel_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_pixel_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_pixel_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_pixel_V_1_ack_in = ap_const_logic_1) and (out_pixel_V_1_vld_in = ap_const_logic_1))) then 
                                        out_pixel_V_1_sel_wr <= not(out_pixel_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_pixel_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_pixel_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_pixel_V_1_state = ap_const_lv2_2) and (out_pixel_V_1_vld_in = ap_const_logic_0)) or ((out_pixel_V_1_state = ap_const_lv2_3) and (out_pixel_V_1_vld_in = ap_const_logic_0) and (out_pixel_V_1_ack_out = ap_const_logic_1)))) then 
                    out_pixel_V_1_state <= ap_const_lv2_2;
                elsif ((((out_pixel_V_1_state = ap_const_lv2_3) and (out_pixel_V_1_ack_out = ap_const_logic_0) and (out_pixel_V_1_vld_in = ap_const_logic_1)) or ((out_pixel_V_1_state = ap_const_lv2_1) and (out_pixel_V_1_ack_out = ap_const_logic_0)))) then 
                    out_pixel_V_1_state <= ap_const_lv2_1;
                elsif ((((out_pixel_V_1_state = ap_const_lv2_2) and (out_pixel_V_1_vld_in = ap_const_logic_1)) or (not(((out_pixel_V_1_vld_in = ap_const_logic_0) and (out_pixel_V_1_ack_out = ap_const_logic_1))) and not(((out_pixel_V_1_ack_out = ap_const_logic_0) and (out_pixel_V_1_vld_in = ap_const_logic_1))) and (out_pixel_V_1_state = ap_const_lv2_3)) or ((out_pixel_V_1_state = ap_const_lv2_1) and (out_pixel_V_1_ack_out = ap_const_logic_1)))) then 
                    out_pixel_V_1_state <= ap_const_lv2_3;
                else 
                    out_pixel_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    do_init_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_978 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                do_init_reg_175 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                do_init_reg_175 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    in_pixel_V9_phi_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_618)) then
                if ((do_init_reg_175 = ap_const_lv1_0)) then 
                    in_pixel_V9_phi_reg_220 <= ap_phi_mux_in_pixel_V9_rewind_phi_fu_210_p6;
                elsif ((do_init_reg_175 = ap_const_lv1_1)) then 
                    in_pixel_V9_phi_reg_220 <= in_pixel_V_0_data_out;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    in_pixel_V9_phi_reg_220 <= ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_220;
                end if;
            end if; 
        end if;
    end process;

    minimumDistance4_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter16_exitcond_reg_978 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then 
                minimumDistance4_reg_234 <= distance_0_minimumDi_2_fu_939_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter16_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)))) then 
                minimumDistance4_reg_234 <= ap_const_lv32_7FFFFFFF;
            end if; 
        end if;
    end process;

    minimumDistanceIndex_1_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then 
                minimumDistanceIndex_1_reg_248 <= newSel2_reg_1117;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)))) then 
                minimumDistanceIndex_1_reg_248 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    minimumDistanceIndex_3_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_978 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                minimumDistanceIndex_3_reg_191 <= tmp_28_reg_973;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                minimumDistanceIndex_3_reg_191 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_exitcond_reg_978 <= ap_reg_pp0_iter9_exitcond_reg_978;
                ap_reg_pp0_iter10_i_1_reg_963 <= ap_reg_pp0_iter9_i_1_reg_963;
                ap_reg_pp0_iter10_i_reg_953 <= ap_reg_pp0_iter9_i_reg_953;
                ap_reg_pp0_iter10_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter9_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter10_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter9_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter11_exitcond_reg_978 <= ap_reg_pp0_iter10_exitcond_reg_978;
                ap_reg_pp0_iter11_i_1_reg_963 <= ap_reg_pp0_iter10_i_1_reg_963;
                ap_reg_pp0_iter11_i_reg_953 <= ap_reg_pp0_iter10_i_reg_953;
                ap_reg_pp0_iter11_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter10_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter11_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter10_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter12_exitcond_reg_978 <= ap_reg_pp0_iter11_exitcond_reg_978;
                ap_reg_pp0_iter12_i_1_reg_963 <= ap_reg_pp0_iter11_i_1_reg_963;
                ap_reg_pp0_iter12_i_reg_953 <= ap_reg_pp0_iter11_i_reg_953;
                ap_reg_pp0_iter12_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter11_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter12_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter11_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter13_exitcond_reg_978 <= ap_reg_pp0_iter12_exitcond_reg_978;
                ap_reg_pp0_iter13_i_1_reg_963 <= ap_reg_pp0_iter12_i_1_reg_963;
                ap_reg_pp0_iter13_i_reg_953 <= ap_reg_pp0_iter12_i_reg_953;
                ap_reg_pp0_iter13_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter12_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter13_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter12_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter14_exitcond_reg_978 <= ap_reg_pp0_iter13_exitcond_reg_978;
                ap_reg_pp0_iter14_i_1_reg_963 <= ap_reg_pp0_iter13_i_1_reg_963;
                ap_reg_pp0_iter14_i_reg_953 <= ap_reg_pp0_iter13_i_reg_953;
                ap_reg_pp0_iter14_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter13_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter14_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter13_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter15_exitcond_reg_978 <= ap_reg_pp0_iter14_exitcond_reg_978;
                ap_reg_pp0_iter15_i_1_reg_963 <= ap_reg_pp0_iter14_i_1_reg_963;
                ap_reg_pp0_iter15_i_reg_953 <= ap_reg_pp0_iter14_i_reg_953;
                ap_reg_pp0_iter15_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter14_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter15_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter14_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter16_exitcond_reg_978 <= ap_reg_pp0_iter15_exitcond_reg_978;
                ap_reg_pp0_iter16_i_1_reg_963 <= ap_reg_pp0_iter15_i_1_reg_963;
                ap_reg_pp0_iter16_i_reg_953 <= ap_reg_pp0_iter15_i_reg_953;
                ap_reg_pp0_iter16_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter15_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter15_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter17_exitcond_reg_978 <= ap_reg_pp0_iter16_exitcond_reg_978;
                ap_reg_pp0_iter17_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter16_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter18_exitcond_reg_978 <= ap_reg_pp0_iter17_exitcond_reg_978;
                ap_reg_pp0_iter18_newSel2_reg_1117 <= newSel2_reg_1117;
                ap_reg_pp0_iter2_exitcond_reg_978 <= ap_reg_pp0_iter1_exitcond_reg_978;
                ap_reg_pp0_iter2_i_1_reg_963 <= ap_reg_pp0_iter1_i_1_reg_963;
                ap_reg_pp0_iter2_i_reg_953 <= ap_reg_pp0_iter1_i_reg_953;
                ap_reg_pp0_iter2_in_pixel_V9_phi_reg_220 <= in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter2_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter1_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter2_r_V_6_reg_1014 <= r_V_6_reg_1014;
                ap_reg_pp0_iter3_exitcond_reg_978 <= ap_reg_pp0_iter2_exitcond_reg_978;
                ap_reg_pp0_iter3_i_1_reg_963 <= ap_reg_pp0_iter2_i_1_reg_963;
                ap_reg_pp0_iter3_i_reg_953 <= ap_reg_pp0_iter2_i_reg_953;
                ap_reg_pp0_iter3_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter2_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter3_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter2_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter4_exitcond_reg_978 <= ap_reg_pp0_iter3_exitcond_reg_978;
                ap_reg_pp0_iter4_i_1_reg_963 <= ap_reg_pp0_iter3_i_1_reg_963;
                ap_reg_pp0_iter4_i_reg_953 <= ap_reg_pp0_iter3_i_reg_953;
                ap_reg_pp0_iter4_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter3_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter4_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter3_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter5_exitcond_reg_978 <= ap_reg_pp0_iter4_exitcond_reg_978;
                ap_reg_pp0_iter5_i_1_reg_963 <= ap_reg_pp0_iter4_i_1_reg_963;
                ap_reg_pp0_iter5_i_reg_953 <= ap_reg_pp0_iter4_i_reg_953;
                ap_reg_pp0_iter5_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter4_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter5_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter4_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter6_exitcond_reg_978 <= ap_reg_pp0_iter5_exitcond_reg_978;
                ap_reg_pp0_iter6_i_1_reg_963 <= ap_reg_pp0_iter5_i_1_reg_963;
                ap_reg_pp0_iter6_i_reg_953 <= ap_reg_pp0_iter5_i_reg_953;
                ap_reg_pp0_iter6_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter5_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter6_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter5_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter7_exitcond_reg_978 <= ap_reg_pp0_iter6_exitcond_reg_978;
                ap_reg_pp0_iter7_i_1_reg_963 <= ap_reg_pp0_iter6_i_1_reg_963;
                ap_reg_pp0_iter7_i_reg_953 <= ap_reg_pp0_iter6_i_reg_953;
                ap_reg_pp0_iter7_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter6_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter7_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter6_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter8_exitcond_reg_978 <= ap_reg_pp0_iter7_exitcond_reg_978;
                ap_reg_pp0_iter8_i_1_reg_963 <= ap_reg_pp0_iter7_i_1_reg_963;
                ap_reg_pp0_iter8_i_reg_953 <= ap_reg_pp0_iter7_i_reg_953;
                ap_reg_pp0_iter8_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter7_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter8_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter7_minimumDistanceIndex_3_reg_191;
                ap_reg_pp0_iter9_exitcond_reg_978 <= ap_reg_pp0_iter8_exitcond_reg_978;
                ap_reg_pp0_iter9_i_1_reg_963 <= ap_reg_pp0_iter8_i_1_reg_963;
                ap_reg_pp0_iter9_i_reg_953 <= ap_reg_pp0_iter8_i_reg_953;
                ap_reg_pp0_iter9_in_pixel_V9_phi_reg_220 <= ap_reg_pp0_iter8_in_pixel_V9_phi_reg_220;
                ap_reg_pp0_iter9_minimumDistanceIndex_3_reg_191 <= ap_reg_pp0_iter8_minimumDistanceIndex_3_reg_191;
                distance_0_minimumDi_1_reg_1106 <= distance_0_minimumDi_1_fu_879_p3;
                    p_Val2_1_reg_1055(27 downto 8) <= p_Val2_1_fu_642_p2(27 downto 8);
                    p_Val2_s_reg_1040(27 downto 8) <= p_Val2_s_fu_582_p2(27 downto 8);
                    powerSummation_V_2_reg_1081(29 downto 8) <= powerSummation_V_2_fu_827_p2(29 downto 8);
                result_3_reg_1045 <= result_3_fu_591_p2;
                result_4_reg_1060 <= result_4_fu_651_p2;
                result_6_reg_1050 <= result_6_fu_600_p2;
                result_reg_1030 <= result_fu_531_p2;
                result_s_reg_1035 <= result_s_fu_540_p2;
                tmp_13_reg_1112 <= grp_fxp_sqrt_fu_272_ap_return(19 downto 8);
                tmp_1_1_reg_1101 <= tmp_1_1_fu_873_p2;
                tmp_1_reg_1096 <= tmp_1_fu_856_p2;
                tmp_27_reg_1065 <= tmp_27_fu_663_p2;
                tmp_6_reg_1086 <= grp_fxp_sqrt_fu_262_ap_return(19 downto 8);
                tmp_8_reg_1091 <= grp_fxp_sqrt_fu_267_ap_return(19 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_exitcond_reg_978 <= exitcond_reg_978;
                ap_reg_pp0_iter1_i_1_reg_963 <= i_1_reg_963;
                ap_reg_pp0_iter1_i_reg_953 <= i_reg_953;
                ap_reg_pp0_iter1_minimumDistanceIndex_3_reg_191 <= minimumDistanceIndex_3_reg_191;
                exitcond_reg_978 <= exitcond_fu_318_p2;
                i_1_reg_963 <= i_1_fu_297_p2;
                i_reg_953 <= i_fu_286_p2;
                r_V_1_reg_987 <= r_V_1_fu_396_p2;
                r_V_2_reg_992 <= r_V_2_fu_410_p2;
                r_V_3_reg_998 <= r_V_3_fu_446_p2;
                r_V_4_reg_1003 <= r_V_4_fu_456_p2;
                r_V_5_reg_1008 <= r_V_5_fu_466_p2;
                r_V_6_reg_1014 <= r_V_6_fu_502_p2;
                r_V_7_reg_1019 <= r_V_7_fu_512_p2;
                r_V_8_reg_1024 <= r_V_8_fu_522_p2;
                r_V_reg_982 <= r_V_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter1_exitcond_reg_978 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                in_pixel_V9_rewind_reg_206 <= in_pixel_V9_phi_reg_220;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_pixel_V_0_load_A = ap_const_logic_1)) then
                in_pixel_V_0_payload_A <= in_pixel_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_pixel_V_0_load_B = ap_const_logic_1)) then
                in_pixel_V_0_payload_B <= in_pixel_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1))) then
                newSel2_reg_1117 <= newSel2_fu_931_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_pixel_V_1_load_A = ap_const_logic_1)) then
                out_pixel_V_1_payload_A <= out_pixel_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_pixel_V_1_load_B = ap_const_logic_1)) then
                out_pixel_V_1_payload_B <= out_pixel_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_28_reg_973 <= tmp_28_fu_314_p1;
            end if;
        end if;
    end process;
    p_Val2_s_reg_1040(7 downto 0) <= "00000000";
    p_Val2_1_reg_1055(7 downto 0) <= "00000000";
    powerSummation_V_2_reg_1081(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_pixel_V_0_vld_out, out_pixel_V_1_ack_in, ap_enable_reg_pp0_iter1, do_init_reg_175, ap_enable_reg_pp0_iter19)
    begin
                ap_block_pp0_stage0_01001 <= (((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1)) or ((do_init_reg_175 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_pixel_V_0_vld_out, out_pixel_V_1_ack_in, ap_enable_reg_pp0_iter1, do_init_reg_175, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_block_state20_io, ap_block_state21_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and ((out_pixel_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state21_io))) or ((ap_const_boolean_1 = ap_block_state20_io) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((do_init_reg_175 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_pixel_V_0_vld_out, out_pixel_V_1_ack_in, ap_enable_reg_pp0_iter1, do_init_reg_175, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_block_state20_io, ap_block_state21_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and ((out_pixel_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state21_io))) or ((ap_const_boolean_1 = ap_block_state20_io) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((do_init_reg_175 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_io_assign_proc : process(out_pixel_V_1_ack_in, ap_predicate_op207_write_state20, ap_predicate_op208_write_state20, ap_predicate_op209_write_state20, ap_predicate_op210_write_state20, ap_predicate_op211_write_state20, ap_predicate_op212_write_state20, ap_predicate_op213_write_state20)
    begin
                ap_block_state20_io <= (((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op213_write_state20 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op212_write_state20 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op211_write_state20 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op210_write_state20 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op209_write_state20 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op208_write_state20 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op207_write_state20 = ap_const_boolean_1)));
    end process;

        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_io_assign_proc : process(out_pixel_V_1_ack_in, ap_predicate_op222_write_state21, ap_predicate_op224_write_state21, ap_predicate_op226_write_state21, ap_predicate_op228_write_state21, ap_predicate_op230_write_state21, ap_predicate_op232_write_state21, ap_predicate_op234_write_state21)
    begin
                ap_block_state21_io <= (((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op234_write_state21 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op232_write_state21 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op230_write_state21 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op228_write_state21 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op226_write_state21 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op224_write_state21 = ap_const_boolean_1)) or ((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op222_write_state21 = ap_const_boolean_1)));
    end process;


    ap_block_state21_pp0_stage0_iter19_assign_proc : process(out_pixel_V_1_ack_in)
    begin
                ap_block_state21_pp0_stage0_iter19 <= (out_pixel_V_1_ack_in = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_pixel_V_0_vld_out, do_init_reg_175)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((do_init_reg_175 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_165_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_165 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_618_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_618 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4_assign_proc : process(in_pixel_V_0_data_out, do_init_reg_175, ap_phi_mux_in_pixel_V9_rewind_phi_fu_210_p6, ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_220, ap_condition_165)
    begin
        if ((ap_const_boolean_1 = ap_condition_165)) then
            if ((do_init_reg_175 = ap_const_lv1_0)) then 
                ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4 <= ap_phi_mux_in_pixel_V9_rewind_phi_fu_210_p6;
            elsif ((do_init_reg_175 = ap_const_lv1_1)) then 
                ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4 <= in_pixel_V_0_data_out;
            else 
                ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4 <= ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_220;
            end if;
        else 
            ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4 <= ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_220;
        end if; 
    end process;


    ap_phi_mux_in_pixel_V9_rewind_phi_fu_210_p6_assign_proc : process(ap_block_pp0_stage0, in_pixel_V9_rewind_reg_206, in_pixel_V9_phi_reg_220, ap_reg_pp0_iter1_exitcond_reg_978, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_reg_pp0_iter1_exitcond_reg_978 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_in_pixel_V9_rewind_phi_fu_210_p6 <= in_pixel_V9_phi_reg_220;
        else 
            ap_phi_mux_in_pixel_V9_rewind_phi_fu_210_p6 <= in_pixel_V9_rewind_reg_206;
        end if; 
    end process;


    ap_phi_mux_minimumDistance4_phi_fu_238_p6_assign_proc : process(ap_block_pp0_stage0, minimumDistance4_reg_234, ap_reg_pp0_iter16_exitcond_reg_978, ap_enable_reg_pp0_iter17, distance_0_minimumDi_2_fu_939_p3)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_reg_pp0_iter16_exitcond_reg_978 = ap_const_lv1_1)) then 
                ap_phi_mux_minimumDistance4_phi_fu_238_p6 <= ap_const_lv32_7FFFFFFF;
            elsif ((ap_reg_pp0_iter16_exitcond_reg_978 = ap_const_lv1_0)) then 
                ap_phi_mux_minimumDistance4_phi_fu_238_p6 <= distance_0_minimumDi_2_fu_939_p3;
            else 
                ap_phi_mux_minimumDistance4_phi_fu_238_p6 <= minimumDistance4_reg_234;
            end if;
        else 
            ap_phi_mux_minimumDistance4_phi_fu_238_p6 <= minimumDistance4_reg_234;
        end if; 
    end process;


    ap_phi_mux_minimumDistanceIndex_1_phi_fu_252_p6_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117, minimumDistanceIndex_1_reg_248)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1)) then 
                ap_phi_mux_minimumDistanceIndex_1_phi_fu_252_p6 <= ap_const_lv32_0;
            elsif ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_0)) then 
                ap_phi_mux_minimumDistanceIndex_1_phi_fu_252_p6 <= newSel2_reg_1117;
            else 
                ap_phi_mux_minimumDistanceIndex_1_phi_fu_252_p6 <= minimumDistanceIndex_1_reg_248;
            end if;
        else 
            ap_phi_mux_minimumDistanceIndex_1_phi_fu_252_p6 <= minimumDistanceIndex_1_reg_248;
        end if; 
    end process;


    ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6_assign_proc : process(exitcond_reg_978, minimumDistanceIndex_3_reg_191, tmp_28_reg_973, ap_condition_165)
    begin
        if ((ap_const_boolean_1 = ap_condition_165)) then
            if ((exitcond_reg_978 = ap_const_lv1_1)) then 
                ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6 <= ap_const_lv2_0;
            elsif ((exitcond_reg_978 = ap_const_lv1_0)) then 
                ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6 <= tmp_28_reg_973;
            else 
                ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6 <= minimumDistanceIndex_3_reg_191;
            end if;
        else 
            ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6 <= minimumDistanceIndex_3_reg_191;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_220 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op207_write_state20_assign_proc : process(ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117)
    begin
                ap_predicate_op207_write_state20 <= ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (newSel2_reg_1117 = ap_const_lv32_5));
    end process;


    ap_predicate_op208_write_state20_assign_proc : process(ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117)
    begin
                ap_predicate_op208_write_state20 <= ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (newSel2_reg_1117 = ap_const_lv32_4));
    end process;


    ap_predicate_op209_write_state20_assign_proc : process(ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117)
    begin
                ap_predicate_op209_write_state20 <= ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (newSel2_reg_1117 = ap_const_lv32_3));
    end process;


    ap_predicate_op210_write_state20_assign_proc : process(ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117)
    begin
                ap_predicate_op210_write_state20 <= ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (newSel2_reg_1117 = ap_const_lv32_2));
    end process;


    ap_predicate_op211_write_state20_assign_proc : process(ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117)
    begin
                ap_predicate_op211_write_state20 <= ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (newSel2_reg_1117 = ap_const_lv32_1));
    end process;


    ap_predicate_op212_write_state20_assign_proc : process(ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117)
    begin
                ap_predicate_op212_write_state20 <= ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (newSel2_reg_1117 = ap_const_lv32_0));
    end process;


    ap_predicate_op213_write_state20_assign_proc : process(ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117)
    begin
                ap_predicate_op213_write_state20 <= (not((newSel2_reg_1117 = ap_const_lv32_5)) and not((newSel2_reg_1117 = ap_const_lv32_4)) and not((newSel2_reg_1117 = ap_const_lv32_3)) and not((newSel2_reg_1117 = ap_const_lv32_2)) and not((newSel2_reg_1117 = ap_const_lv32_1)) and not((newSel2_reg_1117 = ap_const_lv32_0)) and (ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1));
    end process;


    ap_predicate_op222_write_state21_assign_proc : process(ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
                ap_predicate_op222_write_state21 <= ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_5));
    end process;


    ap_predicate_op224_write_state21_assign_proc : process(ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
                ap_predicate_op224_write_state21 <= ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_4));
    end process;


    ap_predicate_op226_write_state21_assign_proc : process(ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
                ap_predicate_op226_write_state21 <= ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_3));
    end process;


    ap_predicate_op228_write_state21_assign_proc : process(ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
                ap_predicate_op228_write_state21 <= ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_2));
    end process;


    ap_predicate_op230_write_state21_assign_proc : process(ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
                ap_predicate_op230_write_state21 <= ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_1));
    end process;


    ap_predicate_op232_write_state21_assign_proc : process(ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
                ap_predicate_op232_write_state21 <= ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_0));
    end process;


    ap_predicate_op234_write_state21_assign_proc : process(ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
                ap_predicate_op234_write_state21 <= (not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_5)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_4)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_3)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_2)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_1)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_0)) and (ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1));
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    colorBlue_V_1_fu_428_p4 <= p_color_array_stream_s_q1(15 downto 8);
    colorBlue_V_2_fu_484_p4 <= p_color_array_stream_s_q2(15 downto 8);
    colorBlue_V_fu_360_p4 <= p_color_array_stream_s_q0(15 downto 8);
    colorGreen_V_1_fu_424_p1 <= p_color_array_stream_s_q1(8 - 1 downto 0);
    colorGreen_V_2_fu_480_p1 <= p_color_array_stream_s_q2(8 - 1 downto 0);
    colorGreen_V_fu_356_p1 <= p_color_array_stream_s_q0(8 - 1 downto 0);
    distance_0_minimumDi_1_fu_879_p3 <= 
        tmp_5_i1_fu_870_p1 when (tmp_1_1_fu_873_p2(0) = '1') else 
        distance_0_minimumDi_fu_862_p3;
    distance_0_minimumDi_2_fu_939_p3 <= 
        tmp_5_i2_fu_901_p1 when (tmp_1_2_fu_904_p2(0) = '1') else 
        distance_0_minimumDi_1_reg_1106;
    distance_0_minimumDi_fu_862_p3 <= 
        tmp_5_i_fu_853_p1 when (tmp_1_fu_856_p2(0) = '1') else 
        ap_phi_mux_minimumDistance4_phi_fu_238_p6;
    exitcond_fu_318_p2 <= "1" when (i_2_fu_308_p2 = ap_const_lv3_6) else "0";

    grp_fxp_sqrt_fu_262_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fxp_sqrt_fu_262_ap_ce <= ap_const_logic_1;
        else 
            grp_fxp_sqrt_fu_262_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fxp_sqrt_fu_262_in_val_V_read <= std_logic_vector(signed(p_Val2_cast_fu_676_p1) + signed(tmp5_cast_fu_700_p1));

    grp_fxp_sqrt_fu_267_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fxp_sqrt_fu_267_ap_ce <= ap_const_logic_1;
        else 
            grp_fxp_sqrt_fu_267_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fxp_sqrt_fu_267_in_val_V_read <= std_logic_vector(signed(p_Val2_3_cast_fu_718_p1) + signed(tmp9_cast_fu_742_p1));

    grp_fxp_sqrt_fu_272_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fxp_sqrt_fu_272_ap_ce <= ap_const_logic_1;
        else 
            grp_fxp_sqrt_fu_272_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_297_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(minimumDistanceIndex_fu_277_p1));
    i_2_fu_308_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(minimumDistanceIndex_fu_277_p1));
    i_fu_286_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(minimumDistanceIndex_fu_277_p1));
    in_pixel_V_0_ack_in <= in_pixel_V_0_state(1);

    in_pixel_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, do_init_reg_175, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (do_init_reg_175 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_pixel_V_0_ack_out <= ap_const_logic_1;
        else 
            in_pixel_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_pixel_V_0_data_out_assign_proc : process(in_pixel_V_0_payload_A, in_pixel_V_0_payload_B, in_pixel_V_0_sel)
    begin
        if ((in_pixel_V_0_sel = ap_const_logic_1)) then 
            in_pixel_V_0_data_out <= in_pixel_V_0_payload_B;
        else 
            in_pixel_V_0_data_out <= in_pixel_V_0_payload_A;
        end if; 
    end process;

    in_pixel_V_0_load_A <= (in_pixel_V_0_state_cmp_full and not(in_pixel_V_0_sel_wr));
    in_pixel_V_0_load_B <= (in_pixel_V_0_state_cmp_full and in_pixel_V_0_sel_wr);
    in_pixel_V_0_sel <= in_pixel_V_0_sel_rd;
    in_pixel_V_0_state_cmp_full <= '0' when (in_pixel_V_0_state = ap_const_lv2_1) else '1';
    in_pixel_V_0_vld_in <= in_pixel_V_TVALID;
    in_pixel_V_0_vld_out <= in_pixel_V_0_state(0);

    in_pixel_V_TDATA_blk_n_assign_proc : process(in_pixel_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, do_init_reg_175)
    begin
        if (((do_init_reg_175 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            in_pixel_V_TDATA_blk_n <= in_pixel_V_0_state(0);
        else 
            in_pixel_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_pixel_V_TREADY <= in_pixel_V_0_state(1);
    lhs_V_1_fu_388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixelGreen_V_fu_334_p1),9));
    lhs_V_2_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixelBlue_V_fu_338_p4),9));
    lhs_V_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixelRed_V_fu_324_p4),9));
    minimumDistanceIndex_2_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_191),32));
    minimumDistanceIndex_fu_277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6),3));
    newSel1_fu_924_p3 <= 
        minimumDistanceIndex_2_fu_897_p1 when (tmp_1_reg_1096(0) = '1') else 
        ap_phi_mux_minimumDistanceIndex_1_phi_fu_252_p6;
    newSel2_fu_931_p3 <= 
        newSel_cast_fu_915_p1 when (or_cond_fu_919_p2(0) = '1') else 
        newSel1_fu_924_p3;
    newSel_cast_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel_fu_909_p3),32));
    newSel_fu_909_p3 <= 
        ap_reg_pp0_iter16_i_1_reg_963 when (tmp_1_2_fu_904_p2(0) = '1') else 
        ap_reg_pp0_iter16_i_reg_953;
    or_cond_fu_919_p2 <= (tmp_1_2_fu_904_p2 or tmp_1_1_reg_1101);
    out_pixel_V_1_ack_in <= out_pixel_V_1_state(1);
    out_pixel_V_1_ack_out <= out_pixel_V_TREADY;

    out_pixel_V_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter18, ap_predicate_op207_write_state20, ap_predicate_op208_write_state20, ap_predicate_op209_write_state20, ap_predicate_op210_write_state20, ap_predicate_op211_write_state20, ap_predicate_op212_write_state20, ap_predicate_op213_write_state20, ap_reg_pp0_iter17_in_pixel_V9_phi_reg_220, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1))) then
            if ((ap_predicate_op213_write_state20 = ap_const_boolean_1)) then 
                out_pixel_V_1_data_in <= ap_reg_pp0_iter17_in_pixel_V9_phi_reg_220;
            elsif ((ap_predicate_op212_write_state20 = ap_const_boolean_1)) then 
                out_pixel_V_1_data_in <= ap_const_lv24_FF0000;
            elsif ((ap_predicate_op211_write_state20 = ap_const_boolean_1)) then 
                out_pixel_V_1_data_in <= ap_const_lv24_FF;
            elsif ((ap_predicate_op210_write_state20 = ap_const_boolean_1)) then 
                out_pixel_V_1_data_in <= ap_const_lv24_FF00;
            elsif ((ap_predicate_op209_write_state20 = ap_const_boolean_1)) then 
                out_pixel_V_1_data_in <= ap_const_lv24_FFFF00;
            elsif ((ap_predicate_op208_write_state20 = ap_const_boolean_1)) then 
                out_pixel_V_1_data_in <= ap_const_lv24_FF00FF;
            elsif ((ap_predicate_op207_write_state20 = ap_const_boolean_1)) then 
                out_pixel_V_1_data_in <= ap_const_lv24_FFFF;
            else 
                out_pixel_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            out_pixel_V_1_data_in <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_pixel_V_1_data_out_assign_proc : process(out_pixel_V_1_payload_A, out_pixel_V_1_payload_B, out_pixel_V_1_sel)
    begin
        if ((out_pixel_V_1_sel = ap_const_logic_1)) then 
            out_pixel_V_1_data_out <= out_pixel_V_1_payload_B;
        else 
            out_pixel_V_1_data_out <= out_pixel_V_1_payload_A;
        end if; 
    end process;

    out_pixel_V_1_load_A <= (out_pixel_V_1_state_cmp_full and not(out_pixel_V_1_sel_wr));
    out_pixel_V_1_load_B <= (out_pixel_V_1_state_cmp_full and out_pixel_V_1_sel_wr);
    out_pixel_V_1_sel <= out_pixel_V_1_sel_rd;
    out_pixel_V_1_state_cmp_full <= '0' when (out_pixel_V_1_state = ap_const_lv2_1) else '1';

    out_pixel_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter18, ap_predicate_op207_write_state20, ap_predicate_op208_write_state20, ap_predicate_op209_write_state20, ap_predicate_op210_write_state20, ap_predicate_op211_write_state20, ap_predicate_op212_write_state20, ap_predicate_op213_write_state20, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op213_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op212_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op211_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op210_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op209_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op208_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op207_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)))) then 
            out_pixel_V_1_vld_in <= ap_const_logic_1;
        else 
            out_pixel_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_pixel_V_1_vld_out <= out_pixel_V_1_state(0);
    out_pixel_V_TDATA <= out_pixel_V_1_data_out;

    out_pixel_V_TDATA_blk_n_assign_proc : process(out_pixel_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter18, ap_reg_pp0_iter17_exitcond_reg_978, newSel2_reg_1117, ap_enable_reg_pp0_iter19, ap_reg_pp0_iter18_exitcond_reg_978, ap_reg_pp0_iter18_newSel2_reg_1117)
    begin
        if (((not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_5)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_4)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_3)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_2)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_1)) and not((ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_0)) and (ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_5) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_4) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_3) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_2) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_1)) or ((ap_reg_pp0_iter18_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_reg_pp0_iter18_newSel2_reg_1117 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or (not((newSel2_reg_1117 = ap_const_lv32_5)) and not((newSel2_reg_1117 = ap_const_lv32_4)) and not((newSel2_reg_1117 = ap_const_lv32_3)) and not((newSel2_reg_1117 = ap_const_lv32_2)) and not((newSel2_reg_1117 = ap_const_lv32_1)) and not((newSel2_reg_1117 = ap_const_lv32_0)) and (ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (newSel2_reg_1117 = ap_const_lv32_5) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (newSel2_reg_1117 = ap_const_lv32_4) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (newSel2_reg_1117 = ap_const_lv32_3) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (newSel2_reg_1117 = ap_const_lv32_2) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (newSel2_reg_1117 = ap_const_lv32_1)) or ((ap_reg_pp0_iter17_exitcond_reg_978 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (newSel2_reg_1117 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_pixel_V_TDATA_blk_n <= out_pixel_V_1_state(1);
        else 
            out_pixel_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_pixel_V_TVALID <= out_pixel_V_1_state(0);
        p_Val2_10_cast_cas_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_fu_807_p2),29));

        p_Val2_1_cast_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_680_p3),29));

    p_Val2_1_fu_642_p2 <= std_logic_vector(signed(p_shl_i1_cast_fu_626_p1) - signed(p_shl3_i1_cast_fu_638_p1));
        p_Val2_2_cast_cast_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_reg_1040),29));

    p_Val2_2_fu_807_p2 <= std_logic_vector(signed(p_shl_i2_cast_fu_792_p1) - signed(p_shl3_i2_cast_fu_803_p1));
        p_Val2_3_cast_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_711_p3),30));

        p_Val2_4_cast_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_722_p3),29));

        p_Val2_6_cast5_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_762_p3),30));

        p_Val2_6_cast_cast_fu_733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_1055),29));

        p_Val2_7_cast_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_774_p3),29));

        p_Val2_cast_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_669_p3),30));

    p_Val2_s_fu_582_p2 <= std_logic_vector(signed(p_shl_i_cast_fu_566_p1) - signed(p_shl3_i_cast_fu_578_p1));
        p_cast1_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_reg_982),18));

        p_cast2_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_1_reg_987),18));

        p_cast3_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_3_reg_998),18));

        p_cast4_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_4_reg_1003),18));

        p_cast5_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter2_r_V_6_reg_1014),18));

        p_cast_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_7_reg_1019),18));

    p_color_array_stream_s_address0 <= tmp1_fu_281_p1(3 - 1 downto 0);
    p_color_array_stream_s_address1 <= tmp_s_fu_292_p1(3 - 1 downto 0);
    p_color_array_stream_s_address2 <= tmp_2_fu_303_p1(3 - 1 downto 0);

    p_color_array_stream_s_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_color_array_stream_s_ce0 <= ap_const_logic_1;
        else 
            p_color_array_stream_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_color_array_stream_s_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_color_array_stream_s_ce1 <= ap_const_logic_1;
        else 
            p_color_array_stream_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_color_array_stream_s_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_color_array_stream_s_ce2 <= ap_const_logic_1;
        else 
            p_color_array_stream_s_ce2 <= ap_const_logic_0;
        end if; 
    end process;

        p_shl3_i1_cast_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_i1_fu_630_p3),28));

    p_shl3_i1_fu_630_p3 <= (tmp_22_fu_612_p2 & ap_const_lv8_0);
        p_shl3_i2_cast_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_i2_fu_796_p3),28));

    p_shl3_i2_fu_796_p3 <= (tmp_27_reg_1065 & ap_const_lv8_0);
        p_shl3_i_cast_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl3_i_fu_570_p3),28));

    p_shl3_i_fu_570_p3 <= (tmp_15_fu_552_p2 & ap_const_lv8_0);
        p_shl_i1_cast_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_i1_fu_618_p3),28));

    p_shl_i1_fu_618_p3 <= (tmp_22_fu_612_p2 & ap_const_lv10_0);
        p_shl_i2_cast_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_i2_fu_785_p3),28));

    p_shl_i2_fu_785_p3 <= (tmp_27_reg_1065 & ap_const_lv10_0);
        p_shl_i_cast_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_i_fu_558_p3),28));

    p_shl_i_fu_558_p3 <= (tmp_15_fu_552_p2 & ap_const_lv10_0);
    pixelBlue_V_fu_338_p4 <= ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4(15 downto 8);
    pixelGreen_V_fu_334_p1 <= ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4(8 - 1 downto 0);
    pixelRed_V_fu_324_p4 <= ap_phi_mux_in_pixel_V9_phi_phi_fu_225_p4(23 downto 16);
    powerSummation_V_2_fu_827_p2 <= std_logic_vector(signed(p_Val2_6_cast5_fu_770_p1) + signed(tmp13_cast_fu_823_p1));
    r_V_1_fu_396_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_388_p1) - unsigned(rhs_V_1_fu_392_p1));
    r_V_2_fu_410_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_402_p1) - unsigned(rhs_V_2_fu_406_p1));
    r_V_3_fu_446_p2 <= std_logic_vector(unsigned(lhs_V_fu_370_p1) - unsigned(rhs_V_3_cast_fu_438_p3));
    r_V_4_fu_456_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_388_p1) - unsigned(rhs_V_4_fu_452_p1));
    r_V_5_fu_466_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_402_p1) - unsigned(rhs_V_5_fu_462_p1));
    r_V_6_fu_502_p2 <= std_logic_vector(unsigned(lhs_V_fu_370_p1) - unsigned(rhs_V_6_cast_fu_494_p3));
    r_V_7_fu_512_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_388_p1) - unsigned(rhs_V_7_fu_508_p1));
    r_V_8_fu_522_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_402_p1) - unsigned(rhs_V_8_fu_518_p1));
    r_V_fu_382_p2 <= std_logic_vector(unsigned(lhs_V_fu_370_p1) - unsigned(rhs_V_cast_fu_374_p3));
    result_3_fu_591_p0 <= p_cast3_fu_588_p1(9 - 1 downto 0);
    result_3_fu_591_p1 <= p_cast3_fu_588_p1(9 - 1 downto 0);
    result_3_fu_591_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_3_fu_591_p0) * signed(result_3_fu_591_p1))), 18));
    result_4_fu_651_p0 <= p_cast_fu_648_p1(9 - 1 downto 0);
    result_4_fu_651_p1 <= p_cast_fu_648_p1(9 - 1 downto 0);
    result_4_fu_651_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_4_fu_651_p0) * signed(result_4_fu_651_p1))), 18));
    result_6_fu_600_p0 <= p_cast4_fu_597_p1(9 - 1 downto 0);
    result_6_fu_600_p1 <= p_cast4_fu_597_p1(9 - 1 downto 0);
    result_6_fu_600_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_6_fu_600_p0) * signed(result_6_fu_600_p1))), 18));
    result_9_fu_756_p0 <= p_cast5_fu_753_p1(9 - 1 downto 0);
    result_9_fu_756_p1 <= p_cast5_fu_753_p1(9 - 1 downto 0);
    result_9_fu_756_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_9_fu_756_p0) * signed(result_9_fu_756_p1))), 18));
    result_fu_531_p0 <= p_cast1_fu_528_p1(9 - 1 downto 0);
    result_fu_531_p1 <= p_cast1_fu_528_p1(9 - 1 downto 0);
    result_fu_531_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_fu_531_p0) * signed(result_fu_531_p1))), 18));
    result_s_fu_540_p0 <= p_cast2_fu_537_p1(9 - 1 downto 0);
    result_s_fu_540_p1 <= p_cast2_fu_537_p1(9 - 1 downto 0);
    result_s_fu_540_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_s_fu_540_p0) * signed(result_s_fu_540_p1))), 18));
    rhs_V_1_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorGreen_V_fu_356_p1),9));
    rhs_V_2_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorBlue_V_fu_360_p4),9));
    rhs_V_3_cast_fu_438_p3 <= 
        ap_const_lv9_FF when (rhs_V_3_fu_416_p3(0) = '1') else 
        ap_const_lv9_0;
    rhs_V_3_fu_416_p3 <= p_color_array_stream_s_q1(16 downto 16);
    rhs_V_4_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorGreen_V_1_fu_424_p1),9));
    rhs_V_5_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorBlue_V_1_fu_428_p4),9));
    rhs_V_6_cast_fu_494_p3 <= 
        ap_const_lv9_FF when (rhs_V_6_fu_472_p3(0) = '1') else 
        ap_const_lv9_0;
    rhs_V_6_fu_472_p3 <= p_color_array_stream_s_q2(16 downto 16);
    rhs_V_7_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorGreen_V_2_fu_480_p1),9));
    rhs_V_8_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorBlue_V_2_fu_484_p4),9));
    rhs_V_cast_fu_374_p3 <= 
        ap_const_lv9_FF when (rhs_V_fu_348_p3(0) = '1') else 
        ap_const_lv9_0;
    rhs_V_fu_348_p3 <= p_color_array_stream_s_q0(16 downto 16);
        tmp13_cast_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp13_fu_817_p2),30));

    tmp13_fu_817_p2 <= std_logic_vector(signed(p_Val2_10_cast_cas_fu_813_p1) + signed(p_Val2_7_cast_fu_781_p1));
    tmp1_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_minimumDistanceIndex_3_phi_fu_195_p6),64));
        tmp5_cast_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_fu_694_p2),30));

    tmp5_fu_694_p2 <= std_logic_vector(signed(p_Val2_2_cast_cast_fu_691_p1) + signed(p_Val2_1_cast_fu_687_p1));
        tmp9_cast_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp9_fu_736_p2),30));

    tmp9_fu_736_p2 <= std_logic_vector(signed(p_Val2_6_cast_cast_fu_733_p1) + signed(p_Val2_4_cast_fu_729_p1));
    tmp_10_fu_762_p3 <= (result_9_fu_756_p2 & ap_const_lv9_0);
    tmp_11_fu_774_p3 <= (result_4_reg_1060 & ap_const_lv10_0);
    tmp_15_fu_552_p0 <= r_V_2_reg_992;
    tmp_15_fu_552_p1 <= r_V_2_reg_992;
    tmp_15_fu_552_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_15_fu_552_p0) * signed(tmp_15_fu_552_p1))), 17));
    tmp_1_1_fu_873_p2 <= "1" when (signed(tmp_5_i1_fu_870_p1) < signed(distance_0_minimumDi_fu_862_p3)) else "0";
    tmp_1_2_fu_904_p2 <= "1" when (signed(tmp_5_i2_fu_901_p1) < signed(distance_0_minimumDi_1_reg_1106)) else "0";
    tmp_1_fu_856_p2 <= "1" when (signed(tmp_5_i_fu_853_p1) < signed(ap_phi_mux_minimumDistance4_phi_fu_238_p6)) else "0";
    tmp_22_fu_612_p0 <= r_V_5_reg_1008;
    tmp_22_fu_612_p1 <= r_V_5_reg_1008;
    tmp_22_fu_612_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_22_fu_612_p0) * signed(tmp_22_fu_612_p1))), 17));
    tmp_27_fu_663_p0 <= r_V_8_reg_1024;
    tmp_27_fu_663_p1 <= r_V_8_reg_1024;
    tmp_27_fu_663_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_27_fu_663_p0) * signed(tmp_27_fu_663_p1))), 17));
    tmp_28_fu_314_p1 <= i_2_fu_308_p2(2 - 1 downto 0);
    tmp_2_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_297_p2),64));
    tmp_3_fu_669_p3 <= (result_reg_1030 & ap_const_lv9_0);
    tmp_4_fu_711_p3 <= (result_3_reg_1045 & ap_const_lv9_0);
    tmp_5_fu_680_p3 <= (result_s_reg_1035 & ap_const_lv10_0);
    tmp_5_i1_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_1091),32));
    tmp_5_i2_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_1112),32));
    tmp_5_i_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_1086),32));
    tmp_7_fu_722_p3 <= (result_6_reg_1050 & ap_const_lv10_0);
    tmp_s_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_286_p2),64));
end behav;
