-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getPixelClassification_Stream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_pixel_V_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    in_pixel_V_TVALID : IN STD_LOGIC;
    in_pixel_V_TREADY : OUT STD_LOGIC;
    out_pixel_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    out_pixel_V_TVALID : OUT STD_LOGIC;
    out_pixel_V_TREADY : IN STD_LOGIC;
    in_switch_V : IN STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of getPixelClassification_Stream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "getPixelClassification_Stream,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.679625,HLS_SYN_LAT=23,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=9,HLS_SYN_FF=2990,HLS_SYN_LUT=14201}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv15_1D : STD_LOGIC_VECTOR (14 downto 0) := "000000000011101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv42_19999A : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000110011001100110011010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv45_666667 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000011001100110011001100111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv41_0 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv45_0 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv12_13B : STD_LOGIC_VECTOR (11 downto 0) := "000100111011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal in_pixel_V_0_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal in_pixel_V_0_vld_in : STD_LOGIC;
    signal in_pixel_V_0_vld_out : STD_LOGIC;
    signal in_pixel_V_0_ack_in : STD_LOGIC;
    signal in_pixel_V_0_ack_out : STD_LOGIC;
    signal in_pixel_V_0_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal in_pixel_V_0_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal in_pixel_V_0_sel_rd : STD_LOGIC := '0';
    signal in_pixel_V_0_sel_wr : STD_LOGIC := '0';
    signal in_pixel_V_0_sel : STD_LOGIC;
    signal in_pixel_V_0_load_A : STD_LOGIC;
    signal in_pixel_V_0_load_B : STD_LOGIC;
    signal in_pixel_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal in_pixel_V_0_state_cmp_full : STD_LOGIC;
    signal out_pixel_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal out_pixel_V_1_vld_in : STD_LOGIC;
    signal out_pixel_V_1_vld_out : STD_LOGIC;
    signal out_pixel_V_1_ack_in : STD_LOGIC;
    signal out_pixel_V_1_ack_out : STD_LOGIC;
    signal out_pixel_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal out_pixel_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal out_pixel_V_1_sel_rd : STD_LOGIC := '0';
    signal out_pixel_V_1_sel_wr : STD_LOGIC := '0';
    signal out_pixel_V_1_sel : STD_LOGIC;
    signal out_pixel_V_1_load_A : STD_LOGIC;
    signal out_pixel_V_1_load_B : STD_LOGIC;
    signal out_pixel_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal out_pixel_V_1_state_cmp_full : STD_LOGIC;
    signal p_color_array_stream_s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_color_array_stream_s_ce0 : STD_LOGIC;
    signal p_color_array_stream_s_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_color_array_stream_s_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_color_array_stream_s_ce1 : STD_LOGIC;
    signal p_color_array_stream_s_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_color_array_stream_s_address2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_color_array_stream_s_ce2 : STD_LOGIC;
    signal p_color_array_stream_s_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_color_array_stream_s_address3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_color_array_stream_s_ce3 : STD_LOGIC;
    signal p_color_array_stream_s_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal in_pixel_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal do_init_reg_220 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_pixel_V_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter20_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter21_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_io : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter1_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter2_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter3_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter4_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter5_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter6_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter7_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter8_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter9_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter10_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter11_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter12_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter13_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter14_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter15_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter16_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter17_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter19_minimumDistanceIndex_9_reg_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_pixel_V51_rewind_reg_251 : STD_LOGIC_VECTOR (23 downto 0);
    signal in_switch_V52_rewind_reg_265 : STD_LOGIC_VECTOR (3 downto 0);
    signal in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter2_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter3_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter4_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter5_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter6_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter7_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter8_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter9_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter10_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter11_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter12_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter13_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter14_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter15_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter16_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter17_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter18_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter19_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_pp0_iter20_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter2_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter3_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter4_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter5_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter6_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter7_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter8_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter9_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter10_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter11_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter12_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter13_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter14_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter15_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter16_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter17_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter18_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter19_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter20_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal minimumDistance_reg_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_reg_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_switch_V_read_reg_1780 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_do_init_phi_fu_224_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_356_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter1_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter2_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter3_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter4_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter5_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter6_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter7_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter8_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter9_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter10_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter11_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter12_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter13_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter14_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter15_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter16_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter17_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter18_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter19_i_reg_1790 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_fu_367_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter1_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter2_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter3_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter4_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter5_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter6_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter7_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter8_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter9_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter10_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter11_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter12_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter13_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter14_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter15_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter16_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter17_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter18_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_pp0_iter19_i_1_reg_1800 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_91_fu_384_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_91_reg_1810 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter10_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter11_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter12_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter13_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter14_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter15_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter16_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter17_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter18_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter19_exitcond_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_452_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_reg_1819 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_reg_1819 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter3_r_V_reg_1819 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_466_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_reg_1824 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_1_reg_1824 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_2_fu_480_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_2_reg_1829 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_2_reg_1829 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_fu_516_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_reg_1835 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_3_reg_1835 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter3_r_V_3_reg_1835 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_fu_526_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_4_reg_1840 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_4_reg_1840 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_5_fu_536_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_5_reg_1845 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_5_reg_1845 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_6_fu_572_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_6_reg_1851 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_6_reg_1851 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter3_r_V_6_reg_1851 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter4_r_V_6_reg_1851 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_fu_582_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_reg_1856 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_7_reg_1856 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_fu_592_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_reg_1861 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_pp0_iter2_r_V_8_reg_1861 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp14_fu_601_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp14_reg_1867 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp16_fu_610_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp16_reg_1872 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp18_fu_619_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp18_reg_1877 : STD_LOGIC_VECTOR (14 downto 0);
    signal result_s_fu_628_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal result_s_reg_1882 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_reg_1887 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_34_reg_1887 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i1_tr_fu_1759_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_9_i1_tr_reg_1893 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_39_reg_1898 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_39_reg_1898 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_3_fu_658_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal result_3_reg_1904 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_71_reg_1909 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_71_reg_1909 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_tr_fu_1766_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_9_i_tr_reg_1915 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_74_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_74_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_6_fu_688_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal result_6_reg_1926 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_85_reg_1931 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_85_reg_1931 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i2_tr_fu_1773_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_9_i2_tr_reg_1937 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_88_reg_1942 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_88_reg_1942 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i1_fu_744_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_2_i1_reg_1948 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_reg_pp0_iter5_tmp_2_i1_reg_1948 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_27_fu_767_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_27_reg_1955 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_37_reg_1960 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul3_fu_784_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul3_reg_1965 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_53_reg_1970 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_2_i_fu_829_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_2_i_reg_1975 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_reg_pp0_iter5_tmp_2_i_reg_1975 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_70_fu_852_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_70_reg_1982 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_73_reg_1987 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul5_fu_869_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul5_reg_1992 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_76_reg_1997 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_84_fu_902_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_84_reg_2002 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_87_reg_2007 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_fu_919_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal mul_reg_2012 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_90_reg_2017 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_21_reg_2022 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp15_fu_1058_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp15_reg_2027 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_67_reg_2032 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp17_fu_1187_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp17_reg_2037 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_i2_fu_1222_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_2_i2_reg_2042 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp19_fu_1336_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp19_reg_2049 : STD_LOGIC_VECTOR (30 downto 0);
    signal powerSummation_V_2_fu_1528_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal powerSummation_V_2_reg_2064 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_2069 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_33_reg_2075 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_1557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_2081 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_2086 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_1_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_1_reg_2091 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_1_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_1_reg_2096 : STD_LOGIC_VECTOR (0 downto 0);
    signal minimumDistance_2_1_fu_1606_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistance_2_1_reg_2101 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_2108 : STD_LOGIC_VECTOR (11 downto 0);
    signal minimumDistanceIndex_8_fu_1690_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_8_reg_2114 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal minimumDistance_2_2_fu_1698_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge1_fu_1748_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fxp_sqrt_fu_332_in_val_V_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fxp_sqrt_fu_332_ap_return : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fxp_sqrt_fu_332_ap_ce : STD_LOGIC;
    signal grp_fxp_sqrt_fu_337_in_val_V_read : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fxp_sqrt_fu_337_ap_return : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fxp_sqrt_fu_337_ap_ce : STD_LOGIC;
    signal grp_fxp_sqrt_fu_342_ap_return : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fxp_sqrt_fu_342_ap_ce : STD_LOGIC;
    signal ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_in_pixel_V51_rewind_phi_fu_255_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_in_switch_V52_rewind_phi_fu_269_p6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_in_pixel_V51_phi_reg_279 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_in_switch_V52_phi_reg_292 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_minimumDistance_phi_fu_308_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_1_fu_362_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_2_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_1705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal minimumDistanceIndex_3_fu_347_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_2_fu_378_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal pixelRed_V_fu_394_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_fu_418_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_1_fu_440_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_cast_fu_444_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pixelGreen_V_fu_404_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorGreen_V_fu_426_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_2_fu_458_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_1_fu_462_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pixelBlue_V_fu_408_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal colorBlue_V_fu_430_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_3_fu_472_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_2_fu_476_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_4_fu_486_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_4_cast_fu_508_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorGreen_V_1_fu_494_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_5_fu_522_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorBlue_V_1_fu_498_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_6_fu_532_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_7_fu_542_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_V_7_cast_fu_564_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorGreen_V_2_fu_550_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_8_fu_578_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal colorBlue_V_2_fu_554_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_9_fu_588_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp14_fu_601_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp16_fu_610_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp18_fu_619_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_s_fu_628_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_fu_625_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal result_s_fu_628_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_3_fu_658_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_26_fu_655_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal result_3_fu_658_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_6_fu_688_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_42_fu_685_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal result_6_fu_688_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_fu_718_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal number_assign_cast_fu_715_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_fu_718_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_fu_718_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_728_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl_i1_fu_732_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_i1_cast_fu_740_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_cast_fu_724_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_i1_fu_750_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul1_fu_761_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul1_fu_761_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul3_fu_784_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal result_1_fu_803_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal number_assign_3_cast_fu_800_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_1_fu_803_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_1_fu_803_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_65_fu_813_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl_i_fu_817_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_i_cast_fu_825_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_3_cast_fu_809_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_i_fu_835_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul4_fu_846_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul4_fu_846_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul5_fu_869_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_i2_fu_885_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul2_fu_896_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul2_fu_896_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal mul_fu_919_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_neg_i1_fu_935_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal neg_mul1_fu_950_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_35_fu_955_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_fu_965_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_11_fu_969_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_12_fu_972_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal neg_ti1_fu_979_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_13_fu_985_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_14_fu_992_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal neg_mul2_fu_1004_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_41_fu_1009_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_16_fu_1019_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_17_fu_1023_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_20_fu_1026_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal neg_ti2_fu_1033_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_18_fu_1039_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_22_fu_1046_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_1_cast_fu_1000_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_2_cast_fu_1054_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_i_fu_1064_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal neg_mul4_fu_1079_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_72_fu_1084_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_28_fu_1094_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_29_fu_1098_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_36_fu_1101_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal neg_ti3_fu_1108_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_30_fu_1114_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_38_fu_1121_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal neg_mul5_fu_1133_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_75_fu_1138_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_40_fu_1148_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_43_fu_1152_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_48_fu_1155_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal neg_ti4_fu_1162_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_32_fu_1168_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_49_fu_1175_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_4_cast_fu_1129_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_5_cast_fu_1183_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal result_2_fu_1196_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal number_assign_6_cast_fu_1193_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal result_2_fu_1196_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal result_2_fu_1196_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_79_fu_1206_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl_i2_fu_1210_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_i2_cast_fu_1218_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal result_6_cast_fu_1202_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal neg_mul3_fu_1228_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_86_fu_1233_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_51_fu_1243_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_52_fu_1247_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_54_fu_1250_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal neg_ti8_fu_1257_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_44_fu_1263_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_55_fu_1270_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal neg_mul_fu_1282_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_89_fu_1287_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_56_fu_1297_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_57_fu_1301_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_58_fu_1304_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal neg_ti_fu_1311_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_46_fu_1317_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_59_fu_1324_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_6_cast_fu_1278_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_7_cast_fu_1332_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_i1_cast_fu_1349_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_23_fu_1358_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_10_fu_1342_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i1_fu_1352_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_12_i1_cast_fu_1367_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_fu_1371_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_25_fu_1379_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp15_cast_fu_1391_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_1387_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_cast_fu_1408_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_68_fu_1417_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_66_fu_1401_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i_fu_1411_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_12_i_cast_fu_1426_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_24_fu_1430_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_69_fu_1438_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp17_cast_fu_1450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_fu_1446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_i2_fu_1467_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_81_fu_1472_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_10_i2_cast_fu_1482_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_82_fu_1492_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_80_fu_1460_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i2_fu_1486_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_12_i2_cast_fu_1501_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_50_fu_1505_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_83_fu_1513_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp19_cast_fu_1525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_fu_1521_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i1_fu_1554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistance_1_fu_1568_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i_fu_1584_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistance_2_fu_1576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistance_1_1_fu_1598_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_4_fu_1624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_1_fu_1628_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_cast_fu_1642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_2_fu_1635_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_5_fu_1645_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i2_fu_1662_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_2_fu_1670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_cast_fu_1659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistanceIndex_6_fu_1652_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_fu_1665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal minimumDistanceIndex_7_fu_1675_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal minimumDistance_1_2_fu_1683_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_fu_1720_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rhs_V_3_fu_1715_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_1724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_color_array_stream_8_fu_1730_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sel_tmp1_fu_1740_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_170 : BOOLEAN;
    signal ap_condition_650 : BOOLEAN;

    component fxp_sqrt IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        in_val_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (19 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component getPixelClassificcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component getPixelClassificbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    p_color_array_stream_s_U : component getPixelClassificbkb
    generic map (
        DataWidth => 17,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => p_color_array_stream_s_address0,
        ce0 => p_color_array_stream_s_ce0,
        q0 => p_color_array_stream_s_q0,
        address1 => p_color_array_stream_s_address1,
        ce1 => p_color_array_stream_s_ce1,
        q1 => p_color_array_stream_s_q1,
        address2 => p_color_array_stream_s_address2,
        ce2 => p_color_array_stream_s_ce2,
        q2 => p_color_array_stream_s_q2,
        address3 => p_color_array_stream_s_address3,
        ce3 => p_color_array_stream_s_ce3,
        q3 => p_color_array_stream_s_q3);

    grp_fxp_sqrt_fu_332 : component fxp_sqrt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        in_val_V_read => grp_fxp_sqrt_fu_332_in_val_V_read,
        ap_return => grp_fxp_sqrt_fu_332_ap_return,
        ap_ce => grp_fxp_sqrt_fu_332_ap_ce);

    grp_fxp_sqrt_fu_337 : component fxp_sqrt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        in_val_V_read => grp_fxp_sqrt_fu_337_in_val_V_read,
        ap_return => grp_fxp_sqrt_fu_337_ap_return,
        ap_ce => grp_fxp_sqrt_fu_337_ap_ce);

    grp_fxp_sqrt_fu_342 : component fxp_sqrt
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        in_val_V_read => powerSummation_V_2_reg_2064,
        ap_return => grp_fxp_sqrt_fu_342_ap_return,
        ap_ce => grp_fxp_sqrt_fu_342_ap_ce);

    getPixelClassificcud_U2 : component getPixelClassificcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 9,
        dout_WIDTH => 22)
    port map (
        din0 => tmp14_reg_1867,
        din1 => ap_reg_pp0_iter2_r_V_2_reg_1829,
        dout => tmp_9_i1_tr_fu_1759_p2);

    getPixelClassificcud_U3 : component getPixelClassificcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 9,
        dout_WIDTH => 22)
    port map (
        din0 => tmp16_reg_1872,
        din1 => ap_reg_pp0_iter2_r_V_5_reg_1845,
        dout => tmp_9_i_tr_fu_1766_p2);

    getPixelClassificcud_U4 : component getPixelClassificcud
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 9,
        dout_WIDTH => 22)
    port map (
        din0 => tmp18_reg_1877,
        din1 => ap_reg_pp0_iter2_r_V_8_reg_1861,
        dout => tmp_9_i2_tr_fu_1773_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                    ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    in_pixel_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_pixel_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((in_pixel_V_0_ack_out = ap_const_logic_1) and (in_pixel_V_0_vld_out = ap_const_logic_1))) then 
                                        in_pixel_V_0_sel_rd <= not(in_pixel_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    in_pixel_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_pixel_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((in_pixel_V_0_ack_in = ap_const_logic_1) and (in_pixel_V_0_vld_in = ap_const_logic_1))) then 
                                        in_pixel_V_0_sel_wr <= not(in_pixel_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    in_pixel_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                in_pixel_V_0_state <= ap_const_lv2_0;
            else
                if ((((in_pixel_V_0_vld_in = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_2)) or ((in_pixel_V_0_vld_in = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_3) and (in_pixel_V_0_ack_out = ap_const_logic_1)))) then 
                    in_pixel_V_0_state <= ap_const_lv2_2;
                elsif ((((in_pixel_V_0_ack_out = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_1)) or ((in_pixel_V_0_ack_out = ap_const_logic_0) and (in_pixel_V_0_state = ap_const_lv2_3) and (in_pixel_V_0_vld_in = ap_const_logic_1)))) then 
                    in_pixel_V_0_state <= ap_const_lv2_1;
                elsif (((not(((in_pixel_V_0_vld_in = ap_const_logic_0) and (in_pixel_V_0_ack_out = ap_const_logic_1))) and not(((in_pixel_V_0_ack_out = ap_const_logic_0) and (in_pixel_V_0_vld_in = ap_const_logic_1))) and (in_pixel_V_0_state = ap_const_lv2_3)) or ((in_pixel_V_0_state = ap_const_lv2_1) and (in_pixel_V_0_ack_out = ap_const_logic_1)) or ((in_pixel_V_0_state = ap_const_lv2_2) and (in_pixel_V_0_vld_in = ap_const_logic_1)))) then 
                    in_pixel_V_0_state <= ap_const_lv2_3;
                else 
                    in_pixel_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    out_pixel_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_pixel_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((out_pixel_V_1_ack_out = ap_const_logic_1) and (out_pixel_V_1_vld_out = ap_const_logic_1))) then 
                                        out_pixel_V_1_sel_rd <= not(out_pixel_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    out_pixel_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_pixel_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((out_pixel_V_1_ack_in = ap_const_logic_1) and (out_pixel_V_1_vld_in = ap_const_logic_1))) then 
                                        out_pixel_V_1_sel_wr <= not(out_pixel_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    out_pixel_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                out_pixel_V_1_state <= ap_const_lv2_0;
            else
                if ((((out_pixel_V_1_state = ap_const_lv2_2) and (out_pixel_V_1_vld_in = ap_const_logic_0)) or ((out_pixel_V_1_state = ap_const_lv2_3) and (out_pixel_V_1_vld_in = ap_const_logic_0) and (out_pixel_V_1_ack_out = ap_const_logic_1)))) then 
                    out_pixel_V_1_state <= ap_const_lv2_2;
                elsif ((((out_pixel_V_1_state = ap_const_lv2_3) and (out_pixel_V_1_ack_out = ap_const_logic_0) and (out_pixel_V_1_vld_in = ap_const_logic_1)) or ((out_pixel_V_1_state = ap_const_lv2_1) and (out_pixel_V_1_ack_out = ap_const_logic_0)))) then 
                    out_pixel_V_1_state <= ap_const_lv2_1;
                elsif ((((out_pixel_V_1_state = ap_const_lv2_2) and (out_pixel_V_1_vld_in = ap_const_logic_1)) or (not(((out_pixel_V_1_vld_in = ap_const_logic_0) and (out_pixel_V_1_ack_out = ap_const_logic_1))) and not(((out_pixel_V_1_ack_out = ap_const_logic_0) and (out_pixel_V_1_vld_in = ap_const_logic_1))) and (out_pixel_V_1_state = ap_const_lv2_3)) or ((out_pixel_V_1_state = ap_const_lv2_1) and (out_pixel_V_1_ack_out = ap_const_logic_1)))) then 
                    out_pixel_V_1_state <= ap_const_lv2_3;
                else 
                    out_pixel_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    do_init_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1815 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                do_init_reg_220 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((exitcond_reg_1815 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                do_init_reg_220 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    in_pixel_V51_phi_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_650)) then
                if ((do_init_reg_220 = ap_const_lv1_0)) then 
                    in_pixel_V51_phi_reg_279 <= ap_phi_mux_in_pixel_V51_rewind_phi_fu_255_p6;
                elsif ((do_init_reg_220 = ap_const_lv1_1)) then 
                    in_pixel_V51_phi_reg_279 <= in_pixel_V_0_data_out;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    in_pixel_V51_phi_reg_279 <= ap_phi_reg_pp0_iter1_in_pixel_V51_phi_reg_279;
                end if;
            end if; 
        end if;
    end process;

    in_switch_V52_phi_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_650)) then
                if ((do_init_reg_220 = ap_const_lv1_0)) then 
                    in_switch_V52_phi_reg_292 <= ap_phi_mux_in_switch_V52_rewind_phi_fu_269_p6;
                elsif ((do_init_reg_220 = ap_const_lv1_1)) then 
                    in_switch_V52_phi_reg_292 <= in_switch_V_read_reg_1780;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    in_switch_V52_phi_reg_292 <= ap_phi_reg_pp0_iter1_in_switch_V52_phi_reg_292;
                end if;
            end if; 
        end if;
    end process;

    minimumDistanceIndex_9_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_1815 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                minimumDistanceIndex_9_reg_236 <= tmp_91_reg_1810;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((exitcond_reg_1815 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                minimumDistanceIndex_9_reg_236 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    minimumDistanceIndex_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter20_exitcond_reg_1815 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1))) then 
                minimumDistanceIndex_reg_318 <= minimumDistanceIndex_8_reg_2114;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_reg_pp0_iter20_exitcond_reg_1815 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1)))) then 
                minimumDistanceIndex_reg_318 <= ap_const_lv32_7;
            end if; 
        end if;
    end process;

    minimumDistance_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter19_exitcond_reg_1815 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then 
                minimumDistance_reg_304 <= minimumDistance_2_2_fu_1698_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_reg_pp0_iter19_exitcond_reg_1815 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1)))) then 
                minimumDistance_reg_304 <= ap_const_lv32_7FFFFFFF;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter10_exitcond_reg_1815 <= ap_reg_pp0_iter9_exitcond_reg_1815;
                ap_reg_pp0_iter10_i_1_reg_1800 <= ap_reg_pp0_iter9_i_1_reg_1800;
                ap_reg_pp0_iter10_i_reg_1790 <= ap_reg_pp0_iter9_i_reg_1790;
                ap_reg_pp0_iter10_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter9_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter10_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter9_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter10_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter9_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter11_exitcond_reg_1815 <= ap_reg_pp0_iter10_exitcond_reg_1815;
                ap_reg_pp0_iter11_i_1_reg_1800 <= ap_reg_pp0_iter10_i_1_reg_1800;
                ap_reg_pp0_iter11_i_reg_1790 <= ap_reg_pp0_iter10_i_reg_1790;
                ap_reg_pp0_iter11_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter10_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter11_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter10_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter11_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter10_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter12_exitcond_reg_1815 <= ap_reg_pp0_iter11_exitcond_reg_1815;
                ap_reg_pp0_iter12_i_1_reg_1800 <= ap_reg_pp0_iter11_i_1_reg_1800;
                ap_reg_pp0_iter12_i_reg_1790 <= ap_reg_pp0_iter11_i_reg_1790;
                ap_reg_pp0_iter12_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter11_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter12_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter11_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter12_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter11_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter13_exitcond_reg_1815 <= ap_reg_pp0_iter12_exitcond_reg_1815;
                ap_reg_pp0_iter13_i_1_reg_1800 <= ap_reg_pp0_iter12_i_1_reg_1800;
                ap_reg_pp0_iter13_i_reg_1790 <= ap_reg_pp0_iter12_i_reg_1790;
                ap_reg_pp0_iter13_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter12_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter13_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter12_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter13_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter12_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter14_exitcond_reg_1815 <= ap_reg_pp0_iter13_exitcond_reg_1815;
                ap_reg_pp0_iter14_i_1_reg_1800 <= ap_reg_pp0_iter13_i_1_reg_1800;
                ap_reg_pp0_iter14_i_reg_1790 <= ap_reg_pp0_iter13_i_reg_1790;
                ap_reg_pp0_iter14_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter13_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter14_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter13_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter14_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter13_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter15_exitcond_reg_1815 <= ap_reg_pp0_iter14_exitcond_reg_1815;
                ap_reg_pp0_iter15_i_1_reg_1800 <= ap_reg_pp0_iter14_i_1_reg_1800;
                ap_reg_pp0_iter15_i_reg_1790 <= ap_reg_pp0_iter14_i_reg_1790;
                ap_reg_pp0_iter15_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter14_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter15_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter14_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter15_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter14_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter16_exitcond_reg_1815 <= ap_reg_pp0_iter15_exitcond_reg_1815;
                ap_reg_pp0_iter16_i_1_reg_1800 <= ap_reg_pp0_iter15_i_1_reg_1800;
                ap_reg_pp0_iter16_i_reg_1790 <= ap_reg_pp0_iter15_i_reg_1790;
                ap_reg_pp0_iter16_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter15_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter16_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter15_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter16_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter15_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter17_exitcond_reg_1815 <= ap_reg_pp0_iter16_exitcond_reg_1815;
                ap_reg_pp0_iter17_i_1_reg_1800 <= ap_reg_pp0_iter16_i_1_reg_1800;
                ap_reg_pp0_iter17_i_reg_1790 <= ap_reg_pp0_iter16_i_reg_1790;
                ap_reg_pp0_iter17_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter16_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter17_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter16_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter17_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter16_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter18_exitcond_reg_1815 <= ap_reg_pp0_iter17_exitcond_reg_1815;
                ap_reg_pp0_iter18_i_1_reg_1800 <= ap_reg_pp0_iter17_i_1_reg_1800;
                ap_reg_pp0_iter18_i_reg_1790 <= ap_reg_pp0_iter17_i_reg_1790;
                ap_reg_pp0_iter18_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter17_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter18_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter17_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter17_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter19_exitcond_reg_1815 <= ap_reg_pp0_iter18_exitcond_reg_1815;
                ap_reg_pp0_iter19_i_1_reg_1800 <= ap_reg_pp0_iter18_i_1_reg_1800;
                ap_reg_pp0_iter19_i_reg_1790 <= ap_reg_pp0_iter18_i_reg_1790;
                ap_reg_pp0_iter19_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter18_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter19_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter18_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter19_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter20_exitcond_reg_1815 <= ap_reg_pp0_iter19_exitcond_reg_1815;
                ap_reg_pp0_iter20_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter19_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter20_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter19_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter21_exitcond_reg_1815 <= ap_reg_pp0_iter20_exitcond_reg_1815;
                ap_reg_pp0_iter2_exitcond_reg_1815 <= ap_reg_pp0_iter1_exitcond_reg_1815;
                ap_reg_pp0_iter2_i_1_reg_1800 <= ap_reg_pp0_iter1_i_1_reg_1800;
                ap_reg_pp0_iter2_i_reg_1790 <= ap_reg_pp0_iter1_i_reg_1790;
                ap_reg_pp0_iter2_in_pixel_V51_phi_reg_279 <= in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter2_in_switch_V52_phi_reg_292 <= in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter2_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter1_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter2_r_V_1_reg_1824 <= r_V_1_reg_1824;
                ap_reg_pp0_iter2_r_V_2_reg_1829 <= r_V_2_reg_1829;
                ap_reg_pp0_iter2_r_V_3_reg_1835 <= r_V_3_reg_1835;
                ap_reg_pp0_iter2_r_V_4_reg_1840 <= r_V_4_reg_1840;
                ap_reg_pp0_iter2_r_V_5_reg_1845 <= r_V_5_reg_1845;
                ap_reg_pp0_iter2_r_V_6_reg_1851 <= r_V_6_reg_1851;
                ap_reg_pp0_iter2_r_V_7_reg_1856 <= r_V_7_reg_1856;
                ap_reg_pp0_iter2_r_V_8_reg_1861 <= r_V_8_reg_1861;
                ap_reg_pp0_iter2_r_V_reg_1819 <= r_V_reg_1819;
                ap_reg_pp0_iter3_exitcond_reg_1815 <= ap_reg_pp0_iter2_exitcond_reg_1815;
                ap_reg_pp0_iter3_i_1_reg_1800 <= ap_reg_pp0_iter2_i_1_reg_1800;
                ap_reg_pp0_iter3_i_reg_1790 <= ap_reg_pp0_iter2_i_reg_1790;
                ap_reg_pp0_iter3_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter2_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter3_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter2_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter3_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter2_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter3_r_V_3_reg_1835 <= ap_reg_pp0_iter2_r_V_3_reg_1835;
                ap_reg_pp0_iter3_r_V_6_reg_1851 <= ap_reg_pp0_iter2_r_V_6_reg_1851;
                ap_reg_pp0_iter3_r_V_reg_1819 <= ap_reg_pp0_iter2_r_V_reg_1819;
                ap_reg_pp0_iter4_exitcond_reg_1815 <= ap_reg_pp0_iter3_exitcond_reg_1815;
                ap_reg_pp0_iter4_i_1_reg_1800 <= ap_reg_pp0_iter3_i_1_reg_1800;
                ap_reg_pp0_iter4_i_reg_1790 <= ap_reg_pp0_iter3_i_reg_1790;
                ap_reg_pp0_iter4_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter3_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter4_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter3_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter4_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter3_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter4_r_V_6_reg_1851 <= ap_reg_pp0_iter3_r_V_6_reg_1851;
                ap_reg_pp0_iter4_tmp_34_reg_1887 <= tmp_34_reg_1887;
                ap_reg_pp0_iter4_tmp_39_reg_1898 <= tmp_39_reg_1898;
                ap_reg_pp0_iter4_tmp_71_reg_1909 <= tmp_71_reg_1909;
                ap_reg_pp0_iter4_tmp_74_reg_1920 <= tmp_74_reg_1920;
                ap_reg_pp0_iter4_tmp_85_reg_1931 <= tmp_85_reg_1931;
                ap_reg_pp0_iter4_tmp_88_reg_1942 <= tmp_88_reg_1942;
                ap_reg_pp0_iter5_exitcond_reg_1815 <= ap_reg_pp0_iter4_exitcond_reg_1815;
                ap_reg_pp0_iter5_i_1_reg_1800 <= ap_reg_pp0_iter4_i_1_reg_1800;
                ap_reg_pp0_iter5_i_reg_1790 <= ap_reg_pp0_iter4_i_reg_1790;
                ap_reg_pp0_iter5_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter4_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter5_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter4_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter5_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter4_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter5_tmp_2_i1_reg_1948 <= tmp_2_i1_reg_1948;
                ap_reg_pp0_iter5_tmp_2_i_reg_1975 <= tmp_2_i_reg_1975;
                ap_reg_pp0_iter6_exitcond_reg_1815 <= ap_reg_pp0_iter5_exitcond_reg_1815;
                ap_reg_pp0_iter6_i_1_reg_1800 <= ap_reg_pp0_iter5_i_1_reg_1800;
                ap_reg_pp0_iter6_i_reg_1790 <= ap_reg_pp0_iter5_i_reg_1790;
                ap_reg_pp0_iter6_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter5_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter6_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter5_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter6_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter5_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter7_exitcond_reg_1815 <= ap_reg_pp0_iter6_exitcond_reg_1815;
                ap_reg_pp0_iter7_i_1_reg_1800 <= ap_reg_pp0_iter6_i_1_reg_1800;
                ap_reg_pp0_iter7_i_reg_1790 <= ap_reg_pp0_iter6_i_reg_1790;
                ap_reg_pp0_iter7_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter6_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter7_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter6_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter7_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter6_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter8_exitcond_reg_1815 <= ap_reg_pp0_iter7_exitcond_reg_1815;
                ap_reg_pp0_iter8_i_1_reg_1800 <= ap_reg_pp0_iter7_i_1_reg_1800;
                ap_reg_pp0_iter8_i_reg_1790 <= ap_reg_pp0_iter7_i_reg_1790;
                ap_reg_pp0_iter8_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter7_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter8_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter7_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter8_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter7_minimumDistanceIndex_9_reg_236;
                ap_reg_pp0_iter9_exitcond_reg_1815 <= ap_reg_pp0_iter8_exitcond_reg_1815;
                ap_reg_pp0_iter9_i_1_reg_1800 <= ap_reg_pp0_iter8_i_1_reg_1800;
                ap_reg_pp0_iter9_i_reg_1790 <= ap_reg_pp0_iter8_i_reg_1790;
                ap_reg_pp0_iter9_in_pixel_V51_phi_reg_279 <= ap_reg_pp0_iter8_in_pixel_V51_phi_reg_279;
                ap_reg_pp0_iter9_in_switch_V52_phi_reg_292 <= ap_reg_pp0_iter8_in_switch_V52_phi_reg_292;
                ap_reg_pp0_iter9_minimumDistanceIndex_9_reg_236 <= ap_reg_pp0_iter8_minimumDistanceIndex_9_reg_236;
                minimumDistance_2_1_reg_2101 <= minimumDistance_2_1_fu_1606_p3;
                mul3_reg_1965 <= mul3_fu_784_p2;
                mul5_reg_1992 <= mul5_fu_869_p2;
                mul_reg_2012 <= mul_fu_919_p2;
                    powerSummation_V_2_reg_2064(31 downto 8) <= powerSummation_V_2_fu_1528_p2(31 downto 8);
                result_3_reg_1904 <= result_3_fu_658_p2;
                result_6_reg_1926 <= result_6_fu_688_p2;
                result_s_reg_1882 <= result_s_fu_628_p2;
                tmp14_reg_1867 <= tmp14_fu_601_p2;
                    tmp15_reg_2027(30 downto 8) <= tmp15_fu_1058_p2(30 downto 8);
                tmp16_reg_1872 <= tmp16_fu_610_p2;
                    tmp17_reg_2037(30 downto 8) <= tmp17_fu_1187_p2(30 downto 8);
                tmp18_reg_1877 <= tmp18_fu_619_p2;
                    tmp19_reg_2049(30 downto 8) <= tmp19_fu_1336_p2(30 downto 8);
                tmp_19_reg_2069 <= grp_fxp_sqrt_fu_332_ap_return(19 downto 8);
                tmp_21_reg_2022 <= p_neg_i1_fu_935_p2(20 downto 1);
                tmp_2_1_reg_2091 <= tmp_2_1_fu_1587_p2;
                tmp_2_i1_reg_1948 <= tmp_2_i1_fu_744_p2;
                tmp_2_i2_reg_2042 <= tmp_2_i2_fu_1222_p2;
                tmp_2_i_reg_1975 <= tmp_2_i_fu_829_p2;
                tmp_2_reg_2081 <= tmp_2_fu_1557_p2;
                tmp_33_reg_2075 <= grp_fxp_sqrt_fu_337_ap_return(19 downto 8);
                tmp_34_reg_1887 <= result_s_fu_628_p2(16 downto 16);
                tmp_37_reg_1960 <= mul1_fu_761_p2(41 downto 23);
                tmp_39_reg_1898 <= tmp_9_i1_tr_fu_1759_p2(21 downto 21);
                tmp_47_reg_2108 <= grp_fxp_sqrt_fu_342_ap_return(19 downto 8);
                tmp_4_1_reg_2096 <= tmp_4_1_fu_1593_p2;
                tmp_4_reg_2086 <= tmp_4_fu_1563_p2;
                tmp_53_reg_1970 <= mul3_fu_784_p2(44 downto 27);
                tmp_67_reg_2032 <= p_neg_i_fu_1064_p2(20 downto 1);
                tmp_71_reg_1909 <= result_3_fu_658_p2(16 downto 16);
                tmp_73_reg_1987 <= mul4_fu_846_p2(41 downto 23);
                tmp_74_reg_1920 <= tmp_9_i_tr_fu_1766_p2(21 downto 21);
                tmp_76_reg_1997 <= mul5_fu_869_p2(44 downto 27);
                tmp_85_reg_1931 <= result_6_fu_688_p2(16 downto 16);
                tmp_87_reg_2007 <= mul2_fu_896_p2(41 downto 23);
                tmp_88_reg_1942 <= tmp_9_i2_tr_fu_1773_p2(21 downto 21);
                tmp_90_reg_2017 <= mul_fu_919_p2(44 downto 27);
                tmp_9_i1_tr_reg_1893 <= tmp_9_i1_tr_fu_1759_p2;
                tmp_9_i2_tr_reg_1937 <= tmp_9_i2_tr_fu_1773_p2;
                tmp_9_i_tr_reg_1915 <= tmp_9_i_tr_fu_1766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_exitcond_reg_1815 <= exitcond_reg_1815;
                ap_reg_pp0_iter1_i_1_reg_1800 <= i_1_reg_1800;
                ap_reg_pp0_iter1_i_reg_1790 <= i_reg_1790;
                ap_reg_pp0_iter1_minimumDistanceIndex_9_reg_236 <= minimumDistanceIndex_9_reg_236;
                exitcond_reg_1815 <= exitcond_fu_388_p2;
                i_1_reg_1800 <= i_1_fu_367_p2;
                i_reg_1790 <= i_fu_356_p2;
                r_V_1_reg_1824 <= r_V_1_fu_466_p2;
                r_V_2_reg_1829 <= r_V_2_fu_480_p2;
                r_V_3_reg_1835 <= r_V_3_fu_516_p2;
                r_V_4_reg_1840 <= r_V_4_fu_526_p2;
                r_V_5_reg_1845 <= r_V_5_fu_536_p2;
                r_V_6_reg_1851 <= r_V_6_fu_572_p2;
                r_V_7_reg_1856 <= r_V_7_fu_582_p2;
                r_V_8_reg_1861 <= r_V_8_fu_592_p2;
                r_V_reg_1819 <= r_V_fu_452_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond_reg_1815 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                in_pixel_V51_rewind_reg_251 <= in_pixel_V51_phi_reg_279;
                in_switch_V52_rewind_reg_265 <= in_switch_V52_phi_reg_292;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_pixel_V_0_load_A = ap_const_logic_1)) then
                in_pixel_V_0_payload_A <= in_pixel_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((in_pixel_V_0_load_B = ap_const_logic_1)) then
                in_pixel_V_0_payload_B <= in_pixel_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_do_init_phi_fu_224_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                in_switch_V_read_reg_1780 <= in_switch_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then
                minimumDistanceIndex_8_reg_2114 <= minimumDistanceIndex_8_fu_1690_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_pixel_V_1_load_A = ap_const_logic_1)) then
                out_pixel_V_1_payload_A <= storemerge1_fu_1748_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((out_pixel_V_1_load_B = ap_const_logic_1)) then
                out_pixel_V_1_payload_B <= storemerge1_fu_1748_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_34_reg_1887 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_27_reg_1955(40 downto 3) <= tmp_27_fu_767_p1(40 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_71_reg_1909 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_70_reg_1982(40 downto 3) <= tmp_70_fu_852_p1(40 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_1931 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_84_reg_2002(40 downto 3) <= tmp_84_fu_902_p1(40 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_91_reg_1810 <= tmp_91_fu_384_p1;
            end if;
        end if;
    end process;
    tmp_27_reg_1955(2 downto 0) <= "000";
    tmp_70_reg_1982(2 downto 0) <= "000";
    tmp_84_reg_2002(2 downto 0) <= "000";
    tmp15_reg_2027(7 downto 0) <= "00000000";
    tmp17_reg_2037(7 downto 0) <= "00000000";
    tmp19_reg_2049(7 downto 0) <= "00000000";
    powerSummation_V_2_reg_2064(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(in_pixel_V_0_vld_out, out_pixel_V_1_ack_in, ap_enable_reg_pp0_iter1, do_init_reg_220, ap_enable_reg_pp0_iter22)
    begin
                ap_block_pp0_stage0_01001 <= (((out_pixel_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1)) or ((do_init_reg_220 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(in_pixel_V_0_vld_out, out_pixel_V_1_ack_in, ap_enable_reg_pp0_iter1, do_init_reg_220, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_block_state23_io, ap_block_state24_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and ((out_pixel_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state24_io))) or ((ap_const_boolean_1 = ap_block_state23_io) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1)) or ((do_init_reg_220 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(in_pixel_V_0_vld_out, out_pixel_V_1_ack_in, ap_enable_reg_pp0_iter1, do_init_reg_220, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_block_state23_io, ap_block_state24_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and ((out_pixel_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state24_io))) or ((ap_const_boolean_1 = ap_block_state23_io) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1)) or ((do_init_reg_220 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_io_assign_proc : process(out_pixel_V_1_ack_in, ap_reg_pp0_iter20_exitcond_reg_1815)
    begin
                ap_block_state23_io <= ((ap_reg_pp0_iter20_exitcond_reg_1815 = ap_const_lv1_1) and (out_pixel_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state24_io_assign_proc : process(out_pixel_V_1_ack_in, ap_reg_pp0_iter21_exitcond_reg_1815)
    begin
                ap_block_state24_io <= ((ap_reg_pp0_iter21_exitcond_reg_1815 = ap_const_lv1_1) and (out_pixel_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state24_pp0_stage0_iter22_assign_proc : process(out_pixel_V_1_ack_in)
    begin
                ap_block_state24_pp0_stage0_iter22 <= (out_pixel_V_1_ack_in = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(in_pixel_V_0_vld_out, do_init_reg_220)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((do_init_reg_220 = ap_const_lv1_1) and (in_pixel_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_170_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_170 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_650_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_650 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_224_p6_assign_proc : process(do_init_reg_220, exitcond_reg_1815, ap_condition_170)
    begin
        if ((ap_const_boolean_1 = ap_condition_170)) then
            if ((exitcond_reg_1815 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_224_p6 <= ap_const_lv1_1;
            elsif ((exitcond_reg_1815 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_224_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_224_p6 <= do_init_reg_220;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_224_p6 <= do_init_reg_220;
        end if; 
    end process;


    ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4_assign_proc : process(in_pixel_V_0_data_out, do_init_reg_220, ap_phi_mux_in_pixel_V51_rewind_phi_fu_255_p6, ap_phi_reg_pp0_iter1_in_pixel_V51_phi_reg_279, ap_condition_170)
    begin
        if ((ap_const_boolean_1 = ap_condition_170)) then
            if ((do_init_reg_220 = ap_const_lv1_0)) then 
                ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4 <= ap_phi_mux_in_pixel_V51_rewind_phi_fu_255_p6;
            elsif ((do_init_reg_220 = ap_const_lv1_1)) then 
                ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4 <= in_pixel_V_0_data_out;
            else 
                ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4 <= ap_phi_reg_pp0_iter1_in_pixel_V51_phi_reg_279;
            end if;
        else 
            ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4 <= ap_phi_reg_pp0_iter1_in_pixel_V51_phi_reg_279;
        end if; 
    end process;


    ap_phi_mux_in_pixel_V51_rewind_phi_fu_255_p6_assign_proc : process(ap_block_pp0_stage0, in_pixel_V51_rewind_reg_251, in_pixel_V51_phi_reg_279, ap_reg_pp0_iter1_exitcond_reg_1815, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_reg_pp0_iter1_exitcond_reg_1815 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_in_pixel_V51_rewind_phi_fu_255_p6 <= in_pixel_V51_phi_reg_279;
        else 
            ap_phi_mux_in_pixel_V51_rewind_phi_fu_255_p6 <= in_pixel_V51_rewind_reg_251;
        end if; 
    end process;


    ap_phi_mux_in_switch_V52_rewind_phi_fu_269_p6_assign_proc : process(ap_block_pp0_stage0, in_switch_V52_rewind_reg_265, in_switch_V52_phi_reg_292, ap_reg_pp0_iter1_exitcond_reg_1815, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_reg_pp0_iter1_exitcond_reg_1815 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_in_switch_V52_rewind_phi_fu_269_p6 <= in_switch_V52_phi_reg_292;
        else 
            ap_phi_mux_in_switch_V52_rewind_phi_fu_269_p6 <= in_switch_V52_rewind_reg_265;
        end if; 
    end process;


    ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6_assign_proc : process(exitcond_reg_1815, minimumDistanceIndex_9_reg_236, tmp_91_reg_1810, ap_condition_170)
    begin
        if ((ap_const_boolean_1 = ap_condition_170)) then
            if ((exitcond_reg_1815 = ap_const_lv1_1)) then 
                ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6 <= ap_const_lv2_0;
            elsif ((exitcond_reg_1815 = ap_const_lv1_0)) then 
                ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6 <= tmp_91_reg_1810;
            else 
                ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6 <= minimumDistanceIndex_9_reg_236;
            end if;
        else 
            ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6 <= minimumDistanceIndex_9_reg_236;
        end if; 
    end process;


    ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, ap_reg_pp0_iter20_exitcond_reg_1815, minimumDistanceIndex_reg_318, minimumDistanceIndex_8_reg_2114)
    begin
        if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_reg_pp0_iter20_exitcond_reg_1815 = ap_const_lv1_1)) then 
                ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6 <= ap_const_lv32_7;
            elsif ((ap_reg_pp0_iter20_exitcond_reg_1815 = ap_const_lv1_0)) then 
                ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6 <= minimumDistanceIndex_8_reg_2114;
            else 
                ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6 <= minimumDistanceIndex_reg_318;
            end if;
        else 
            ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6 <= minimumDistanceIndex_reg_318;
        end if; 
    end process;


    ap_phi_mux_minimumDistance_phi_fu_308_p6_assign_proc : process(ap_block_pp0_stage0, minimumDistance_reg_304, ap_reg_pp0_iter19_exitcond_reg_1815, ap_enable_reg_pp0_iter20, minimumDistance_2_2_fu_1698_p3)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_reg_pp0_iter19_exitcond_reg_1815 = ap_const_lv1_1)) then 
                ap_phi_mux_minimumDistance_phi_fu_308_p6 <= ap_const_lv32_7FFFFFFF;
            elsif ((ap_reg_pp0_iter19_exitcond_reg_1815 = ap_const_lv1_0)) then 
                ap_phi_mux_minimumDistance_phi_fu_308_p6 <= minimumDistance_2_2_fu_1698_p3;
            else 
                ap_phi_mux_minimumDistance_phi_fu_308_p6 <= minimumDistance_reg_304;
            end if;
        else 
            ap_phi_mux_minimumDistance_phi_fu_308_p6 <= minimumDistance_reg_304;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_in_pixel_V51_phi_reg_279 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_in_switch_V52_phi_reg_292 <= "XXXX";
    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    colorBlue_V_1_fu_498_p4 <= p_color_array_stream_s_q1(15 downto 8);
    colorBlue_V_2_fu_554_p4 <= p_color_array_stream_s_q2(15 downto 8);
    colorBlue_V_fu_430_p4 <= p_color_array_stream_s_q0(15 downto 8);
    colorGreen_V_1_fu_494_p1 <= p_color_array_stream_s_q1(8 - 1 downto 0);
    colorGreen_V_2_fu_550_p1 <= p_color_array_stream_s_q2(8 - 1 downto 0);
    colorGreen_V_fu_426_p1 <= p_color_array_stream_s_q0(8 - 1 downto 0);
    exitcond_fu_388_p2 <= "1" when (i_2_fu_378_p2 = ap_const_lv3_6) else "0";

    grp_fxp_sqrt_fu_332_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fxp_sqrt_fu_332_ap_ce <= ap_const_logic_1;
        else 
            grp_fxp_sqrt_fu_332_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fxp_sqrt_fu_332_in_val_V_read <= std_logic_vector(signed(tmp15_cast_fu_1391_p1) + signed(p_Val2_s_fu_1387_p1));

    grp_fxp_sqrt_fu_337_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fxp_sqrt_fu_337_ap_ce <= ap_const_logic_1;
        else 
            grp_fxp_sqrt_fu_337_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fxp_sqrt_fu_337_in_val_V_read <= std_logic_vector(signed(tmp17_cast_fu_1450_p1) + signed(p_Val2_1_fu_1446_p1));

    grp_fxp_sqrt_fu_342_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fxp_sqrt_fu_342_ap_ce <= ap_const_logic_1;
        else 
            grp_fxp_sqrt_fu_342_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    i_1_cast_fu_1659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter19_i_1_reg_1800),32));
    i_1_fu_367_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(minimumDistanceIndex_3_fu_347_p1));
    i_2_fu_378_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(minimumDistanceIndex_3_fu_347_p1));
    i_cast_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter19_i_reg_1790),32));
    i_fu_356_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(minimumDistanceIndex_3_fu_347_p1));
    in_pixel_V_0_ack_in <= in_pixel_V_0_state(1);

    in_pixel_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, do_init_reg_220, ap_block_pp0_stage0_11001)
    begin
        if (((do_init_reg_220 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            in_pixel_V_0_ack_out <= ap_const_logic_1;
        else 
            in_pixel_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    in_pixel_V_0_data_out_assign_proc : process(in_pixel_V_0_payload_A, in_pixel_V_0_payload_B, in_pixel_V_0_sel)
    begin
        if ((in_pixel_V_0_sel = ap_const_logic_1)) then 
            in_pixel_V_0_data_out <= in_pixel_V_0_payload_B;
        else 
            in_pixel_V_0_data_out <= in_pixel_V_0_payload_A;
        end if; 
    end process;

    in_pixel_V_0_load_A <= (in_pixel_V_0_state_cmp_full and not(in_pixel_V_0_sel_wr));
    in_pixel_V_0_load_B <= (in_pixel_V_0_state_cmp_full and in_pixel_V_0_sel_wr);
    in_pixel_V_0_sel <= in_pixel_V_0_sel_rd;
    in_pixel_V_0_state_cmp_full <= '0' when (in_pixel_V_0_state = ap_const_lv2_1) else '1';
    in_pixel_V_0_vld_in <= in_pixel_V_TVALID;
    in_pixel_V_0_vld_out <= in_pixel_V_0_state(0);

    in_pixel_V_TDATA_blk_n_assign_proc : process(in_pixel_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, do_init_reg_220)
    begin
        if (((do_init_reg_220 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            in_pixel_V_TDATA_blk_n <= in_pixel_V_0_state(0);
        else 
            in_pixel_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_pixel_V_TREADY <= in_pixel_V_0_state(1);
    lhs_V_1_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixelRed_V_fu_394_p4),9));
    lhs_V_2_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixelGreen_V_fu_404_p1),9));
    lhs_V_3_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pixelBlue_V_fu_408_p4),9));
    lhs_V_fu_1720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter20_in_switch_V52_phi_reg_292),32));
    minimumDistanceIndex_1_fu_1628_p3 <= 
        minimumDistanceIndex_4_fu_1624_p1 when (tmp_4_reg_2086(0) = '1') else 
        ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6;
    minimumDistanceIndex_2_fu_1635_p3 <= 
        minimumDistanceIndex_1_fu_1628_p3 when (tmp_2_reg_2081(0) = '1') else 
        ap_phi_mux_minimumDistanceIndex_phi_fu_322_p6;
    minimumDistanceIndex_3_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6),3));
    minimumDistanceIndex_4_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter19_minimumDistanceIndex_9_reg_236),32));
    minimumDistanceIndex_5_fu_1645_p3 <= 
        i_cast_fu_1642_p1 when (tmp_4_1_reg_2096(0) = '1') else 
        minimumDistanceIndex_2_fu_1635_p3;
    minimumDistanceIndex_6_fu_1652_p3 <= 
        minimumDistanceIndex_5_fu_1645_p3 when (tmp_2_1_reg_2091(0) = '1') else 
        minimumDistanceIndex_2_fu_1635_p3;
    minimumDistanceIndex_7_fu_1675_p3 <= 
        i_1_cast_fu_1659_p1 when (tmp_4_2_fu_1670_p2(0) = '1') else 
        minimumDistanceIndex_6_fu_1652_p3;
    minimumDistanceIndex_8_fu_1690_p3 <= 
        minimumDistanceIndex_7_fu_1675_p3 when (tmp_2_2_fu_1665_p2(0) = '1') else 
        minimumDistanceIndex_6_fu_1652_p3;
    minimumDistance_1_1_fu_1598_p3 <= 
        tmp_14_i_fu_1584_p1 when (tmp_4_1_fu_1593_p2(0) = '1') else 
        minimumDistance_2_fu_1576_p3;
    minimumDistance_1_2_fu_1683_p3 <= 
        tmp_14_i2_fu_1662_p1 when (tmp_4_2_fu_1670_p2(0) = '1') else 
        minimumDistance_2_1_reg_2101;
    minimumDistance_1_fu_1568_p3 <= 
        tmp_14_i1_fu_1554_p1 when (tmp_4_fu_1563_p2(0) = '1') else 
        ap_phi_mux_minimumDistance_phi_fu_308_p6;
    minimumDistance_2_1_fu_1606_p3 <= 
        minimumDistance_1_1_fu_1598_p3 when (tmp_2_1_fu_1587_p2(0) = '1') else 
        minimumDistance_2_fu_1576_p3;
    minimumDistance_2_2_fu_1698_p3 <= 
        minimumDistance_1_2_fu_1683_p3 when (tmp_2_2_fu_1665_p2(0) = '1') else 
        minimumDistance_2_1_reg_2101;
    minimumDistance_2_fu_1576_p3 <= 
        minimumDistance_1_fu_1568_p3 when (tmp_2_fu_1557_p2(0) = '1') else 
        ap_phi_mux_minimumDistance_phi_fu_308_p6;
    mul1_fu_761_p1 <= tmp_5_i1_fu_750_p3;
    mul1_fu_761_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv42_19999A) * signed(mul1_fu_761_p1))), 42));
    mul2_fu_896_p1 <= tmp_5_i2_fu_885_p3;
    mul2_fu_896_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv42_19999A) * signed(mul2_fu_896_p1))), 42));
    mul3_fu_784_p1 <= tmp_9_i1_tr_reg_1893;
    mul3_fu_784_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv45_666667) * signed(mul3_fu_784_p1))), 45));
    mul4_fu_846_p1 <= tmp_5_i_fu_835_p3;
    mul4_fu_846_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv42_19999A) * signed(mul4_fu_846_p1))), 42));
    mul5_fu_869_p1 <= tmp_9_i_tr_reg_1915;
    mul5_fu_869_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv45_666667) * signed(mul5_fu_869_p1))), 45));
    mul_fu_919_p1 <= tmp_9_i2_tr_reg_1937;
    mul_fu_919_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv45_666667) * signed(mul_fu_919_p1))), 45));
    neg_mul1_fu_950_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(tmp_27_reg_1955));
    neg_mul2_fu_1004_p2 <= std_logic_vector(unsigned(ap_const_lv45_0) - unsigned(mul3_reg_1965));
    neg_mul3_fu_1228_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(tmp_84_reg_2002));
    neg_mul4_fu_1079_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(tmp_70_reg_1982));
    neg_mul5_fu_1133_p2 <= std_logic_vector(unsigned(ap_const_lv45_0) - unsigned(mul5_reg_1992));
    neg_mul_fu_1282_p2 <= std_logic_vector(unsigned(ap_const_lv45_0) - unsigned(mul_reg_2012));
    neg_ti1_fu_979_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(tmp_12_fu_972_p3));
    neg_ti2_fu_1033_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(tmp_20_fu_1026_p3));
    neg_ti3_fu_1108_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(tmp_36_fu_1101_p3));
    neg_ti4_fu_1162_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(tmp_48_fu_1155_p3));
    neg_ti8_fu_1257_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(tmp_54_fu_1250_p3));
    neg_ti_fu_1311_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(tmp_58_fu_1304_p3));
        number_assign_3_cast_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_r_V_3_reg_1835),18));

        number_assign_6_cast_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter4_r_V_6_reg_1851),18));

        number_assign_cast_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_r_V_reg_1819),18));

    out_pixel_V_1_ack_in <= out_pixel_V_1_state(1);
    out_pixel_V_1_ack_out <= out_pixel_V_TREADY;

    out_pixel_V_1_data_out_assign_proc : process(out_pixel_V_1_payload_A, out_pixel_V_1_payload_B, out_pixel_V_1_sel)
    begin
        if ((out_pixel_V_1_sel = ap_const_logic_1)) then 
            out_pixel_V_1_data_out <= out_pixel_V_1_payload_B;
        else 
            out_pixel_V_1_data_out <= out_pixel_V_1_payload_A;
        end if; 
    end process;

    out_pixel_V_1_load_A <= (out_pixel_V_1_state_cmp_full and not(out_pixel_V_1_sel_wr));
    out_pixel_V_1_load_B <= (out_pixel_V_1_state_cmp_full and out_pixel_V_1_sel_wr);
    out_pixel_V_1_sel <= out_pixel_V_1_sel_rd;
    out_pixel_V_1_state_cmp_full <= '0' when (out_pixel_V_1_state = ap_const_lv2_1) else '1';

    out_pixel_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter21, ap_reg_pp0_iter20_exitcond_reg_1815, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter20_exitcond_reg_1815 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1))) then 
            out_pixel_V_1_vld_in <= ap_const_logic_1;
        else 
            out_pixel_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    out_pixel_V_1_vld_out <= out_pixel_V_1_state(0);
    out_pixel_V_TDATA <= out_pixel_V_1_data_out;

    out_pixel_V_TDATA_blk_n_assign_proc : process(out_pixel_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter21, ap_reg_pp0_iter20_exitcond_reg_1815, ap_enable_reg_pp0_iter22, ap_reg_pp0_iter21_exitcond_reg_1815)
    begin
        if ((((ap_reg_pp0_iter21_exitcond_reg_1815 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_reg_pp0_iter20_exitcond_reg_1815 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            out_pixel_V_TDATA_blk_n <= out_pixel_V_1_state(1);
        else 
            out_pixel_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_pixel_V_TVALID <= out_pixel_V_1_state(0);
        p_Val2_1_cast_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_fu_992_p3),31));

        p_Val2_1_fu_1446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_69_fu_1438_p3),32));

        p_Val2_2_cast_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_fu_1046_p3),31));

        p_Val2_2_fu_1521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_83_fu_1513_p3),32));

        p_Val2_4_cast_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_38_fu_1121_p3),31));

        p_Val2_5_cast_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_1175_p3),31));

        p_Val2_6_cast_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_55_fu_1270_p3),31));

        p_Val2_7_cast_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_59_fu_1324_p3),31));

        p_Val2_s_fu_1387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_1379_p3),32));

        p_color_array_stream_8_fu_1730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_color_array_stream_s_q3),24));

    p_color_array_stream_s_address0 <= tmp_s_fu_351_p1(3 - 1 downto 0);
    p_color_array_stream_s_address1 <= tmp_1_1_fu_362_p1(3 - 1 downto 0);
    p_color_array_stream_s_address2 <= tmp_1_2_fu_373_p1(3 - 1 downto 0);
    p_color_array_stream_s_address3 <= tmp_6_fu_1705_p1(3 - 1 downto 0);

    p_color_array_stream_s_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_color_array_stream_s_ce0 <= ap_const_logic_1;
        else 
            p_color_array_stream_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_color_array_stream_s_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_color_array_stream_s_ce1 <= ap_const_logic_1;
        else 
            p_color_array_stream_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_color_array_stream_s_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_color_array_stream_s_ce2 <= ap_const_logic_1;
        else 
            p_color_array_stream_s_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    p_color_array_stream_s_ce3_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then 
            p_color_array_stream_s_ce3 <= ap_const_logic_1;
        else 
            p_color_array_stream_s_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    p_neg_i1_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(tmp_2_i1_reg_1948));
    p_neg_i2_fu_1467_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(tmp_2_i2_reg_2042));
    p_neg_i_fu_1064_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(tmp_2_i_reg_1975));
        p_shl_i1_cast_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_i1_fu_732_p3),21));

    p_shl_i1_fu_732_p3 <= (tmp_9_fu_728_p1 & ap_const_lv3_0);
        p_shl_i2_cast_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_i2_fu_1210_p3),21));

    p_shl_i2_fu_1210_p3 <= (tmp_79_fu_1206_p1 & ap_const_lv3_0);
        p_shl_i_cast_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_i_fu_817_p3),21));

    p_shl_i_fu_817_p3 <= (tmp_65_fu_813_p1 & ap_const_lv3_0);
    pixelBlue_V_fu_408_p4 <= ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4(15 downto 8);
    pixelGreen_V_fu_404_p1 <= ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4(8 - 1 downto 0);
    pixelRed_V_fu_394_p4 <= ap_phi_mux_in_pixel_V51_phi_phi_fu_283_p4(23 downto 16);
    powerSummation_V_2_fu_1528_p2 <= std_logic_vector(signed(tmp19_cast_fu_1525_p1) + signed(p_Val2_2_fu_1521_p1));
    r_V_1_fu_466_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_458_p1) - unsigned(rhs_V_1_fu_462_p1));
    r_V_2_fu_480_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_472_p1) - unsigned(rhs_V_2_fu_476_p1));
    r_V_3_fu_516_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_440_p1) - unsigned(rhs_V_4_cast_fu_508_p3));
    r_V_4_fu_526_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_458_p1) - unsigned(rhs_V_5_fu_522_p1));
    r_V_5_fu_536_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_472_p1) - unsigned(rhs_V_6_fu_532_p1));
    r_V_6_fu_572_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_440_p1) - unsigned(rhs_V_7_cast_fu_564_p3));
    r_V_7_fu_582_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_458_p1) - unsigned(rhs_V_8_fu_578_p1));
    r_V_8_fu_592_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_472_p1) - unsigned(rhs_V_9_fu_588_p1));
    r_V_fu_452_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_440_p1) - unsigned(rhs_V_cast_fu_444_p3));
    result_1_fu_803_p0 <= number_assign_3_cast_fu_800_p1(9 - 1 downto 0);
    result_1_fu_803_p1 <= number_assign_3_cast_fu_800_p1(9 - 1 downto 0);
    result_1_fu_803_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_1_fu_803_p0) * signed(result_1_fu_803_p1))), 18));
    result_2_fu_1196_p0 <= number_assign_6_cast_fu_1193_p1(9 - 1 downto 0);
    result_2_fu_1196_p1 <= number_assign_6_cast_fu_1193_p1(9 - 1 downto 0);
    result_2_fu_1196_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_2_fu_1196_p0) * signed(result_2_fu_1196_p1))), 18));
        result_3_cast_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_1_fu_803_p2),21));

    result_3_fu_658_p0 <= tmp_26_fu_655_p1(9 - 1 downto 0);
    result_3_fu_658_p1 <= tmp_26_fu_655_p1(9 - 1 downto 0);
    result_3_fu_658_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_3_fu_658_p0) * signed(result_3_fu_658_p1))), 17));
        result_6_cast_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_2_fu_1196_p2),21));

    result_6_fu_688_p0 <= tmp_42_fu_685_p1(9 - 1 downto 0);
    result_6_fu_688_p1 <= tmp_42_fu_685_p1(9 - 1 downto 0);
    result_6_fu_688_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_6_fu_688_p0) * signed(result_6_fu_688_p1))), 17));
        result_cast_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_fu_718_p2),21));

    result_fu_718_p0 <= number_assign_cast_fu_715_p1(9 - 1 downto 0);
    result_fu_718_p1 <= number_assign_cast_fu_715_p1(9 - 1 downto 0);
    result_fu_718_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_fu_718_p0) * signed(result_fu_718_p1))), 18));
    result_s_fu_628_p0 <= tmp_7_fu_625_p1(9 - 1 downto 0);
    result_s_fu_628_p1 <= tmp_7_fu_625_p1(9 - 1 downto 0);
    result_s_fu_628_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(result_s_fu_628_p0) * signed(result_s_fu_628_p1))), 17));
    rhs_V_1_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorGreen_V_fu_426_p1),9));
    rhs_V_2_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorBlue_V_fu_430_p4),9));
    rhs_V_3_fu_1715_p2 <= std_logic_vector(unsigned(minimumDistanceIndex_8_reg_2114) + unsigned(ap_const_lv32_1));
    rhs_V_4_cast_fu_508_p3 <= 
        ap_const_lv9_FF when (rhs_V_4_fu_486_p3(0) = '1') else 
        ap_const_lv9_0;
    rhs_V_4_fu_486_p3 <= p_color_array_stream_s_q1(16 downto 16);
    rhs_V_5_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorGreen_V_1_fu_494_p1),9));
    rhs_V_6_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorBlue_V_1_fu_498_p4),9));
    rhs_V_7_cast_fu_564_p3 <= 
        ap_const_lv9_FF when (rhs_V_7_fu_542_p3(0) = '1') else 
        ap_const_lv9_0;
    rhs_V_7_fu_542_p3 <= p_color_array_stream_s_q2(16 downto 16);
    rhs_V_8_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorGreen_V_2_fu_550_p1),9));
    rhs_V_9_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(colorBlue_V_2_fu_554_p4),9));
    rhs_V_cast_fu_444_p3 <= 
        ap_const_lv9_FF when (rhs_V_fu_418_p3(0) = '1') else 
        ap_const_lv9_0;
    rhs_V_fu_418_p3 <= p_color_array_stream_s_q0(16 downto 16);
    sel_tmp1_fu_1740_p3 <= 
        p_color_array_stream_8_fu_1730_p1 when (sel_tmp_fu_1734_p2(0) = '1') else 
        ap_reg_pp0_iter20_in_pixel_V51_phi_reg_279;
    sel_tmp_fu_1734_p2 <= (tmp_fu_1710_p2 and tmp_3_fu_1724_p2);
    storemerge1_fu_1748_p3 <= 
        sel_tmp1_fu_1740_p3 when (tmp_fu_1710_p2(0) = '1') else 
        ap_reg_pp0_iter20_in_pixel_V51_phi_reg_279;
    tmp14_fu_601_p1 <= r_V_2_reg_1829;
    tmp14_fu_601_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_1D) * signed(tmp14_fu_601_p1))), 15));
        tmp15_cast_fu_1391_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp15_reg_2027),32));

    tmp15_fu_1058_p2 <= std_logic_vector(signed(p_Val2_1_cast_fu_1000_p1) + signed(p_Val2_2_cast_fu_1054_p1));
    tmp16_fu_610_p1 <= r_V_5_reg_1845;
    tmp16_fu_610_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_1D) * signed(tmp16_fu_610_p1))), 15));
        tmp17_cast_fu_1450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp17_reg_2037),32));

    tmp17_fu_1187_p2 <= std_logic_vector(signed(p_Val2_4_cast_fu_1129_p1) + signed(p_Val2_5_cast_fu_1183_p1));
    tmp18_fu_619_p1 <= r_V_8_reg_1861;
    tmp18_fu_619_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv15_1D) * signed(tmp18_fu_619_p1))), 15));
        tmp19_cast_fu_1525_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp19_reg_2049),32));

    tmp19_fu_1336_p2 <= std_logic_vector(signed(p_Val2_6_cast_fu_1278_p1) + signed(p_Val2_7_cast_fu_1332_p1));
    tmp_10_fu_1342_p3 <= ap_reg_pp0_iter5_tmp_2_i1_reg_1948(20 downto 20);
        tmp_10_i1_cast_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_reg_2022),21));

        tmp_10_i2_cast_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_81_fu_1472_p4),21));

        tmp_10_i_cast_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_reg_2032),21));

        tmp_11_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_37_reg_1960),20));

    tmp_11_i1_fu_1352_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(tmp_10_i1_cast_fu_1349_p1));
    tmp_11_i2_fu_1486_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(tmp_10_i2_cast_fu_1482_p1));
    tmp_11_i_fu_1411_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(tmp_10_i_cast_fu_1408_p1));
    tmp_12_fu_972_p3 <= 
        tmp_8_fu_965_p1 when (ap_reg_pp0_iter4_tmp_34_reg_1887(0) = '1') else 
        tmp_11_fu_969_p1;
        tmp_12_i1_cast_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_fu_1358_p4),21));

        tmp_12_i2_cast_fu_1501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_82_fu_1492_p4),21));

        tmp_12_i_cast_fu_1426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_68_fu_1417_p4),21));

    tmp_13_fu_985_p3 <= 
        neg_ti1_fu_979_p2 when (ap_reg_pp0_iter4_tmp_34_reg_1887(0) = '1') else 
        tmp_11_fu_969_p1;
    tmp_14_fu_992_p3 <= (tmp_13_fu_985_p3 & ap_const_lv8_0);
    tmp_14_i1_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_reg_2069),32));
    tmp_14_i2_fu_1662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_reg_2108),32));
    tmp_14_i_fu_1584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_reg_2075),32));
        tmp_16_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_41_fu_1009_p4),22));

        tmp_17_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_53_reg_1970),22));

    tmp_18_fu_1039_p3 <= 
        neg_ti2_fu_1033_p2 when (ap_reg_pp0_iter4_tmp_39_reg_1898(0) = '1') else 
        tmp_17_fu_1023_p1;
    tmp_1_1_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_356_p2),64));
    tmp_1_2_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_367_p2),64));
    tmp_20_fu_1026_p3 <= 
        tmp_16_fu_1019_p1 when (ap_reg_pp0_iter4_tmp_39_reg_1898(0) = '1') else 
        tmp_17_fu_1023_p1;
    tmp_22_fu_1046_p3 <= (tmp_18_fu_1039_p3 & ap_const_lv8_0);
    tmp_23_fu_1358_p4 <= ap_reg_pp0_iter5_tmp_2_i1_reg_1948(20 downto 1);
    tmp_24_fu_1430_p3 <= 
        tmp_11_i_fu_1411_p2 when (tmp_66_fu_1401_p3(0) = '1') else 
        tmp_12_i_cast_fu_1426_p1;
    tmp_25_fu_1379_p3 <= (tmp_5_fu_1371_p3 & ap_const_lv8_0);
        tmp_26_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter2_r_V_4_reg_1840),17));

    tmp_27_fu_767_p1 <= mul1_fu_761_p2(41 - 1 downto 0);
        tmp_28_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_72_fu_1084_p4),20));

        tmp_29_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_73_reg_1987),20));

    tmp_2_1_fu_1587_p2 <= "1" when (signed(tmp_14_i_fu_1584_p1) < signed(minimumDistance_2_fu_1576_p3)) else "0";
    tmp_2_2_fu_1665_p2 <= "1" when (signed(tmp_14_i2_fu_1662_p1) < signed(minimumDistance_2_1_reg_2101)) else "0";
    tmp_2_fu_1557_p2 <= "1" when (signed(tmp_14_i1_fu_1554_p1) < signed(ap_phi_mux_minimumDistance_phi_fu_308_p6)) else "0";
    tmp_2_i1_fu_744_p2 <= std_logic_vector(signed(p_shl_i1_cast_fu_740_p1) - signed(result_cast_fu_724_p1));
    tmp_2_i2_fu_1222_p2 <= std_logic_vector(signed(p_shl_i2_cast_fu_1218_p1) - signed(result_6_cast_fu_1202_p1));
    tmp_2_i_fu_829_p2 <= std_logic_vector(signed(p_shl_i_cast_fu_825_p1) - signed(result_3_cast_fu_809_p1));
    tmp_30_fu_1114_p3 <= 
        neg_ti3_fu_1108_p2 when (ap_reg_pp0_iter4_tmp_71_reg_1909(0) = '1') else 
        tmp_29_fu_1098_p1;
    tmp_32_fu_1168_p3 <= 
        neg_ti4_fu_1162_p2 when (ap_reg_pp0_iter4_tmp_74_reg_1920(0) = '1') else 
        tmp_43_fu_1152_p1;
    tmp_35_fu_955_p4 <= neg_mul1_fu_950_p2(40 downto 23);
    tmp_36_fu_1101_p3 <= 
        tmp_28_fu_1094_p1 when (ap_reg_pp0_iter4_tmp_71_reg_1909(0) = '1') else 
        tmp_29_fu_1098_p1;
    tmp_38_fu_1121_p3 <= (tmp_30_fu_1114_p3 & ap_const_lv8_0);
    tmp_3_fu_1724_p2 <= "1" when (lhs_V_fu_1720_p1 = rhs_V_3_fu_1715_p2) else "0";
        tmp_40_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_75_fu_1138_p4),22));

    tmp_41_fu_1009_p4 <= neg_mul2_fu_1004_p2(44 downto 27);
        tmp_42_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter2_r_V_7_reg_1856),17));

        tmp_43_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_76_reg_1997),22));

    tmp_44_fu_1263_p3 <= 
        neg_ti8_fu_1257_p2 when (ap_reg_pp0_iter4_tmp_85_reg_1931(0) = '1') else 
        tmp_52_fu_1247_p1;
    tmp_46_fu_1317_p3 <= 
        neg_ti_fu_1311_p2 when (ap_reg_pp0_iter4_tmp_88_reg_1942(0) = '1') else 
        tmp_57_fu_1301_p1;
    tmp_48_fu_1155_p3 <= 
        tmp_40_fu_1148_p1 when (ap_reg_pp0_iter4_tmp_74_reg_1920(0) = '1') else 
        tmp_43_fu_1152_p1;
    tmp_49_fu_1175_p3 <= (tmp_32_fu_1168_p3 & ap_const_lv8_0);
    tmp_4_1_fu_1593_p2 <= "1" when (unsigned(tmp_33_reg_2075) < unsigned(ap_const_lv12_13B)) else "0";
    tmp_4_2_fu_1670_p2 <= "1" when (unsigned(tmp_47_reg_2108) < unsigned(ap_const_lv12_13B)) else "0";
    tmp_4_fu_1563_p2 <= "1" when (unsigned(tmp_19_reg_2069) < unsigned(ap_const_lv12_13B)) else "0";
    tmp_50_fu_1505_p3 <= 
        tmp_11_i2_fu_1486_p2 when (tmp_80_fu_1460_p3(0) = '1') else 
        tmp_12_i2_cast_fu_1501_p1;
        tmp_51_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_86_fu_1233_p4),20));

        tmp_52_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_87_reg_2007),20));

    tmp_54_fu_1250_p3 <= 
        tmp_51_fu_1243_p1 when (ap_reg_pp0_iter4_tmp_85_reg_1931(0) = '1') else 
        tmp_52_fu_1247_p1;
    tmp_55_fu_1270_p3 <= (tmp_44_fu_1263_p3 & ap_const_lv8_0);
        tmp_56_fu_1297_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_89_fu_1287_p4),22));

        tmp_57_fu_1301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_90_reg_2017),22));

    tmp_58_fu_1304_p3 <= 
        tmp_56_fu_1297_p1 when (ap_reg_pp0_iter4_tmp_88_reg_1942(0) = '1') else 
        tmp_57_fu_1301_p1;
    tmp_59_fu_1324_p3 <= (tmp_46_fu_1317_p3 & ap_const_lv8_0);
    tmp_5_fu_1371_p3 <= 
        tmp_11_i1_fu_1352_p2 when (tmp_10_fu_1342_p3(0) = '1') else 
        tmp_12_i1_cast_fu_1367_p1;
    tmp_5_i1_fu_750_p3 <= (result_s_reg_1882 & ap_const_lv3_0);
    tmp_5_i2_fu_885_p3 <= (result_6_reg_1926 & ap_const_lv3_0);
    tmp_5_i_fu_835_p3 <= (result_3_reg_1904 & ap_const_lv3_0);
    tmp_65_fu_813_p1 <= result_1_fu_803_p2(17 - 1 downto 0);
    tmp_66_fu_1401_p3 <= ap_reg_pp0_iter5_tmp_2_i_reg_1975(20 downto 20);
    tmp_68_fu_1417_p4 <= ap_reg_pp0_iter5_tmp_2_i_reg_1975(20 downto 1);
    tmp_69_fu_1438_p3 <= (tmp_24_fu_1430_p3 & ap_const_lv8_0);
        tmp_6_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(minimumDistanceIndex_8_fu_1690_p3),64));

    tmp_70_fu_852_p1 <= mul4_fu_846_p2(41 - 1 downto 0);
    tmp_72_fu_1084_p4 <= neg_mul4_fu_1079_p2(40 downto 23);
    tmp_75_fu_1138_p4 <= neg_mul5_fu_1133_p2(44 downto 27);
    tmp_79_fu_1206_p1 <= result_2_fu_1196_p2(17 - 1 downto 0);
        tmp_7_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter2_r_V_1_reg_1824),17));

    tmp_80_fu_1460_p3 <= tmp_2_i2_reg_2042(20 downto 20);
    tmp_81_fu_1472_p4 <= p_neg_i2_fu_1467_p2(20 downto 1);
    tmp_82_fu_1492_p4 <= tmp_2_i2_reg_2042(20 downto 1);
    tmp_83_fu_1513_p3 <= (tmp_50_fu_1505_p3 & ap_const_lv8_0);
    tmp_84_fu_902_p1 <= mul2_fu_896_p2(41 - 1 downto 0);
    tmp_86_fu_1233_p4 <= neg_mul3_fu_1228_p2(40 downto 23);
    tmp_89_fu_1287_p4 <= neg_mul_fu_1282_p2(44 downto 27);
        tmp_8_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_35_fu_955_p4),20));

    tmp_91_fu_384_p1 <= i_2_fu_378_p2(2 - 1 downto 0);
    tmp_9_fu_728_p1 <= result_fu_718_p2(17 - 1 downto 0);
    tmp_fu_1710_p2 <= "1" when (signed(minimumDistanceIndex_8_reg_2114) < signed(ap_const_lv32_5)) else "0";
    tmp_s_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_minimumDistanceIndex_9_phi_fu_240_p6),64));
end behav;
