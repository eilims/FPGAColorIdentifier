// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_PIXEL_COLOR_LOO.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_PIXEL_COLOR_LOO::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_PIXEL_COLOR_LOO::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_PIXEL_COLOR_LOO::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_PIXEL_COLOR_LOO::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_PIXEL_COLOR_LOO::ap_ST_fsm_state19 = "100";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_PIXEL_COLOR_LOO::ap_const_boolean_1 = true;
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_1 = "1";
const bool Loop_PIXEL_COLOR_LOO::ap_const_boolean_0 = false;
const sc_lv<1> Loop_PIXEL_COLOR_LOO::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_PIXEL_COLOR_LOO::ap_const_lv1_1 = "1";
const sc_lv<3> Loop_PIXEL_COLOR_LOO::ap_const_lv3_0 = "000";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_10 = "10000";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_F = "1111";
const sc_lv<3> Loop_PIXEL_COLOR_LOO::ap_const_lv3_6 = "110";
const sc_lv<3> Loop_PIXEL_COLOR_LOO::ap_const_lv3_1 = "1";
const sc_lv<9> Loop_PIXEL_COLOR_LOO::ap_const_lv9_FF = "11111111";
const sc_lv<9> Loop_PIXEL_COLOR_LOO::ap_const_lv9_0 = "000000000";
const sc_lv<10> Loop_PIXEL_COLOR_LOO::ap_const_lv10_0 = "0000000000";
const sc_lv<8> Loop_PIXEL_COLOR_LOO::ap_const_lv8_0 = "00000000";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_13 = "10011";
const sc_lv<32> Loop_PIXEL_COLOR_LOO::ap_const_lv32_2 = "10";

Loop_PIXEL_COLOR_LOO::Loop_PIXEL_COLOR_LOO(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_color_array_U = new Loop_PIXEL_COLOR_bkb("p_color_array_U");
    p_color_array_U->clk(ap_clk);
    p_color_array_U->reset(ap_rst);
    p_color_array_U->address0(p_color_array_address0);
    p_color_array_U->ce0(p_color_array_ce0);
    p_color_array_U->q0(p_color_array_q0);
    grp_fxp_sqrt_fu_126 = new fxp_sqrt("grp_fxp_sqrt_fu_126");
    grp_fxp_sqrt_fu_126->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_126->ap_rst(ap_rst);
    grp_fxp_sqrt_fu_126->in_val_V_read(grp_fxp_sqrt_fu_126_in_val_V_read);
    grp_fxp_sqrt_fu_126->ap_return(grp_fxp_sqrt_fu_126_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_i_i_fu_167_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );

    SC_METHOD(thread_ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4);
    sensitive << ( minimumDistanceIndex_reg_102 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_i_i_reg_394 );
    sensitive << ( i_reg_398 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_return);
    sensitive << ( minimumDistanceIndex_1_reg_90 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_colorBlue_cast_i_fu_222_p1);
    sensitive << ( colorBlue_reg_413 );

    SC_METHOD(thread_colorBlue_fu_210_p1);
    sensitive << ( p_color_array_q0 );

    SC_METHOD(thread_colorGreen_cast_i_fu_219_p1);
    sensitive << ( colorGreen_reg_408 );

    SC_METHOD(thread_colorRed_cast_i_cast_fu_192_p3);
    sensitive << ( tmp_75_fu_184_p3 );

    SC_METHOD(thread_distance_0_minimumDi_fu_371_p3);
    sensitive << ( minimumDistance_0_i_s_reg_114 );
    sensitive << ( minimumDistance_fu_354_p1 );
    sensitive << ( tmp_1_i_fu_357_p2 );

    SC_METHOD(thread_exitcond_i_i_fu_167_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_126_in_val_V_read);
    sensitive << ( ap_reg_pp0_iter2_exitcond_i_i_reg_394 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( p_Val2_2_cast_i_fu_326_p1 );
    sensitive << ( p_Val2_5_cast_i_fu_330_p1 );

    SC_METHOD(thread_i_0_minimumDistanceI_fu_363_p3);
    sensitive << ( minimumDistanceIndex_1_reg_90 );
    sensitive << ( tmp_1_i_fu_357_p2 );
    sensitive << ( minimumDistanceIndex_2_fu_350_p1 );

    SC_METHOD(thread_i_fu_173_p2);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4 );

    SC_METHOD(thread_minimumDistanceIndex_2_fu_350_p1);
    sensitive << ( ap_reg_pp0_iter15_minimumDistanceIndex_reg_102 );

    SC_METHOD(thread_minimumDistance_fu_354_p1);
    sensitive << ( tmp_2_reg_439 );

    SC_METHOD(thread_number_assign_1_fu_246_p2);
    sensitive << ( pixelGreen_cast_i_reg_384 );
    sensitive << ( colorGreen_cast_i_fu_219_p1 );

    SC_METHOD(thread_number_assign_2_fu_273_p2);
    sensitive << ( pixelBlue_cast_i_reg_389 );
    sensitive << ( colorBlue_cast_i_fu_222_p1 );

    SC_METHOD(thread_number_assign_fu_214_p2);
    sensitive << ( pixelRed_cast_i_reg_379 );
    sensitive << ( colorRed_cast_i_cast_fu_192_p3 );

    SC_METHOD(thread_p_Val2_1_cast_i_fu_269_p1);
    sensitive << ( p_Val2_1_fu_261_p3 );

    SC_METHOD(thread_p_Val2_1_fu_261_p3);
    sensitive << ( result_11_i_fu_255_p2 );

    SC_METHOD(thread_p_Val2_2_cast_i_fu_326_p1);
    sensitive << ( p_Val2_2_fu_320_p2 );

    SC_METHOD(thread_p_Val2_2_fu_320_p2);
    sensitive << ( p_shl_cast_i_fu_305_p1 );
    sensitive << ( p_shl9_cast_i_fu_316_p1 );

    SC_METHOD(thread_p_Val2_5_cast_i_fu_330_p1);
    sensitive << ( p_Val2_5_i_reg_429 );

    SC_METHOD(thread_p_Val2_5_i_fu_292_p2);
    sensitive << ( p_Val2_cast_i_fu_242_p1 );
    sensitive << ( p_Val2_1_cast_i_fu_269_p1 );

    SC_METHOD(thread_p_Val2_cast_i_fu_242_p1);
    sensitive << ( p_Val2_s_fu_234_p3 );

    SC_METHOD(thread_p_Val2_s_fu_234_p3);
    sensitive << ( result3_i_fu_228_p2 );

    SC_METHOD(thread_p_color_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_i_fu_179_p1 );

    SC_METHOD(thread_p_color_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_p_shl9_cast_i_fu_316_p1);
    sensitive << ( p_shl9_i_fu_309_p3 );

    SC_METHOD(thread_p_shl9_i_fu_309_p3);
    sensitive << ( tmp_79_reg_423 );

    SC_METHOD(thread_p_shl_cast_i_fu_305_p1);
    sensitive << ( p_shl_i_fu_298_p3 );

    SC_METHOD(thread_p_shl_i_fu_298_p3);
    sensitive << ( tmp_79_reg_423 );

    SC_METHOD(thread_pixelBlue_cast_i_fu_163_p1);
    sensitive << ( pixelBlue_fu_159_p1 );

    SC_METHOD(thread_pixelBlue_fu_159_p1);
    sensitive << ( pixel );

    SC_METHOD(thread_pixelGreen_cast_i_fu_155_p1);
    sensitive << ( pixelGreen_fu_145_p4 );

    SC_METHOD(thread_pixelGreen_fu_145_p4);
    sensitive << ( pixel );

    SC_METHOD(thread_pixelRed_cast_i_fu_141_p1);
    sensitive << ( pixelRed_fu_131_p4 );

    SC_METHOD(thread_pixelRed_fu_131_p4);
    sensitive << ( pixel );

    SC_METHOD(thread_result3_i_fu_228_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_fu_225_p1 );

    SC_METHOD(thread_result3_i_fu_228_p1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_fu_225_p1 );

    SC_METHOD(thread_result3_i_fu_228_p2);
    sensitive << ( result3_i_fu_228_p0 );
    sensitive << ( result3_i_fu_228_p1 );

    SC_METHOD(thread_result_11_i_fu_255_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_1_fu_251_p1 );

    SC_METHOD(thread_result_11_i_fu_255_p1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_1_fu_251_p1 );

    SC_METHOD(thread_result_11_i_fu_255_p2);
    sensitive << ( result_11_i_fu_255_p0 );
    sensitive << ( result_11_i_fu_255_p1 );

    SC_METHOD(thread_tmp_1_fu_251_p1);
    sensitive << ( number_assign_1_fu_246_p2 );

    SC_METHOD(thread_tmp_1_i_fu_357_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( minimumDistance_0_i_s_reg_114 );
    sensitive << ( ap_reg_pp0_iter15_exitcond_i_i_reg_394 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( minimumDistance_fu_354_p1 );

    SC_METHOD(thread_tmp_75_fu_184_p3);
    sensitive << ( p_color_array_q0 );

    SC_METHOD(thread_tmp_79_fu_286_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_2_fu_273_p2 );

    SC_METHOD(thread_tmp_79_fu_286_p1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_2_fu_273_p2 );

    SC_METHOD(thread_tmp_79_fu_286_p2);
    sensitive << ( tmp_79_fu_286_p0 );
    sensitive << ( tmp_79_fu_286_p1 );

    SC_METHOD(thread_tmp_i_fu_179_p1);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4 );

    SC_METHOD(thread_tmp_s_fu_225_p1);
    sensitive << ( number_assign_reg_418 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_i_i_fu_167_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter15 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_PIXEL_COLOR_LOO_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, pixel, "(port)pixel");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_color_array_address0, "p_color_array_address0");
    sc_trace(mVcdFile, p_color_array_ce0, "p_color_array_ce0");
    sc_trace(mVcdFile, p_color_array_q0, "p_color_array_q0");
    sc_trace(mVcdFile, minimumDistanceIndex_1_reg_90, "minimumDistanceIndex_1_reg_90");
    sc_trace(mVcdFile, minimumDistanceIndex_reg_102, "minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter1_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter2_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter3_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter4_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter5_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter6_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter7_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter8_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter9_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter10_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter11_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter12_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter13_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter14_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_minimumDistanceIndex_reg_102, "ap_reg_pp0_iter15_minimumDistanceIndex_reg_102");
    sc_trace(mVcdFile, minimumDistance_0_i_s_reg_114, "minimumDistance_0_i_s_reg_114");
    sc_trace(mVcdFile, pixelRed_cast_i_fu_141_p1, "pixelRed_cast_i_fu_141_p1");
    sc_trace(mVcdFile, pixelRed_cast_i_reg_379, "pixelRed_cast_i_reg_379");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, pixelGreen_cast_i_fu_155_p1, "pixelGreen_cast_i_fu_155_p1");
    sc_trace(mVcdFile, pixelGreen_cast_i_reg_384, "pixelGreen_cast_i_reg_384");
    sc_trace(mVcdFile, pixelBlue_cast_i_fu_163_p1, "pixelBlue_cast_i_fu_163_p1");
    sc_trace(mVcdFile, pixelBlue_cast_i_reg_389, "pixelBlue_cast_i_reg_389");
    sc_trace(mVcdFile, exitcond_i_i_fu_167_p2, "exitcond_i_i_fu_167_p2");
    sc_trace(mVcdFile, exitcond_i_i_reg_394, "exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_i_i_reg_394, "ap_reg_pp0_iter1_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_i_i_reg_394, "ap_reg_pp0_iter2_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_i_i_reg_394, "ap_reg_pp0_iter3_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_i_i_reg_394, "ap_reg_pp0_iter4_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_i_i_reg_394, "ap_reg_pp0_iter5_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_i_i_reg_394, "ap_reg_pp0_iter6_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_i_i_reg_394, "ap_reg_pp0_iter7_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_i_i_reg_394, "ap_reg_pp0_iter8_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_exitcond_i_i_reg_394, "ap_reg_pp0_iter9_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_exitcond_i_i_reg_394, "ap_reg_pp0_iter10_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_exitcond_i_i_reg_394, "ap_reg_pp0_iter11_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_exitcond_i_i_reg_394, "ap_reg_pp0_iter12_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_exitcond_i_i_reg_394, "ap_reg_pp0_iter13_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_exitcond_i_i_reg_394, "ap_reg_pp0_iter14_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_exitcond_i_i_reg_394, "ap_reg_pp0_iter15_exitcond_i_i_reg_394");
    sc_trace(mVcdFile, i_fu_173_p2, "i_fu_173_p2");
    sc_trace(mVcdFile, i_reg_398, "i_reg_398");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, colorGreen_reg_408, "colorGreen_reg_408");
    sc_trace(mVcdFile, colorBlue_fu_210_p1, "colorBlue_fu_210_p1");
    sc_trace(mVcdFile, colorBlue_reg_413, "colorBlue_reg_413");
    sc_trace(mVcdFile, number_assign_fu_214_p2, "number_assign_fu_214_p2");
    sc_trace(mVcdFile, number_assign_reg_418, "number_assign_reg_418");
    sc_trace(mVcdFile, tmp_79_fu_286_p2, "tmp_79_fu_286_p2");
    sc_trace(mVcdFile, tmp_79_reg_423, "tmp_79_reg_423");
    sc_trace(mVcdFile, p_Val2_5_i_fu_292_p2, "p_Val2_5_i_fu_292_p2");
    sc_trace(mVcdFile, p_Val2_5_i_reg_429, "p_Val2_5_i_reg_429");
    sc_trace(mVcdFile, tmp_2_reg_439, "tmp_2_reg_439");
    sc_trace(mVcdFile, i_0_minimumDistanceI_fu_363_p3, "i_0_minimumDistanceI_fu_363_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, distance_0_minimumDi_fu_371_p3, "distance_0_minimumDi_fu_371_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_126_in_val_V_read, "grp_fxp_sqrt_fu_126_in_val_V_read");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_126_ap_return, "grp_fxp_sqrt_fu_126_ap_return");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4, "ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_i_fu_179_p1, "tmp_i_fu_179_p1");
    sc_trace(mVcdFile, pixelRed_fu_131_p4, "pixelRed_fu_131_p4");
    sc_trace(mVcdFile, pixelGreen_fu_145_p4, "pixelGreen_fu_145_p4");
    sc_trace(mVcdFile, pixelBlue_fu_159_p1, "pixelBlue_fu_159_p1");
    sc_trace(mVcdFile, tmp_75_fu_184_p3, "tmp_75_fu_184_p3");
    sc_trace(mVcdFile, colorRed_cast_i_cast_fu_192_p3, "colorRed_cast_i_cast_fu_192_p3");
    sc_trace(mVcdFile, result3_i_fu_228_p0, "result3_i_fu_228_p0");
    sc_trace(mVcdFile, tmp_s_fu_225_p1, "tmp_s_fu_225_p1");
    sc_trace(mVcdFile, result3_i_fu_228_p1, "result3_i_fu_228_p1");
    sc_trace(mVcdFile, result3_i_fu_228_p2, "result3_i_fu_228_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_234_p3, "p_Val2_s_fu_234_p3");
    sc_trace(mVcdFile, colorGreen_cast_i_fu_219_p1, "colorGreen_cast_i_fu_219_p1");
    sc_trace(mVcdFile, number_assign_1_fu_246_p2, "number_assign_1_fu_246_p2");
    sc_trace(mVcdFile, result_11_i_fu_255_p0, "result_11_i_fu_255_p0");
    sc_trace(mVcdFile, tmp_1_fu_251_p1, "tmp_1_fu_251_p1");
    sc_trace(mVcdFile, result_11_i_fu_255_p1, "result_11_i_fu_255_p1");
    sc_trace(mVcdFile, result_11_i_fu_255_p2, "result_11_i_fu_255_p2");
    sc_trace(mVcdFile, p_Val2_1_fu_261_p3, "p_Val2_1_fu_261_p3");
    sc_trace(mVcdFile, colorBlue_cast_i_fu_222_p1, "colorBlue_cast_i_fu_222_p1");
    sc_trace(mVcdFile, number_assign_2_fu_273_p2, "number_assign_2_fu_273_p2");
    sc_trace(mVcdFile, tmp_79_fu_286_p0, "tmp_79_fu_286_p0");
    sc_trace(mVcdFile, tmp_79_fu_286_p1, "tmp_79_fu_286_p1");
    sc_trace(mVcdFile, p_Val2_cast_i_fu_242_p1, "p_Val2_cast_i_fu_242_p1");
    sc_trace(mVcdFile, p_Val2_1_cast_i_fu_269_p1, "p_Val2_1_cast_i_fu_269_p1");
    sc_trace(mVcdFile, p_shl_i_fu_298_p3, "p_shl_i_fu_298_p3");
    sc_trace(mVcdFile, p_shl9_i_fu_309_p3, "p_shl9_i_fu_309_p3");
    sc_trace(mVcdFile, p_shl_cast_i_fu_305_p1, "p_shl_cast_i_fu_305_p1");
    sc_trace(mVcdFile, p_shl9_cast_i_fu_316_p1, "p_shl9_cast_i_fu_316_p1");
    sc_trace(mVcdFile, p_Val2_2_fu_320_p2, "p_Val2_2_fu_320_p2");
    sc_trace(mVcdFile, p_Val2_2_cast_i_fu_326_p1, "p_Val2_2_cast_i_fu_326_p1");
    sc_trace(mVcdFile, p_Val2_5_cast_i_fu_330_p1, "p_Val2_5_cast_i_fu_330_p1");
    sc_trace(mVcdFile, minimumDistance_fu_354_p1, "minimumDistance_fu_354_p1");
    sc_trace(mVcdFile, tmp_1_i_fu_357_p2, "tmp_1_i_fu_357_p2");
    sc_trace(mVcdFile, minimumDistanceIndex_2_fu_350_p1, "minimumDistanceIndex_2_fu_350_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_PIXEL_COLOR_LOO::~Loop_PIXEL_COLOR_LOO() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete p_color_array_U;
    delete grp_fxp_sqrt_fu_126;
}

void Loop_PIXEL_COLOR_LOO::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter16 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter15_exitcond_i_i_reg_394.read(), ap_const_lv1_0))) {
        minimumDistanceIndex_1_reg_90 = i_0_minimumDistanceI_fu_363_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        minimumDistanceIndex_1_reg_90 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_i_i_reg_394.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        minimumDistanceIndex_reg_102 = i_reg_398.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        minimumDistanceIndex_reg_102 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter15_exitcond_i_i_reg_394.read(), ap_const_lv1_0))) {
        minimumDistance_0_i_s_reg_114 = distance_0_minimumDi_fu_371_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        minimumDistance_0_i_s_reg_114 = ap_const_lv32_7FFFFFFF;
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter10_exitcond_i_i_reg_394 = ap_reg_pp0_iter9_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter10_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter9_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter11_exitcond_i_i_reg_394 = ap_reg_pp0_iter10_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter11_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter10_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter12_exitcond_i_i_reg_394 = ap_reg_pp0_iter11_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter12_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter11_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter13_exitcond_i_i_reg_394 = ap_reg_pp0_iter12_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter13_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter12_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter14_exitcond_i_i_reg_394 = ap_reg_pp0_iter13_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter14_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter13_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter15_exitcond_i_i_reg_394 = ap_reg_pp0_iter14_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter15_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter14_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter2_exitcond_i_i_reg_394 = ap_reg_pp0_iter1_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter2_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter1_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter3_exitcond_i_i_reg_394 = ap_reg_pp0_iter2_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter3_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter2_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter4_exitcond_i_i_reg_394 = ap_reg_pp0_iter3_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter4_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter3_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter5_exitcond_i_i_reg_394 = ap_reg_pp0_iter4_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter5_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter4_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter6_exitcond_i_i_reg_394 = ap_reg_pp0_iter5_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter6_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter5_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter7_exitcond_i_i_reg_394 = ap_reg_pp0_iter6_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter7_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter6_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter8_exitcond_i_i_reg_394 = ap_reg_pp0_iter7_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter8_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter7_minimumDistanceIndex_reg_102.read();
        ap_reg_pp0_iter9_exitcond_i_i_reg_394 = ap_reg_pp0_iter8_exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter9_minimumDistanceIndex_reg_102 = ap_reg_pp0_iter8_minimumDistanceIndex_reg_102.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_i_i_reg_394 = exitcond_i_i_reg_394.read();
        ap_reg_pp0_iter1_minimumDistanceIndex_reg_102 = minimumDistanceIndex_reg_102.read();
        exitcond_i_i_reg_394 = exitcond_i_i_fu_167_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_i_i_reg_394.read(), ap_const_lv1_0))) {
        colorBlue_reg_413 = colorBlue_fu_210_p1.read();
        colorGreen_reg_408 = p_color_array_q0.read().range(15, 8);
        number_assign_reg_418 = number_assign_fu_214_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_398 = i_fu_173_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_i_i_reg_394.read(), ap_const_lv1_0))) {
        p_Val2_5_i_reg_429 = p_Val2_5_i_fu_292_p2.read();
        tmp_79_reg_423 = tmp_79_fu_286_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        pixelBlue_cast_i_reg_389 = pixelBlue_cast_i_fu_163_p1.read();
        pixelGreen_cast_i_reg_384 = pixelGreen_cast_i_fu_155_p1.read();
        pixelRed_cast_i_reg_379 = pixelRed_cast_i_fu_141_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter14_exitcond_i_i_reg_394.read(), ap_const_lv1_0))) {
        tmp_2_reg_439 = grp_fxp_sqrt_fu_126_ap_return.read().range(19, 8);
    }
}

void Loop_PIXEL_COLOR_LOO::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_PIXEL_COLOR_LOO::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_PIXEL_COLOR_LOO::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[2];
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_i_i_fu_167_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_PIXEL_COLOR_LOO::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_PIXEL_COLOR_LOO::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_PIXEL_COLOR_LOO::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_PIXEL_COLOR_LOO::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_PIXEL_COLOR_LOO::thread_ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_i_i_reg_394.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4 = i_reg_398.read();
    } else {
        ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4 = minimumDistanceIndex_reg_102.read();
    }
}

void Loop_PIXEL_COLOR_LOO::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_PIXEL_COLOR_LOO::thread_ap_return() {
    ap_return = minimumDistanceIndex_1_reg_90.read();
}

void Loop_PIXEL_COLOR_LOO::thread_colorBlue_cast_i_fu_222_p1() {
    colorBlue_cast_i_fu_222_p1 = esl_zext<9,8>(colorBlue_reg_413.read());
}

void Loop_PIXEL_COLOR_LOO::thread_colorBlue_fu_210_p1() {
    colorBlue_fu_210_p1 = p_color_array_q0.read().range(8-1, 0);
}

void Loop_PIXEL_COLOR_LOO::thread_colorGreen_cast_i_fu_219_p1() {
    colorGreen_cast_i_fu_219_p1 = esl_zext<9,8>(colorGreen_reg_408.read());
}

void Loop_PIXEL_COLOR_LOO::thread_colorRed_cast_i_cast_fu_192_p3() {
    colorRed_cast_i_cast_fu_192_p3 = (!tmp_75_fu_184_p3.read()[0].is_01())? sc_lv<9>(): ((tmp_75_fu_184_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void Loop_PIXEL_COLOR_LOO::thread_distance_0_minimumDi_fu_371_p3() {
    distance_0_minimumDi_fu_371_p3 = (!tmp_1_i_fu_357_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_i_fu_357_p2.read()[0].to_bool())? minimumDistance_fu_354_p1.read(): minimumDistance_0_i_s_reg_114.read());
}

void Loop_PIXEL_COLOR_LOO::thread_exitcond_i_i_fu_167_p2() {
    exitcond_i_i_fu_167_p2 = (!ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4.read() == ap_const_lv3_6);
}

void Loop_PIXEL_COLOR_LOO::thread_grp_fxp_sqrt_fu_126_in_val_V_read() {
    grp_fxp_sqrt_fu_126_in_val_V_read = (!p_Val2_2_cast_i_fu_326_p1.read().is_01() || !p_Val2_5_cast_i_fu_330_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(p_Val2_2_cast_i_fu_326_p1.read()) + sc_bigint<29>(p_Val2_5_cast_i_fu_330_p1.read()));
}

void Loop_PIXEL_COLOR_LOO::thread_i_0_minimumDistanceI_fu_363_p3() {
    i_0_minimumDistanceI_fu_363_p3 = (!tmp_1_i_fu_357_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_i_fu_357_p2.read()[0].to_bool())? minimumDistanceIndex_2_fu_350_p1.read(): minimumDistanceIndex_1_reg_90.read());
}

void Loop_PIXEL_COLOR_LOO::thread_i_fu_173_p2() {
    i_fu_173_p2 = (!ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Loop_PIXEL_COLOR_LOO::thread_minimumDistanceIndex_2_fu_350_p1() {
    minimumDistanceIndex_2_fu_350_p1 = esl_zext<32,3>(ap_reg_pp0_iter15_minimumDistanceIndex_reg_102.read());
}

void Loop_PIXEL_COLOR_LOO::thread_minimumDistance_fu_354_p1() {
    minimumDistance_fu_354_p1 = esl_zext<32,12>(tmp_2_reg_439.read());
}

void Loop_PIXEL_COLOR_LOO::thread_number_assign_1_fu_246_p2() {
    number_assign_1_fu_246_p2 = (!pixelGreen_cast_i_reg_384.read().is_01() || !colorGreen_cast_i_fu_219_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelGreen_cast_i_reg_384.read()) - sc_biguint<9>(colorGreen_cast_i_fu_219_p1.read()));
}

void Loop_PIXEL_COLOR_LOO::thread_number_assign_2_fu_273_p2() {
    number_assign_2_fu_273_p2 = (!pixelBlue_cast_i_reg_389.read().is_01() || !colorBlue_cast_i_fu_222_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelBlue_cast_i_reg_389.read()) - sc_biguint<9>(colorBlue_cast_i_fu_222_p1.read()));
}

void Loop_PIXEL_COLOR_LOO::thread_number_assign_fu_214_p2() {
    number_assign_fu_214_p2 = (!pixelRed_cast_i_reg_379.read().is_01() || !colorRed_cast_i_cast_fu_192_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelRed_cast_i_reg_379.read()) - sc_biguint<9>(colorRed_cast_i_cast_fu_192_p3.read()));
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_1_cast_i_fu_269_p1() {
    p_Val2_1_cast_i_fu_269_p1 = esl_sext<28,27>(p_Val2_1_fu_261_p3.read());
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_1_fu_261_p3() {
    p_Val2_1_fu_261_p3 = esl_concat<17,10>(result_11_i_fu_255_p2.read(), ap_const_lv10_0);
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_2_cast_i_fu_326_p1() {
    p_Val2_2_cast_i_fu_326_p1 = esl_sext<29,28>(p_Val2_2_fu_320_p2.read());
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_2_fu_320_p2() {
    p_Val2_2_fu_320_p2 = (!p_shl_cast_i_fu_305_p1.read().is_01() || !p_shl9_cast_i_fu_316_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(p_shl_cast_i_fu_305_p1.read()) - sc_bigint<28>(p_shl9_cast_i_fu_316_p1.read()));
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_5_cast_i_fu_330_p1() {
    p_Val2_5_cast_i_fu_330_p1 = esl_sext<29,28>(p_Val2_5_i_reg_429.read());
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_5_i_fu_292_p2() {
    p_Val2_5_i_fu_292_p2 = (!p_Val2_cast_i_fu_242_p1.read().is_01() || !p_Val2_1_cast_i_fu_269_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(p_Val2_cast_i_fu_242_p1.read()) + sc_bigint<28>(p_Val2_1_cast_i_fu_269_p1.read()));
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_cast_i_fu_242_p1() {
    p_Val2_cast_i_fu_242_p1 = esl_sext<28,26>(p_Val2_s_fu_234_p3.read());
}

void Loop_PIXEL_COLOR_LOO::thread_p_Val2_s_fu_234_p3() {
    p_Val2_s_fu_234_p3 = esl_concat<17,9>(result3_i_fu_228_p2.read(), ap_const_lv9_0);
}

void Loop_PIXEL_COLOR_LOO::thread_p_color_array_address0() {
    p_color_array_address0 =  (sc_lv<3>) (tmp_i_fu_179_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_p_color_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        p_color_array_ce0 = ap_const_logic_1;
    } else {
        p_color_array_ce0 = ap_const_logic_0;
    }
}

void Loop_PIXEL_COLOR_LOO::thread_p_shl9_cast_i_fu_316_p1() {
    p_shl9_cast_i_fu_316_p1 = esl_sext<28,25>(p_shl9_i_fu_309_p3.read());
}

void Loop_PIXEL_COLOR_LOO::thread_p_shl9_i_fu_309_p3() {
    p_shl9_i_fu_309_p3 = esl_concat<17,8>(tmp_79_reg_423.read(), ap_const_lv8_0);
}

void Loop_PIXEL_COLOR_LOO::thread_p_shl_cast_i_fu_305_p1() {
    p_shl_cast_i_fu_305_p1 = esl_sext<28,27>(p_shl_i_fu_298_p3.read());
}

void Loop_PIXEL_COLOR_LOO::thread_p_shl_i_fu_298_p3() {
    p_shl_i_fu_298_p3 = esl_concat<17,10>(tmp_79_reg_423.read(), ap_const_lv10_0);
}

void Loop_PIXEL_COLOR_LOO::thread_pixelBlue_cast_i_fu_163_p1() {
    pixelBlue_cast_i_fu_163_p1 = esl_zext<9,8>(pixelBlue_fu_159_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_pixelBlue_fu_159_p1() {
    pixelBlue_fu_159_p1 = pixel.read().range(8-1, 0);
}

void Loop_PIXEL_COLOR_LOO::thread_pixelGreen_cast_i_fu_155_p1() {
    pixelGreen_cast_i_fu_155_p1 = esl_zext<9,8>(pixelGreen_fu_145_p4.read());
}

void Loop_PIXEL_COLOR_LOO::thread_pixelGreen_fu_145_p4() {
    pixelGreen_fu_145_p4 = pixel.read().range(15, 8);
}

void Loop_PIXEL_COLOR_LOO::thread_pixelRed_cast_i_fu_141_p1() {
    pixelRed_cast_i_fu_141_p1 = esl_zext<9,8>(pixelRed_fu_131_p4.read());
}

void Loop_PIXEL_COLOR_LOO::thread_pixelRed_fu_131_p4() {
    pixelRed_fu_131_p4 = pixel.read().range(23, 16);
}

void Loop_PIXEL_COLOR_LOO::thread_result3_i_fu_228_p0() {
    result3_i_fu_228_p0 =  (sc_lv<9>) (tmp_s_fu_225_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_result3_i_fu_228_p1() {
    result3_i_fu_228_p1 =  (sc_lv<9>) (tmp_s_fu_225_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_result3_i_fu_228_p2() {
    result3_i_fu_228_p2 = (!result3_i_fu_228_p0.read().is_01() || !result3_i_fu_228_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(result3_i_fu_228_p0.read()) * sc_bigint<9>(result3_i_fu_228_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_result_11_i_fu_255_p0() {
    result_11_i_fu_255_p0 =  (sc_lv<9>) (tmp_1_fu_251_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_result_11_i_fu_255_p1() {
    result_11_i_fu_255_p1 =  (sc_lv<9>) (tmp_1_fu_251_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_result_11_i_fu_255_p2() {
    result_11_i_fu_255_p2 = (!result_11_i_fu_255_p0.read().is_01() || !result_11_i_fu_255_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(result_11_i_fu_255_p0.read()) * sc_bigint<9>(result_11_i_fu_255_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_1_fu_251_p1() {
    tmp_1_fu_251_p1 = esl_sext<17,9>(number_assign_1_fu_246_p2.read());
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_1_i_fu_357_p2() {
    tmp_1_i_fu_357_p2 = (!minimumDistance_fu_354_p1.read().is_01() || !minimumDistance_0_i_s_reg_114.read().is_01())? sc_lv<1>(): (sc_bigint<32>(minimumDistance_fu_354_p1.read()) < sc_bigint<32>(minimumDistance_0_i_s_reg_114.read()));
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_75_fu_184_p3() {
    tmp_75_fu_184_p3 = p_color_array_q0.read().range(16, 16);
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_79_fu_286_p0() {
    tmp_79_fu_286_p0 = number_assign_2_fu_273_p2.read();
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_79_fu_286_p1() {
    tmp_79_fu_286_p1 = number_assign_2_fu_273_p2.read();
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_79_fu_286_p2() {
    tmp_79_fu_286_p2 = (!tmp_79_fu_286_p0.read().is_01() || !tmp_79_fu_286_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(tmp_79_fu_286_p0.read()) * sc_bigint<9>(tmp_79_fu_286_p1.read());
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_i_fu_179_p1() {
    tmp_i_fu_179_p1 = esl_zext<64,3>(ap_phi_mux_minimumDistanceIndex_phi_fu_106_p4.read());
}

void Loop_PIXEL_COLOR_LOO::thread_tmp_s_fu_225_p1() {
    tmp_s_fu_225_p1 = esl_sext<17,9>(number_assign_reg_418.read());
}

void Loop_PIXEL_COLOR_LOO::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter15.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_i_i_fu_167_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter16.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter15.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_i_i_fu_167_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

