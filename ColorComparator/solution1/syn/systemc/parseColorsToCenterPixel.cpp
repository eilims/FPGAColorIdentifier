// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "parseColorsToCenterPixel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic parseColorsToCenterPixel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic parseColorsToCenterPixel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state1 = "1";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state2 = "10";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state21 = "1000";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state22 = "10000";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state23 = "100000";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state24 = "1000000";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state25 = "10000000";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_pp1_stage0 = "100000000";
const sc_lv<10> parseColorsToCenterPixel::ap_ST_fsm_state43 = "1000000000";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool parseColorsToCenterPixel::ap_const_boolean_1 = true;
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_2 = "10";
const bool parseColorsToCenterPixel::ap_const_boolean_0 = false;
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_1 = "1";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_4 = "100";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_5 = "101";
const sc_lv<1> parseColorsToCenterPixel::ap_const_lv1_0 = "0";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_3 = "11";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_6 = "110";
const sc_lv<1> parseColorsToCenterPixel::ap_const_lv1_1 = "1";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_7 = "111";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_8 = "1000";
const sc_lv<3> parseColorsToCenterPixel::ap_const_lv3_0 = "000";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<4> parseColorsToCenterPixel::ap_const_lv4_0 = "0000";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_1 = "1";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_4 = "100";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_2 = "10";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_7 = "111";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_3 = "11";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_5 = "101";
const sc_lv<64> parseColorsToCenterPixel::ap_const_lv64_6 = "110";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_20 = "100000";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_3F = "111111";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_F = "1111";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_27 = "100111";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_30 = "110000";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_37 = "110111";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_28 = "101000";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_2F = "101111";
const sc_lv<3> parseColorsToCenterPixel::ap_const_lv3_6 = "110";
const sc_lv<3> parseColorsToCenterPixel::ap_const_lv3_1 = "1";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_10 = "10000";
const sc_lv<9> parseColorsToCenterPixel::ap_const_lv9_FF = "11111111";
const sc_lv<9> parseColorsToCenterPixel::ap_const_lv9_0 = "000000000";
const sc_lv<10> parseColorsToCenterPixel::ap_const_lv10_0 = "0000000000";
const sc_lv<8> parseColorsToCenterPixel::ap_const_lv8_0 = "00000000";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_13 = "10011";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_40 = "1000000";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_5F = "1011111";
const sc_lv<4> parseColorsToCenterPixel::ap_const_lv4_8 = "1000";
const sc_lv<4> parseColorsToCenterPixel::ap_const_lv4_1 = "1";
const sc_lv<4> parseColorsToCenterPixel::ap_const_lv4_3 = "11";
const sc_lv<8> parseColorsToCenterPixel::ap_const_lv8_B = "1011";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_17 = "10111";
const sc_lv<5> parseColorsToCenterPixel::ap_const_lv5_0 = "00000";
const sc_lv<7> parseColorsToCenterPixel::ap_const_lv7_1F = "11111";
const sc_lv<7> parseColorsToCenterPixel::ap_const_lv7_5F = "1011111";
const sc_lv<96> parseColorsToCenterPixel::ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> parseColorsToCenterPixel::ap_const_lv32_9 = "1001";

parseColorsToCenterPixel::parseColorsToCenterPixel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_color_array_U = new parseColorsToCentbkb("p_color_array_U");
    p_color_array_U->clk(ap_clk);
    p_color_array_U->reset(ap_rst);
    p_color_array_U->address0(p_color_array_address0);
    p_color_array_U->ce0(p_color_array_ce0);
    p_color_array_U->q0(p_color_array_q0);
    tempArray_U = new parseColorsToCentcud("tempArray_U");
    tempArray_U->clk(ap_clk);
    tempArray_U->reset(ap_rst);
    tempArray_U->address0(tempArray_address0);
    tempArray_U->ce0(tempArray_ce0);
    tempArray_U->we0(tempArray_we0);
    tempArray_U->d0(tempArray_d0);
    tempArray_U->q0(tempArray_q0);
    tempArray_U->address1(tempArray_address1);
    tempArray_U->ce1(tempArray_ce1);
    tempArray_U->we1(tempArray_we1);
    tempArray_U->d1(tempArray_d1);
    grp_fxp_sqrt_fu_357 = new fxp_sqrt("grp_fxp_sqrt_fu_357");
    grp_fxp_sqrt_fu_357->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_357->ap_rst(ap_rst);
    grp_fxp_sqrt_fu_357->in_val_V_read(grp_fxp_sqrt_fu_357_in_val_V_read);
    grp_fxp_sqrt_fu_357->ap_return(grp_fxp_sqrt_fu_357_ap_return);
    grp_fxp_sqrt_fu_357->ap_ce(grp_fxp_sqrt_fu_357_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state26_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state27_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state28_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state29_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state30_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state31_pp1_stage0_iter5);

    SC_METHOD(thread_ap_block_state32_pp1_stage0_iter6);

    SC_METHOD(thread_ap_block_state33_pp1_stage0_iter7);

    SC_METHOD(thread_ap_block_state34_pp1_stage0_iter8);

    SC_METHOD(thread_ap_block_state35_pp1_stage0_iter9);

    SC_METHOD(thread_ap_block_state36_pp1_stage0_iter10);

    SC_METHOD(thread_ap_block_state37_pp1_stage0_iter11);

    SC_METHOD(thread_ap_block_state38_pp1_stage0_iter12);

    SC_METHOD(thread_ap_block_state39_pp1_stage0_iter13);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state40_pp1_stage0_iter14);

    SC_METHOD(thread_ap_block_state41_pp1_stage0_iter15);

    SC_METHOD(thread_ap_block_state42_pp1_stage0_iter16);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_i_fu_430_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state26);
    sensitive << ( exitcond_fu_703_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter15 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_enable_reg_pp1_iter6 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( ap_enable_reg_pp1_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter9 );
    sensitive << ( ap_enable_reg_pp1_iter10 );
    sensitive << ( ap_enable_reg_pp1_iter11 );
    sensitive << ( ap_enable_reg_pp1_iter12 );
    sensitive << ( ap_enable_reg_pp1_iter13 );
    sensitive << ( ap_enable_reg_pp1_iter14 );
    sensitive << ( ap_enable_reg_pp1_iter16 );

    SC_METHOD(thread_ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4);
    sensitive << ( minimumDistanceIndex_reg_311 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_i_reg_1087 );
    sensitive << ( i_1_reg_1091 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_colorBlue_1_fu_675_p1);
    sensitive << ( p_color_array_q0 );

    SC_METHOD(thread_colorBlue_cast_fu_699_p1);
    sensitive << ( colorBlue_1_fu_675_p1 );

    SC_METHOD(thread_colorBlue_fu_447_p1);
    sensitive << ( p_color_array_q0 );

    SC_METHOD(thread_colorBlue_i_cast_fu_475_p1);
    sensitive << ( colorBlue_reg_1101 );

    SC_METHOD(thread_colorGreen_cast_fu_695_p1);
    sensitive << ( grp_fu_372_p4 );

    SC_METHOD(thread_colorGreen_i_cast_fu_472_p1);
    sensitive << ( colorGreen_reg_1106 );

    SC_METHOD(thread_colorRed_cast_cast_fu_687_p3);
    sensitive << ( tmp_22_fu_679_p3 );

    SC_METHOD(thread_colorRed_i_cast_cast_fu_459_p3);
    sensitive << ( tmp_11_fu_451_p3 );

    SC_METHOD(thread_distance_0_minimumDi_fu_623_p3);
    sensitive << ( minimumDistance_i_reg_323 );
    sensitive << ( minimumDistance_fu_606_p1 );
    sensitive << ( tmp_i7_fu_609_p2 );

    SC_METHOD(thread_exitcond_fu_703_p2);
    sensitive << ( i1_reg_335 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_i_fu_430_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4 );

    SC_METHOD(thread_grp_fu_372_p4);
    sensitive << ( p_color_array_q0 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_357_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_357_in_val_V_read);
    sensitive << ( ap_reg_pp0_iter3_exitcond_i_reg_1087 );
    sensitive << ( powerSummation_V_1_reg_1127 );
    sensitive << ( ap_reg_pp1_iter2_exitcond_reg_1201 );
    sensitive << ( powerSummation_V_reg_1247 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_i_0_minimumDistanceI_fu_615_p3);
    sensitive << ( centerColor_reg_299 );
    sensitive << ( tmp_i7_fu_609_p2 );
    sensitive << ( minimumDistanceIndex_1_fu_602_p1 );

    SC_METHOD(thread_i_1_fu_436_p2);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4 );

    SC_METHOD(thread_i_fu_709_p2);
    sensitive << ( i1_reg_335 );

    SC_METHOD(thread_idx_urem_fu_727_p3);
    sensitive << ( next_urem_fu_715_p2 );
    sensitive << ( tmp_25_fu_721_p2 );

    SC_METHOD(thread_minimumDistanceIndex_1_fu_602_p1);
    sensitive << ( ap_reg_pp0_iter16_minimumDistanceIndex_reg_311 );

    SC_METHOD(thread_minimumDistance_fu_606_p1);
    sensitive << ( tmp_15_reg_1132 );

    SC_METHOD(thread_mul_fu_753_p1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( mul_fu_753_p10 );

    SC_METHOD(thread_mul_fu_753_p10);
    sensitive << ( tmp_31_fu_745_p1 );

    SC_METHOD(thread_mul_fu_753_p2);
    sensitive << ( mul_fu_753_p1 );

    SC_METHOD(thread_next_urem_fu_715_p2);
    sensitive << ( phi_urem_reg_346 );

    SC_METHOD(thread_number_assign_1_cast_fu_806_p1);
    sensitive << ( number_assign_1_fu_801_p2 );

    SC_METHOD(thread_number_assign_1_fu_801_p2);
    sensitive << ( colorGreen_cast_reg_1191 );
    sensitive << ( pixelGreen_cast_fu_793_p1 );

    SC_METHOD(thread_number_assign_2_fu_816_p2);
    sensitive << ( colorBlue_cast_reg_1196 );
    sensitive << ( pixelBlue_cast_fu_797_p1 );

    SC_METHOD(thread_number_assign_3_fu_467_p2);
    sensitive << ( pixelRed_i_cast_reg_1072 );
    sensitive << ( colorRed_i_cast_cast_fu_459_p3 );

    SC_METHOD(thread_number_assign_3_i_ca_fu_483_p1);
    sensitive << ( number_assign_4_fu_478_p2 );

    SC_METHOD(thread_number_assign_4_fu_478_p2);
    sensitive << ( pixelGreen_i_cast_reg_1077 );
    sensitive << ( colorGreen_i_cast_fu_472_p1 );

    SC_METHOD(thread_number_assign_5_fu_493_p2);
    sensitive << ( pixelBlue_i_cast_reg_1082 );
    sensitive << ( colorBlue_i_cast_fu_475_p1 );

    SC_METHOD(thread_number_assign_cast_c_fu_843_p1);
    sensitive << ( number_assign_fu_838_p2 );

    SC_METHOD(thread_number_assign_fu_838_p2);
    sensitive << ( colorRed_cast_cast_reg_1186 );
    sensitive << ( pixelRed_cast_fu_835_p1 );

    SC_METHOD(thread_number_assign_i_cast_fu_512_p1);
    sensitive << ( ap_reg_pp0_iter2_number_assign_3_reg_1111 );

    SC_METHOD(thread_p_Val2_1_cast_fu_872_p1);
    sensitive << ( tmp_23_fu_865_p3 );

    SC_METHOD(thread_p_Val2_1_fu_898_p2);
    sensitive << ( p_shl_i_cast_fu_883_p1 );
    sensitive << ( p_shl9_i_cast_fu_894_p1 );

    SC_METHOD(thread_p_Val2_2_cast_cast_fu_904_p1);
    sensitive << ( p_Val2_1_fu_898_p2 );

    SC_METHOD(thread_p_Val2_3_cast_fu_529_p1);
    sensitive << ( tmp_10_fu_521_p3 );

    SC_METHOD(thread_p_Val2_4_cast_fu_540_p1);
    sensitive << ( tmp_13_fu_533_p3 );

    SC_METHOD(thread_p_Val2_5_i6_cast_c_fu_572_p1);
    sensitive << ( p_Val2_s_fu_566_p2 );

    SC_METHOD(thread_p_Val2_cast_fu_861_p1);
    sensitive << ( tmp_20_fu_853_p3 );

    SC_METHOD(thread_p_Val2_s_fu_566_p2);
    sensitive << ( p_shl_i_i_cast_fu_551_p1 );
    sensitive << ( p_shl9_i_i_cast_fu_562_p1 );

    SC_METHOD(thread_p_color_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_reg_1167 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_i5_fu_442_p1 );

    SC_METHOD(thread_p_color_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_p_demorgan_fu_1030_p2);
    sensitive << ( tmp_45_fu_1018_p2 );
    sensitive << ( tmp_46_fu_1024_p2 );

    SC_METHOD(thread_p_shl9_i_cast_fu_894_p1);
    sensitive << ( p_shl9_i_fu_887_p3 );

    SC_METHOD(thread_p_shl9_i_fu_887_p3);
    sensitive << ( tmp_30_reg_1241 );

    SC_METHOD(thread_p_shl9_i_i_cast_fu_562_p1);
    sensitive << ( p_shl9_i_i_fu_555_p3 );

    SC_METHOD(thread_p_shl9_i_i_fu_555_p3);
    sensitive << ( tmp_19_reg_1121 );

    SC_METHOD(thread_p_shl_i_cast_fu_883_p1);
    sensitive << ( p_shl_i_fu_876_p3 );

    SC_METHOD(thread_p_shl_i_fu_876_p3);
    sensitive << ( tmp_30_reg_1241 );

    SC_METHOD(thread_p_shl_i_i_cast_fu_551_p1);
    sensitive << ( p_shl_i_i_fu_544_p3 );

    SC_METHOD(thread_p_shl_i_i_fu_544_p3);
    sensitive << ( tmp_19_reg_1121 );

    SC_METHOD(thread_pixelArray_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_reg_pp1_iter14_pixelArray_addr_3_reg_1220 );
    sensitive << ( ap_enable_reg_pp1_iter15 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_pixelArray_address1);
    sensitive << ( ap_reg_pp1_iter15_pixelArray_addr_3_reg_1220 );
    sensitive << ( ap_enable_reg_pp1_iter16 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_pixelArray_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter15 );

    SC_METHOD(thread_pixelArray_ce1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter16 );

    SC_METHOD(thread_pixelArray_d1);
    sensitive << ( ap_enable_reg_pp1_iter16 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_48_fu_1042_p2 );
    sensitive << ( tmp_49_fu_1048_p2 );

    SC_METHOD(thread_pixelArray_we1);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_reg_pp1_iter15_exitcond_reg_1201 );
    sensitive << ( ap_enable_reg_pp1_iter16 );

    SC_METHOD(thread_pixelBlue_1_fu_769_p1);
    sensitive << ( tempArray_q0 );

    SC_METHOD(thread_pixelBlue_cast_fu_797_p1);
    sensitive << ( pixelBlue_1_fu_769_p1 );

    SC_METHOD(thread_pixelBlue_fu_388_p4);
    sensitive << ( pixelArray_q0 );

    SC_METHOD(thread_pixelBlue_i_cast_fu_426_p1);
    sensitive << ( pixelBlue_fu_388_p4 );

    SC_METHOD(thread_pixelGreen_1_fu_783_p4);
    sensitive << ( tempArray_q0 );

    SC_METHOD(thread_pixelGreen_cast_fu_793_p1);
    sensitive << ( pixelGreen_1_fu_783_p4 );

    SC_METHOD(thread_pixelGreen_fu_412_p4);
    sensitive << ( pixelArray_q0 );

    SC_METHOD(thread_pixelGreen_i_cast_fu_422_p1);
    sensitive << ( pixelGreen_fu_412_p4 );

    SC_METHOD(thread_pixelRed_cast_fu_835_p1);
    sensitive << ( pixelRed_1_reg_1231 );

    SC_METHOD(thread_pixelRed_fu_398_p4);
    sensitive << ( pixelArray_q0 );

    SC_METHOD(thread_pixelRed_i_cast_fu_408_p1);
    sensitive << ( pixelRed_fu_398_p4 );

    SC_METHOD(thread_powerSummation_V_1_fu_586_p2);
    sensitive << ( p_Val2_3_cast_fu_529_p1 );
    sensitive << ( tmp8_cast_fu_582_p1 );

    SC_METHOD(thread_powerSummation_V_fu_918_p2);
    sensitive << ( p_Val2_cast_fu_861_p1 );
    sensitive << ( tmp9_cast_fu_914_p1 );

    SC_METHOD(thread_result_1_fu_810_p0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( number_assign_1_cast_fu_806_p1 );

    SC_METHOD(thread_result_1_fu_810_p1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( number_assign_1_cast_fu_806_p1 );

    SC_METHOD(thread_result_1_fu_810_p2);
    sensitive << ( result_1_fu_810_p0 );
    sensitive << ( result_1_fu_810_p1 );

    SC_METHOD(thread_result_2_fu_515_p0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_i_cast_fu_512_p1 );

    SC_METHOD(thread_result_2_fu_515_p1);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_i_cast_fu_512_p1 );

    SC_METHOD(thread_result_2_fu_515_p2);
    sensitive << ( result_2_fu_515_p0 );
    sensitive << ( result_2_fu_515_p1 );

    SC_METHOD(thread_result_3_fu_487_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_3_i_ca_fu_483_p1 );

    SC_METHOD(thread_result_3_fu_487_p1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_3_i_ca_fu_483_p1 );

    SC_METHOD(thread_result_3_fu_487_p2);
    sensitive << ( result_3_fu_487_p0 );
    sensitive << ( result_3_fu_487_p1 );

    SC_METHOD(thread_result_fu_847_p0);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( number_assign_cast_c_fu_843_p1 );

    SC_METHOD(thread_result_fu_847_p1);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( number_assign_cast_c_fu_843_p1 );

    SC_METHOD(thread_result_fu_847_p2);
    sensitive << ( result_fu_847_p0 );
    sensitive << ( result_fu_847_p1 );

    SC_METHOD(thread_selectedColorArray_address0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_fu_664_p1 );

    SC_METHOD(thread_selectedColorArray_ce0);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_tempArray_address0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_8_fu_735_p1 );

    SC_METHOD(thread_tempArray_address1);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tempArray_ce0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_tempArray_ce1);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tempArray_d0);
    sensitive << ( reg_382 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( tmp_4_fu_631_p1 );
    sensitive << ( tmp_3_fu_644_p1 );
    sensitive << ( tmp_5_fu_659_p1 );

    SC_METHOD(thread_tempArray_d1);
    sensitive << ( reg_382 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_9_reg_1152 );
    sensitive << ( tmp_2_reg_1162 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tempArray_we0);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tempArray_we1);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tmp8_cast_fu_582_p1);
    sensitive << ( tmp8_fu_576_p2 );

    SC_METHOD(thread_tmp8_fu_576_p2);
    sensitive << ( p_Val2_5_i6_cast_c_fu_572_p1 );
    sensitive << ( p_Val2_4_cast_fu_540_p1 );

    SC_METHOD(thread_tmp9_cast_fu_914_p1);
    sensitive << ( tmp9_fu_908_p2 );

    SC_METHOD(thread_tmp9_fu_908_p2);
    sensitive << ( p_Val2_2_cast_cast_fu_904_p1 );
    sensitive << ( p_Val2_1_cast_fu_872_p1 );

    SC_METHOD(thread_tmp_10_fu_521_p3);
    sensitive << ( result_2_fu_515_p2 );

    SC_METHOD(thread_tmp_11_fu_451_p3);
    sensitive << ( p_color_array_q0 );

    SC_METHOD(thread_tmp_13_fu_533_p3);
    sensitive << ( result_3_reg_1116 );

    SC_METHOD(thread_tmp_16_fu_924_p3);
    sensitive << ( ap_reg_pp1_iter14_tmp_24_reg_1226 );

    SC_METHOD(thread_tmp_17_fu_931_p2);
    sensitive << ( tmp_16_fu_924_p3 );

    SC_METHOD(thread_tmp_19_fu_506_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_5_fu_493_p2 );

    SC_METHOD(thread_tmp_19_fu_506_p1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( number_assign_5_fu_493_p2 );

    SC_METHOD(thread_tmp_19_fu_506_p2);
    sensitive << ( tmp_19_fu_506_p0 );
    sensitive << ( tmp_19_fu_506_p1 );

    SC_METHOD(thread_tmp_1_fu_669_p2);
    sensitive << ( selectedColorArray_q0 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tmp_20_fu_853_p3);
    sensitive << ( result_fu_847_p2 );

    SC_METHOD(thread_tmp_21_fu_949_p4);
    sensitive << ( result_V_reg_1252 );

    SC_METHOD(thread_tmp_22_fu_679_p3);
    sensitive << ( p_color_array_q0 );

    SC_METHOD(thread_tmp_23_fu_865_p3);
    sensitive << ( result_1_reg_1236 );

    SC_METHOD(thread_tmp_25_fu_721_p2);
    sensitive << ( exitcond_fu_703_p2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( next_urem_fu_715_p2 );

    SC_METHOD(thread_tmp_30_fu_829_p0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( number_assign_2_fu_816_p2 );

    SC_METHOD(thread_tmp_30_fu_829_p1);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( number_assign_2_fu_816_p2 );

    SC_METHOD(thread_tmp_30_fu_829_p2);
    sensitive << ( tmp_30_fu_829_p0 );
    sensitive << ( tmp_30_fu_829_p1 );

    SC_METHOD(thread_tmp_31_fu_745_p1);
    sensitive << ( i1_reg_335 );

    SC_METHOD(thread_tmp_32_fu_937_p2);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_reg_pp1_iter14_exitcond_reg_1201 );
    sensitive << ( ap_enable_reg_pp1_iter15 );
    sensitive << ( tmp_16_fu_924_p3 );
    sensitive << ( tmp_17_fu_931_p2 );

    SC_METHOD(thread_tmp_33_fu_958_p1);
    sensitive << ( tmp_21_fu_949_p4 );

    SC_METHOD(thread_tmp_34_fu_943_p2);
    sensitive << ( tmp_16_fu_924_p3 );

    SC_METHOD(thread_tmp_35_fu_962_p3);
    sensitive << ( tmp_16_reg_1257 );
    sensitive << ( tmp_17_reg_1264 );
    sensitive << ( tmp_32_reg_1270 );

    SC_METHOD(thread_tmp_36_fu_967_p3);
    sensitive << ( tmp_16_reg_1257 );
    sensitive << ( tmp_17_reg_1264 );
    sensitive << ( tmp_32_reg_1270 );

    SC_METHOD(thread_tmp_37_fu_972_p3);
    sensitive << ( tmp_16_reg_1257 );
    sensitive << ( tmp_32_reg_1270 );
    sensitive << ( tmp_34_reg_1278 );

    SC_METHOD(thread_tmp_38_fu_977_p2);
    sensitive << ( tmp_35_fu_962_p3 );

    SC_METHOD(thread_tmp_39_fu_983_p1);
    sensitive << ( tmp_37_fu_972_p3 );

    SC_METHOD(thread_tmp_3_fu_644_p1);
    sensitive << ( pixelArray_q0 );

    SC_METHOD(thread_tmp_40_fu_987_p1);
    sensitive << ( tmp_36_fu_967_p3 );

    SC_METHOD(thread_tmp_41_fu_991_p1);
    sensitive << ( tmp_38_fu_977_p2 );

    SC_METHOD(thread_tmp_42_fu_995_p2);
    sensitive << ( tmp_33_fu_958_p1 );
    sensitive << ( tmp_39_fu_983_p1 );

    SC_METHOD(thread_tmp_43_fu_1001_p4);
    sensitive << ( tmp_42_fu_995_p2 );

    SC_METHOD(thread_tmp_44_fu_1011_p3);
    sensitive << ( tmp_32_reg_1270 );
    sensitive << ( tmp_42_fu_995_p2 );
    sensitive << ( tmp_43_fu_1001_p4 );

    SC_METHOD(thread_tmp_45_fu_1018_p2);
    sensitive << ( tmp_40_fu_987_p1 );

    SC_METHOD(thread_tmp_46_fu_1024_p2);
    sensitive << ( tmp_41_fu_991_p1 );

    SC_METHOD(thread_tmp_47_fu_1036_p2);
    sensitive << ( p_demorgan_fu_1030_p2 );

    SC_METHOD(thread_tmp_48_fu_1042_p2);
    sensitive << ( pixelArray_q0 );
    sensitive << ( tmp_47_fu_1036_p2 );

    SC_METHOD(thread_tmp_49_fu_1048_p2);
    sensitive << ( p_demorgan_fu_1030_p2 );
    sensitive << ( tmp_44_fu_1011_p3 );

    SC_METHOD(thread_tmp_4_fu_631_p1);
    sensitive << ( pixelArray_load_reg_1066 );

    SC_METHOD(thread_tmp_5_fu_659_p1);
    sensitive << ( pixelArray_q0 );

    SC_METHOD(thread_tmp_8_fu_735_p1);
    sensitive << ( i1_reg_335 );

    SC_METHOD(thread_tmp_fu_664_p1);
    sensitive << ( centerColor_reg_299 );

    SC_METHOD(thread_tmp_i5_fu_442_p1);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4 );

    SC_METHOD(thread_tmp_i7_fu_609_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( minimumDistance_i_reg_323 );
    sensitive << ( ap_reg_pp0_iter16_exitcond_i_reg_1087 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( minimumDistance_fu_606_p1 );

    SC_METHOD(thread_tmp_s_fu_740_p1);
    sensitive << ( phi_urem_reg_346 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_i_fu_430_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( tmp_1_fu_669_p2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( exitcond_fu_703_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter15 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter16 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter16 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "parseColorsToCenterPixel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, pixelArray_address0, "(port)pixelArray_address0");
    sc_trace(mVcdFile, pixelArray_ce0, "(port)pixelArray_ce0");
    sc_trace(mVcdFile, pixelArray_q0, "(port)pixelArray_q0");
    sc_trace(mVcdFile, pixelArray_address1, "(port)pixelArray_address1");
    sc_trace(mVcdFile, pixelArray_ce1, "(port)pixelArray_ce1");
    sc_trace(mVcdFile, pixelArray_we1, "(port)pixelArray_we1");
    sc_trace(mVcdFile, pixelArray_d1, "(port)pixelArray_d1");
    sc_trace(mVcdFile, selectedColorArray_address0, "(port)selectedColorArray_address0");
    sc_trace(mVcdFile, selectedColorArray_ce0, "(port)selectedColorArray_ce0");
    sc_trace(mVcdFile, selectedColorArray_q0, "(port)selectedColorArray_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_color_array_address0, "p_color_array_address0");
    sc_trace(mVcdFile, p_color_array_ce0, "p_color_array_ce0");
    sc_trace(mVcdFile, p_color_array_q0, "p_color_array_q0");
    sc_trace(mVcdFile, centerColor_reg_299, "centerColor_reg_299");
    sc_trace(mVcdFile, minimumDistanceIndex_reg_311, "minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter1_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter7, "ap_block_state10_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter8, "ap_block_state11_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter9, "ap_block_state12_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter10, "ap_block_state13_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter11, "ap_block_state14_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter12, "ap_block_state15_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter13, "ap_block_state16_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter14, "ap_block_state17_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter15, "ap_block_state18_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter16, "ap_block_state19_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter17, "ap_block_state20_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter2_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter3_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter4_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter5_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter6_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter7_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter8_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter9_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter10_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter11_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter12_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter13_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter14_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter15_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_minimumDistanceIndex_reg_311, "ap_reg_pp0_iter16_minimumDistanceIndex_reg_311");
    sc_trace(mVcdFile, minimumDistance_i_reg_323, "minimumDistance_i_reg_323");
    sc_trace(mVcdFile, i1_reg_335, "i1_reg_335");
    sc_trace(mVcdFile, phi_urem_reg_346, "phi_urem_reg_346");
    sc_trace(mVcdFile, reg_382, "reg_382");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, pixelArray_load_reg_1066, "pixelArray_load_reg_1066");
    sc_trace(mVcdFile, pixelRed_i_cast_fu_408_p1, "pixelRed_i_cast_fu_408_p1");
    sc_trace(mVcdFile, pixelRed_i_cast_reg_1072, "pixelRed_i_cast_reg_1072");
    sc_trace(mVcdFile, pixelGreen_i_cast_fu_422_p1, "pixelGreen_i_cast_fu_422_p1");
    sc_trace(mVcdFile, pixelGreen_i_cast_reg_1077, "pixelGreen_i_cast_reg_1077");
    sc_trace(mVcdFile, pixelBlue_i_cast_fu_426_p1, "pixelBlue_i_cast_fu_426_p1");
    sc_trace(mVcdFile, pixelBlue_i_cast_reg_1082, "pixelBlue_i_cast_reg_1082");
    sc_trace(mVcdFile, exitcond_i_fu_430_p2, "exitcond_i_fu_430_p2");
    sc_trace(mVcdFile, exitcond_i_reg_1087, "exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_i_reg_1087, "ap_reg_pp0_iter1_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_i_reg_1087, "ap_reg_pp0_iter2_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_i_reg_1087, "ap_reg_pp0_iter3_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_i_reg_1087, "ap_reg_pp0_iter4_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_i_reg_1087, "ap_reg_pp0_iter5_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_i_reg_1087, "ap_reg_pp0_iter6_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_i_reg_1087, "ap_reg_pp0_iter7_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_i_reg_1087, "ap_reg_pp0_iter8_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_exitcond_i_reg_1087, "ap_reg_pp0_iter9_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_exitcond_i_reg_1087, "ap_reg_pp0_iter10_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_exitcond_i_reg_1087, "ap_reg_pp0_iter11_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_exitcond_i_reg_1087, "ap_reg_pp0_iter12_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_exitcond_i_reg_1087, "ap_reg_pp0_iter13_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_exitcond_i_reg_1087, "ap_reg_pp0_iter14_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_exitcond_i_reg_1087, "ap_reg_pp0_iter15_exitcond_i_reg_1087");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_exitcond_i_reg_1087, "ap_reg_pp0_iter16_exitcond_i_reg_1087");
    sc_trace(mVcdFile, i_1_fu_436_p2, "i_1_fu_436_p2");
    sc_trace(mVcdFile, i_1_reg_1091, "i_1_reg_1091");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, colorBlue_fu_447_p1, "colorBlue_fu_447_p1");
    sc_trace(mVcdFile, colorBlue_reg_1101, "colorBlue_reg_1101");
    sc_trace(mVcdFile, grp_fu_372_p4, "grp_fu_372_p4");
    sc_trace(mVcdFile, colorGreen_reg_1106, "colorGreen_reg_1106");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, number_assign_3_fu_467_p2, "number_assign_3_fu_467_p2");
    sc_trace(mVcdFile, number_assign_3_reg_1111, "number_assign_3_reg_1111");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_number_assign_3_reg_1111, "ap_reg_pp0_iter2_number_assign_3_reg_1111");
    sc_trace(mVcdFile, result_3_fu_487_p2, "result_3_fu_487_p2");
    sc_trace(mVcdFile, result_3_reg_1116, "result_3_reg_1116");
    sc_trace(mVcdFile, tmp_19_fu_506_p2, "tmp_19_fu_506_p2");
    sc_trace(mVcdFile, tmp_19_reg_1121, "tmp_19_reg_1121");
    sc_trace(mVcdFile, powerSummation_V_1_fu_586_p2, "powerSummation_V_1_fu_586_p2");
    sc_trace(mVcdFile, powerSummation_V_1_reg_1127, "powerSummation_V_1_reg_1127");
    sc_trace(mVcdFile, tmp_15_reg_1132, "tmp_15_reg_1132");
    sc_trace(mVcdFile, i_0_minimumDistanceI_fu_615_p3, "i_0_minimumDistanceI_fu_615_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, distance_0_minimumDi_fu_623_p3, "distance_0_minimumDi_fu_623_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_9_reg_1152, "tmp_9_reg_1152");
    sc_trace(mVcdFile, tmp_2_reg_1162, "tmp_2_reg_1162");
    sc_trace(mVcdFile, tmp_fu_664_p1, "tmp_fu_664_p1");
    sc_trace(mVcdFile, tmp_reg_1167, "tmp_reg_1167");
    sc_trace(mVcdFile, tmp_1_fu_669_p2, "tmp_1_fu_669_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, colorRed_cast_cast_fu_687_p3, "colorRed_cast_cast_fu_687_p3");
    sc_trace(mVcdFile, colorRed_cast_cast_reg_1186, "colorRed_cast_cast_reg_1186");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, colorGreen_cast_fu_695_p1, "colorGreen_cast_fu_695_p1");
    sc_trace(mVcdFile, colorGreen_cast_reg_1191, "colorGreen_cast_reg_1191");
    sc_trace(mVcdFile, colorBlue_cast_fu_699_p1, "colorBlue_cast_fu_699_p1");
    sc_trace(mVcdFile, colorBlue_cast_reg_1196, "colorBlue_cast_reg_1196");
    sc_trace(mVcdFile, exitcond_fu_703_p2, "exitcond_fu_703_p2");
    sc_trace(mVcdFile, exitcond_reg_1201, "exitcond_reg_1201");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state26_pp1_stage0_iter0, "ap_block_state26_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state27_pp1_stage0_iter1, "ap_block_state27_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state28_pp1_stage0_iter2, "ap_block_state28_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state29_pp1_stage0_iter3, "ap_block_state29_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state30_pp1_stage0_iter4, "ap_block_state30_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state31_pp1_stage0_iter5, "ap_block_state31_pp1_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state32_pp1_stage0_iter6, "ap_block_state32_pp1_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state33_pp1_stage0_iter7, "ap_block_state33_pp1_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state34_pp1_stage0_iter8, "ap_block_state34_pp1_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state35_pp1_stage0_iter9, "ap_block_state35_pp1_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state36_pp1_stage0_iter10, "ap_block_state36_pp1_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state37_pp1_stage0_iter11, "ap_block_state37_pp1_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state38_pp1_stage0_iter12, "ap_block_state38_pp1_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state39_pp1_stage0_iter13, "ap_block_state39_pp1_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state40_pp1_stage0_iter14, "ap_block_state40_pp1_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state41_pp1_stage0_iter15, "ap_block_state41_pp1_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state42_pp1_stage0_iter16, "ap_block_state42_pp1_stage0_iter16");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_exitcond_reg_1201, "ap_reg_pp1_iter1_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter2_exitcond_reg_1201, "ap_reg_pp1_iter2_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter3_exitcond_reg_1201, "ap_reg_pp1_iter3_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter4_exitcond_reg_1201, "ap_reg_pp1_iter4_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter5_exitcond_reg_1201, "ap_reg_pp1_iter5_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter6_exitcond_reg_1201, "ap_reg_pp1_iter6_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter7_exitcond_reg_1201, "ap_reg_pp1_iter7_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter8_exitcond_reg_1201, "ap_reg_pp1_iter8_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter9_exitcond_reg_1201, "ap_reg_pp1_iter9_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter10_exitcond_reg_1201, "ap_reg_pp1_iter10_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter11_exitcond_reg_1201, "ap_reg_pp1_iter11_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter12_exitcond_reg_1201, "ap_reg_pp1_iter12_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter13_exitcond_reg_1201, "ap_reg_pp1_iter13_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter14_exitcond_reg_1201, "ap_reg_pp1_iter14_exitcond_reg_1201");
    sc_trace(mVcdFile, ap_reg_pp1_iter15_exitcond_reg_1201, "ap_reg_pp1_iter15_exitcond_reg_1201");
    sc_trace(mVcdFile, i_fu_709_p2, "i_fu_709_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, idx_urem_fu_727_p3, "idx_urem_fu_727_p3");
    sc_trace(mVcdFile, pixelArray_addr_3_reg_1220, "pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter1_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter2_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter2_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter3_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter3_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter4_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter4_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter5_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter5_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter6_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter6_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter7_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter7_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter8_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter8_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter9_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter9_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter10_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter10_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter11_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter11_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter12_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter12_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter13_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter13_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter14_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter14_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, ap_reg_pp1_iter15_pixelArray_addr_3_reg_1220, "ap_reg_pp1_iter15_pixelArray_addr_3_reg_1220");
    sc_trace(mVcdFile, tmp_24_reg_1226, "tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter1_tmp_24_reg_1226, "ap_reg_pp1_iter1_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter2_tmp_24_reg_1226, "ap_reg_pp1_iter2_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter3_tmp_24_reg_1226, "ap_reg_pp1_iter3_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter4_tmp_24_reg_1226, "ap_reg_pp1_iter4_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter5_tmp_24_reg_1226, "ap_reg_pp1_iter5_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter6_tmp_24_reg_1226, "ap_reg_pp1_iter6_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter7_tmp_24_reg_1226, "ap_reg_pp1_iter7_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter8_tmp_24_reg_1226, "ap_reg_pp1_iter8_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter9_tmp_24_reg_1226, "ap_reg_pp1_iter9_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter10_tmp_24_reg_1226, "ap_reg_pp1_iter10_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter11_tmp_24_reg_1226, "ap_reg_pp1_iter11_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter12_tmp_24_reg_1226, "ap_reg_pp1_iter12_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter13_tmp_24_reg_1226, "ap_reg_pp1_iter13_tmp_24_reg_1226");
    sc_trace(mVcdFile, ap_reg_pp1_iter14_tmp_24_reg_1226, "ap_reg_pp1_iter14_tmp_24_reg_1226");
    sc_trace(mVcdFile, pixelRed_1_reg_1231, "pixelRed_1_reg_1231");
    sc_trace(mVcdFile, result_1_fu_810_p2, "result_1_fu_810_p2");
    sc_trace(mVcdFile, result_1_reg_1236, "result_1_reg_1236");
    sc_trace(mVcdFile, tmp_30_fu_829_p2, "tmp_30_fu_829_p2");
    sc_trace(mVcdFile, tmp_30_reg_1241, "tmp_30_reg_1241");
    sc_trace(mVcdFile, powerSummation_V_fu_918_p2, "powerSummation_V_fu_918_p2");
    sc_trace(mVcdFile, powerSummation_V_reg_1247, "powerSummation_V_reg_1247");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_357_ap_return, "grp_fxp_sqrt_fu_357_ap_return");
    sc_trace(mVcdFile, result_V_reg_1252, "result_V_reg_1252");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter15, "ap_enable_reg_pp1_iter15");
    sc_trace(mVcdFile, tmp_16_fu_924_p3, "tmp_16_fu_924_p3");
    sc_trace(mVcdFile, tmp_16_reg_1257, "tmp_16_reg_1257");
    sc_trace(mVcdFile, tmp_17_fu_931_p2, "tmp_17_fu_931_p2");
    sc_trace(mVcdFile, tmp_17_reg_1264, "tmp_17_reg_1264");
    sc_trace(mVcdFile, tmp_32_fu_937_p2, "tmp_32_fu_937_p2");
    sc_trace(mVcdFile, tmp_32_reg_1270, "tmp_32_reg_1270");
    sc_trace(mVcdFile, tmp_34_fu_943_p2, "tmp_34_fu_943_p2");
    sc_trace(mVcdFile, tmp_34_reg_1278, "tmp_34_reg_1278");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state26, "ap_condition_pp1_exit_iter0_state26");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter5, "ap_enable_reg_pp1_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter6, "ap_enable_reg_pp1_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter7, "ap_enable_reg_pp1_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter8, "ap_enable_reg_pp1_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter9, "ap_enable_reg_pp1_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter10, "ap_enable_reg_pp1_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter11, "ap_enable_reg_pp1_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter12, "ap_enable_reg_pp1_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter13, "ap_enable_reg_pp1_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter14, "ap_enable_reg_pp1_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter16, "ap_enable_reg_pp1_iter16");
    sc_trace(mVcdFile, tempArray_address0, "tempArray_address0");
    sc_trace(mVcdFile, tempArray_ce0, "tempArray_ce0");
    sc_trace(mVcdFile, tempArray_we0, "tempArray_we0");
    sc_trace(mVcdFile, tempArray_d0, "tempArray_d0");
    sc_trace(mVcdFile, tempArray_q0, "tempArray_q0");
    sc_trace(mVcdFile, tempArray_address1, "tempArray_address1");
    sc_trace(mVcdFile, tempArray_ce1, "tempArray_ce1");
    sc_trace(mVcdFile, tempArray_we1, "tempArray_we1");
    sc_trace(mVcdFile, tempArray_d1, "tempArray_d1");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_357_in_val_V_read, "grp_fxp_sqrt_fu_357_in_val_V_read");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_357_ap_ce, "grp_fxp_sqrt_fu_357_ap_ce");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4, "ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_i5_fu_442_p1, "tmp_i5_fu_442_p1");
    sc_trace(mVcdFile, tmp_8_fu_735_p1, "tmp_8_fu_735_p1");
    sc_trace(mVcdFile, tmp_s_fu_740_p1, "tmp_s_fu_740_p1");
    sc_trace(mVcdFile, tmp_4_fu_631_p1, "tmp_4_fu_631_p1");
    sc_trace(mVcdFile, tmp_3_fu_644_p1, "tmp_3_fu_644_p1");
    sc_trace(mVcdFile, tmp_5_fu_659_p1, "tmp_5_fu_659_p1");
    sc_trace(mVcdFile, pixelRed_fu_398_p4, "pixelRed_fu_398_p4");
    sc_trace(mVcdFile, pixelGreen_fu_412_p4, "pixelGreen_fu_412_p4");
    sc_trace(mVcdFile, pixelBlue_fu_388_p4, "pixelBlue_fu_388_p4");
    sc_trace(mVcdFile, tmp_11_fu_451_p3, "tmp_11_fu_451_p3");
    sc_trace(mVcdFile, colorRed_i_cast_cast_fu_459_p3, "colorRed_i_cast_cast_fu_459_p3");
    sc_trace(mVcdFile, colorGreen_i_cast_fu_472_p1, "colorGreen_i_cast_fu_472_p1");
    sc_trace(mVcdFile, number_assign_4_fu_478_p2, "number_assign_4_fu_478_p2");
    sc_trace(mVcdFile, result_3_fu_487_p0, "result_3_fu_487_p0");
    sc_trace(mVcdFile, number_assign_3_i_ca_fu_483_p1, "number_assign_3_i_ca_fu_483_p1");
    sc_trace(mVcdFile, result_3_fu_487_p1, "result_3_fu_487_p1");
    sc_trace(mVcdFile, colorBlue_i_cast_fu_475_p1, "colorBlue_i_cast_fu_475_p1");
    sc_trace(mVcdFile, number_assign_5_fu_493_p2, "number_assign_5_fu_493_p2");
    sc_trace(mVcdFile, tmp_19_fu_506_p0, "tmp_19_fu_506_p0");
    sc_trace(mVcdFile, tmp_19_fu_506_p1, "tmp_19_fu_506_p1");
    sc_trace(mVcdFile, result_2_fu_515_p0, "result_2_fu_515_p0");
    sc_trace(mVcdFile, number_assign_i_cast_fu_512_p1, "number_assign_i_cast_fu_512_p1");
    sc_trace(mVcdFile, result_2_fu_515_p1, "result_2_fu_515_p1");
    sc_trace(mVcdFile, result_2_fu_515_p2, "result_2_fu_515_p2");
    sc_trace(mVcdFile, tmp_10_fu_521_p3, "tmp_10_fu_521_p3");
    sc_trace(mVcdFile, tmp_13_fu_533_p3, "tmp_13_fu_533_p3");
    sc_trace(mVcdFile, p_shl_i_i_fu_544_p3, "p_shl_i_i_fu_544_p3");
    sc_trace(mVcdFile, p_shl9_i_i_fu_555_p3, "p_shl9_i_i_fu_555_p3");
    sc_trace(mVcdFile, p_shl_i_i_cast_fu_551_p1, "p_shl_i_i_cast_fu_551_p1");
    sc_trace(mVcdFile, p_shl9_i_i_cast_fu_562_p1, "p_shl9_i_i_cast_fu_562_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_566_p2, "p_Val2_s_fu_566_p2");
    sc_trace(mVcdFile, p_Val2_5_i6_cast_c_fu_572_p1, "p_Val2_5_i6_cast_c_fu_572_p1");
    sc_trace(mVcdFile, p_Val2_4_cast_fu_540_p1, "p_Val2_4_cast_fu_540_p1");
    sc_trace(mVcdFile, tmp8_fu_576_p2, "tmp8_fu_576_p2");
    sc_trace(mVcdFile, p_Val2_3_cast_fu_529_p1, "p_Val2_3_cast_fu_529_p1");
    sc_trace(mVcdFile, tmp8_cast_fu_582_p1, "tmp8_cast_fu_582_p1");
    sc_trace(mVcdFile, minimumDistance_fu_606_p1, "minimumDistance_fu_606_p1");
    sc_trace(mVcdFile, tmp_i7_fu_609_p2, "tmp_i7_fu_609_p2");
    sc_trace(mVcdFile, minimumDistanceIndex_1_fu_602_p1, "minimumDistanceIndex_1_fu_602_p1");
    sc_trace(mVcdFile, tmp_22_fu_679_p3, "tmp_22_fu_679_p3");
    sc_trace(mVcdFile, colorBlue_1_fu_675_p1, "colorBlue_1_fu_675_p1");
    sc_trace(mVcdFile, next_urem_fu_715_p2, "next_urem_fu_715_p2");
    sc_trace(mVcdFile, tmp_25_fu_721_p2, "tmp_25_fu_721_p2");
    sc_trace(mVcdFile, tmp_31_fu_745_p1, "tmp_31_fu_745_p1");
    sc_trace(mVcdFile, mul_fu_753_p1, "mul_fu_753_p1");
    sc_trace(mVcdFile, mul_fu_753_p2, "mul_fu_753_p2");
    sc_trace(mVcdFile, pixelGreen_1_fu_783_p4, "pixelGreen_1_fu_783_p4");
    sc_trace(mVcdFile, pixelBlue_1_fu_769_p1, "pixelBlue_1_fu_769_p1");
    sc_trace(mVcdFile, pixelGreen_cast_fu_793_p1, "pixelGreen_cast_fu_793_p1");
    sc_trace(mVcdFile, number_assign_1_fu_801_p2, "number_assign_1_fu_801_p2");
    sc_trace(mVcdFile, result_1_fu_810_p0, "result_1_fu_810_p0");
    sc_trace(mVcdFile, number_assign_1_cast_fu_806_p1, "number_assign_1_cast_fu_806_p1");
    sc_trace(mVcdFile, result_1_fu_810_p1, "result_1_fu_810_p1");
    sc_trace(mVcdFile, pixelBlue_cast_fu_797_p1, "pixelBlue_cast_fu_797_p1");
    sc_trace(mVcdFile, number_assign_2_fu_816_p2, "number_assign_2_fu_816_p2");
    sc_trace(mVcdFile, tmp_30_fu_829_p0, "tmp_30_fu_829_p0");
    sc_trace(mVcdFile, tmp_30_fu_829_p1, "tmp_30_fu_829_p1");
    sc_trace(mVcdFile, pixelRed_cast_fu_835_p1, "pixelRed_cast_fu_835_p1");
    sc_trace(mVcdFile, number_assign_fu_838_p2, "number_assign_fu_838_p2");
    sc_trace(mVcdFile, result_fu_847_p0, "result_fu_847_p0");
    sc_trace(mVcdFile, number_assign_cast_c_fu_843_p1, "number_assign_cast_c_fu_843_p1");
    sc_trace(mVcdFile, result_fu_847_p1, "result_fu_847_p1");
    sc_trace(mVcdFile, result_fu_847_p2, "result_fu_847_p2");
    sc_trace(mVcdFile, tmp_20_fu_853_p3, "tmp_20_fu_853_p3");
    sc_trace(mVcdFile, tmp_23_fu_865_p3, "tmp_23_fu_865_p3");
    sc_trace(mVcdFile, p_shl_i_fu_876_p3, "p_shl_i_fu_876_p3");
    sc_trace(mVcdFile, p_shl9_i_fu_887_p3, "p_shl9_i_fu_887_p3");
    sc_trace(mVcdFile, p_shl_i_cast_fu_883_p1, "p_shl_i_cast_fu_883_p1");
    sc_trace(mVcdFile, p_shl9_i_cast_fu_894_p1, "p_shl9_i_cast_fu_894_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_898_p2, "p_Val2_1_fu_898_p2");
    sc_trace(mVcdFile, p_Val2_2_cast_cast_fu_904_p1, "p_Val2_2_cast_cast_fu_904_p1");
    sc_trace(mVcdFile, p_Val2_1_cast_fu_872_p1, "p_Val2_1_cast_fu_872_p1");
    sc_trace(mVcdFile, tmp9_fu_908_p2, "tmp9_fu_908_p2");
    sc_trace(mVcdFile, p_Val2_cast_fu_861_p1, "p_Val2_cast_fu_861_p1");
    sc_trace(mVcdFile, tmp9_cast_fu_914_p1, "tmp9_cast_fu_914_p1");
    sc_trace(mVcdFile, tmp_21_fu_949_p4, "tmp_21_fu_949_p4");
    sc_trace(mVcdFile, tmp_35_fu_962_p3, "tmp_35_fu_962_p3");
    sc_trace(mVcdFile, tmp_37_fu_972_p3, "tmp_37_fu_972_p3");
    sc_trace(mVcdFile, tmp_36_fu_967_p3, "tmp_36_fu_967_p3");
    sc_trace(mVcdFile, tmp_38_fu_977_p2, "tmp_38_fu_977_p2");
    sc_trace(mVcdFile, tmp_33_fu_958_p1, "tmp_33_fu_958_p1");
    sc_trace(mVcdFile, tmp_39_fu_983_p1, "tmp_39_fu_983_p1");
    sc_trace(mVcdFile, tmp_42_fu_995_p2, "tmp_42_fu_995_p2");
    sc_trace(mVcdFile, tmp_43_fu_1001_p4, "tmp_43_fu_1001_p4");
    sc_trace(mVcdFile, tmp_40_fu_987_p1, "tmp_40_fu_987_p1");
    sc_trace(mVcdFile, tmp_41_fu_991_p1, "tmp_41_fu_991_p1");
    sc_trace(mVcdFile, tmp_45_fu_1018_p2, "tmp_45_fu_1018_p2");
    sc_trace(mVcdFile, tmp_46_fu_1024_p2, "tmp_46_fu_1024_p2");
    sc_trace(mVcdFile, p_demorgan_fu_1030_p2, "p_demorgan_fu_1030_p2");
    sc_trace(mVcdFile, tmp_47_fu_1036_p2, "tmp_47_fu_1036_p2");
    sc_trace(mVcdFile, tmp_44_fu_1011_p3, "tmp_44_fu_1011_p3");
    sc_trace(mVcdFile, tmp_48_fu_1042_p2, "tmp_48_fu_1042_p2");
    sc_trace(mVcdFile, tmp_49_fu_1048_p2, "tmp_49_fu_1048_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, mul_fu_753_p10, "mul_fu_753_p10");
#endif

    }
    mHdltvinHandle.open("parseColorsToCenterPixel.hdltvin.dat");
    mHdltvoutHandle.open("parseColorsToCenterPixel.hdltvout.dat");
}

parseColorsToCenterPixel::~parseColorsToCenterPixel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete p_color_array_U;
    delete tempArray_U;
    delete grp_fxp_sqrt_fu_357;
}

void parseColorsToCenterPixel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter17 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state26.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state26.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state26.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter10 = ap_enable_reg_pp1_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter11 = ap_enable_reg_pp1_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter12 = ap_enable_reg_pp1_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter13 = ap_enable_reg_pp1_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter14 = ap_enable_reg_pp1_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter15 = ap_enable_reg_pp1_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter16 = ap_enable_reg_pp1_iter15.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            ap_enable_reg_pp1_iter16 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter5 = ap_enable_reg_pp1_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter6 = ap_enable_reg_pp1_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter7 = ap_enable_reg_pp1_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter8 = ap_enable_reg_pp1_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter9 = ap_enable_reg_pp1_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter16_exitcond_i_reg_1087.read(), ap_const_lv1_0))) {
        centerColor_reg_299 = i_0_minimumDistanceI_fu_615_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        centerColor_reg_299 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        i1_reg_335 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_703_p2.read()))) {
        i1_reg_335 = i_fu_709_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_i_reg_1087.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        minimumDistanceIndex_reg_311 = i_1_reg_1091.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        minimumDistanceIndex_reg_311 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_reg_pp0_iter16_exitcond_i_reg_1087.read(), ap_const_lv1_0))) {
        minimumDistance_i_reg_323 = distance_0_minimumDi_fu_623_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        minimumDistance_i_reg_323 = ap_const_lv32_7FFFFFFF;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        phi_urem_reg_346 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_703_p2.read()))) {
        phi_urem_reg_346 = idx_urem_fu_727_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter10_exitcond_i_reg_1087 = ap_reg_pp0_iter9_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter10_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter9_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter11_exitcond_i_reg_1087 = ap_reg_pp0_iter10_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter11_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter10_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter12_exitcond_i_reg_1087 = ap_reg_pp0_iter11_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter12_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter11_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter13_exitcond_i_reg_1087 = ap_reg_pp0_iter12_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter13_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter12_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter14_exitcond_i_reg_1087 = ap_reg_pp0_iter13_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter14_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter13_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter15_exitcond_i_reg_1087 = ap_reg_pp0_iter14_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter15_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter14_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter16_exitcond_i_reg_1087 = ap_reg_pp0_iter15_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter16_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter15_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter2_exitcond_i_reg_1087 = ap_reg_pp0_iter1_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter2_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter1_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter2_number_assign_3_reg_1111 = number_assign_3_reg_1111.read();
        ap_reg_pp0_iter3_exitcond_i_reg_1087 = ap_reg_pp0_iter2_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter3_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter2_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter4_exitcond_i_reg_1087 = ap_reg_pp0_iter3_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter4_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter3_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter5_exitcond_i_reg_1087 = ap_reg_pp0_iter4_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter5_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter4_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter6_exitcond_i_reg_1087 = ap_reg_pp0_iter5_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter6_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter5_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter7_exitcond_i_reg_1087 = ap_reg_pp0_iter6_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter7_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter6_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter8_exitcond_i_reg_1087 = ap_reg_pp0_iter7_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter8_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter7_minimumDistanceIndex_reg_311.read();
        ap_reg_pp0_iter9_exitcond_i_reg_1087 = ap_reg_pp0_iter8_exitcond_i_reg_1087.read();
        ap_reg_pp0_iter9_minimumDistanceIndex_reg_311 = ap_reg_pp0_iter8_minimumDistanceIndex_reg_311.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_i_reg_1087 = exitcond_i_reg_1087.read();
        ap_reg_pp0_iter1_minimumDistanceIndex_reg_311 = minimumDistanceIndex_reg_311.read();
        exitcond_i_reg_1087 = exitcond_i_fu_430_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp1_iter10_exitcond_reg_1201 = ap_reg_pp1_iter9_exitcond_reg_1201.read();
        ap_reg_pp1_iter10_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter9_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter10_tmp_24_reg_1226 = ap_reg_pp1_iter9_tmp_24_reg_1226.read();
        ap_reg_pp1_iter11_exitcond_reg_1201 = ap_reg_pp1_iter10_exitcond_reg_1201.read();
        ap_reg_pp1_iter11_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter10_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter11_tmp_24_reg_1226 = ap_reg_pp1_iter10_tmp_24_reg_1226.read();
        ap_reg_pp1_iter12_exitcond_reg_1201 = ap_reg_pp1_iter11_exitcond_reg_1201.read();
        ap_reg_pp1_iter12_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter11_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter12_tmp_24_reg_1226 = ap_reg_pp1_iter11_tmp_24_reg_1226.read();
        ap_reg_pp1_iter13_exitcond_reg_1201 = ap_reg_pp1_iter12_exitcond_reg_1201.read();
        ap_reg_pp1_iter13_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter12_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter13_tmp_24_reg_1226 = ap_reg_pp1_iter12_tmp_24_reg_1226.read();
        ap_reg_pp1_iter14_exitcond_reg_1201 = ap_reg_pp1_iter13_exitcond_reg_1201.read();
        ap_reg_pp1_iter14_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter13_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter14_tmp_24_reg_1226 = ap_reg_pp1_iter13_tmp_24_reg_1226.read();
        ap_reg_pp1_iter15_exitcond_reg_1201 = ap_reg_pp1_iter14_exitcond_reg_1201.read();
        ap_reg_pp1_iter15_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter14_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter2_exitcond_reg_1201 = ap_reg_pp1_iter1_exitcond_reg_1201.read();
        ap_reg_pp1_iter2_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter1_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter2_tmp_24_reg_1226 = ap_reg_pp1_iter1_tmp_24_reg_1226.read();
        ap_reg_pp1_iter3_exitcond_reg_1201 = ap_reg_pp1_iter2_exitcond_reg_1201.read();
        ap_reg_pp1_iter3_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter2_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter3_tmp_24_reg_1226 = ap_reg_pp1_iter2_tmp_24_reg_1226.read();
        ap_reg_pp1_iter4_exitcond_reg_1201 = ap_reg_pp1_iter3_exitcond_reg_1201.read();
        ap_reg_pp1_iter4_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter3_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter4_tmp_24_reg_1226 = ap_reg_pp1_iter3_tmp_24_reg_1226.read();
        ap_reg_pp1_iter5_exitcond_reg_1201 = ap_reg_pp1_iter4_exitcond_reg_1201.read();
        ap_reg_pp1_iter5_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter4_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter5_tmp_24_reg_1226 = ap_reg_pp1_iter4_tmp_24_reg_1226.read();
        ap_reg_pp1_iter6_exitcond_reg_1201 = ap_reg_pp1_iter5_exitcond_reg_1201.read();
        ap_reg_pp1_iter6_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter5_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter6_tmp_24_reg_1226 = ap_reg_pp1_iter5_tmp_24_reg_1226.read();
        ap_reg_pp1_iter7_exitcond_reg_1201 = ap_reg_pp1_iter6_exitcond_reg_1201.read();
        ap_reg_pp1_iter7_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter6_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter7_tmp_24_reg_1226 = ap_reg_pp1_iter6_tmp_24_reg_1226.read();
        ap_reg_pp1_iter8_exitcond_reg_1201 = ap_reg_pp1_iter7_exitcond_reg_1201.read();
        ap_reg_pp1_iter8_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter7_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter8_tmp_24_reg_1226 = ap_reg_pp1_iter7_tmp_24_reg_1226.read();
        ap_reg_pp1_iter9_exitcond_reg_1201 = ap_reg_pp1_iter8_exitcond_reg_1201.read();
        ap_reg_pp1_iter9_pixelArray_addr_3_reg_1220 = ap_reg_pp1_iter8_pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter9_tmp_24_reg_1226 = ap_reg_pp1_iter8_tmp_24_reg_1226.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp1_iter1_exitcond_reg_1201 = exitcond_reg_1201.read();
        ap_reg_pp1_iter1_pixelArray_addr_3_reg_1220 = pixelArray_addr_3_reg_1220.read();
        ap_reg_pp1_iter1_tmp_24_reg_1226 = tmp_24_reg_1226.read();
        exitcond_reg_1201 = exitcond_fu_703_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        colorBlue_cast_reg_1196 = colorBlue_cast_fu_699_p1.read();
        colorGreen_cast_reg_1191 = colorGreen_cast_fu_695_p1.read();
        colorRed_cast_cast_reg_1186 = colorRed_cast_cast_fu_687_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_i_reg_1087.read(), ap_const_lv1_0))) {
        colorBlue_reg_1101 = colorBlue_fu_447_p1.read();
        number_assign_3_reg_1111 = number_assign_3_fu_467_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_i_reg_1087.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        colorGreen_reg_1106 = p_color_array_q0.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_1_reg_1091 = i_1_fu_436_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_703_p2.read()))) {
        pixelArray_addr_3_reg_1220 =  (sc_lv<2>) (tmp_s_fu_740_p1.read());
        tmp_24_reg_1226 = mul_fu_753_p2.read().range(6, 5);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        pixelArray_load_reg_1066 = pixelArray_q0.read();
        pixelBlue_i_cast_reg_1082 = pixelBlue_i_cast_fu_426_p1.read();
        pixelGreen_i_cast_reg_1077 = pixelGreen_i_cast_fu_422_p1.read();
        pixelRed_i_cast_reg_1072 = pixelRed_i_cast_fu_408_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1201.read()))) {
        pixelRed_1_reg_1231 = tempArray_q0.read().range(23, 16);
        result_1_reg_1236 = result_1_fu_810_p2.read();
        tmp_30_reg_1241 = tmp_30_fu_829_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter2_exitcond_i_reg_1087.read(), ap_const_lv1_0))) {
        powerSummation_V_1_reg_1127 = powerSummation_V_1_fu_586_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter1_exitcond_reg_1201.read()))) {
        powerSummation_V_reg_1247 = powerSummation_V_fu_918_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
        reg_382 = pixelArray_q0.read().range(63, 32);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter1_exitcond_i_reg_1087.read(), ap_const_lv1_0))) {
        result_3_reg_1116 = result_3_fu_487_p2.read();
        tmp_19_reg_1121 = tmp_19_fu_506_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter14_exitcond_reg_1201.read()))) {
        result_V_reg_1252 = grp_fxp_sqrt_fu_357_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reg_pp0_iter15_exitcond_i_reg_1087.read(), ap_const_lv1_0))) {
        tmp_15_reg_1132 = grp_fxp_sqrt_fu_357_ap_return.read().range(19, 8);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter14_exitcond_reg_1201.read()))) {
        tmp_16_reg_1257 = tmp_16_fu_924_p3.read();
        tmp_17_reg_1264 = tmp_17_fu_931_p2.read();
        tmp_32_reg_1270 = tmp_32_fu_937_p2.read();
        tmp_34_reg_1278 = tmp_34_fu_943_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_2_reg_1162 = pixelArray_q0.read().range(95, 64);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_9_reg_1152 = pixelArray_load_reg_1066.read().range(95, 64);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_reg_1167 = tmp_fu_664_p1.read();
    }
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[8];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[3];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[4];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[5];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[6];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[7];
}

void parseColorsToCenterPixel::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[9];
}

void parseColorsToCenterPixel::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state10_pp0_stage0_iter7() {
    ap_block_state10_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state11_pp0_stage0_iter8() {
    ap_block_state11_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state12_pp0_stage0_iter9() {
    ap_block_state12_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state13_pp0_stage0_iter10() {
    ap_block_state13_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state14_pp0_stage0_iter11() {
    ap_block_state14_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state15_pp0_stage0_iter12() {
    ap_block_state15_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state16_pp0_stage0_iter13() {
    ap_block_state16_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state17_pp0_stage0_iter14() {
    ap_block_state17_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state18_pp0_stage0_iter15() {
    ap_block_state18_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state19_pp0_stage0_iter16() {
    ap_block_state19_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state20_pp0_stage0_iter17() {
    ap_block_state20_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state26_pp1_stage0_iter0() {
    ap_block_state26_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state27_pp1_stage0_iter1() {
    ap_block_state27_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state28_pp1_stage0_iter2() {
    ap_block_state28_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state29_pp1_stage0_iter3() {
    ap_block_state29_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state30_pp1_stage0_iter4() {
    ap_block_state30_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state31_pp1_stage0_iter5() {
    ap_block_state31_pp1_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state32_pp1_stage0_iter6() {
    ap_block_state32_pp1_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state33_pp1_stage0_iter7() {
    ap_block_state33_pp1_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state34_pp1_stage0_iter8() {
    ap_block_state34_pp1_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state35_pp1_stage0_iter9() {
    ap_block_state35_pp1_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state36_pp1_stage0_iter10() {
    ap_block_state36_pp1_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state37_pp1_stage0_iter11() {
    ap_block_state37_pp1_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state38_pp1_stage0_iter12() {
    ap_block_state38_pp1_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state39_pp1_stage0_iter13() {
    ap_block_state39_pp1_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state40_pp1_stage0_iter14() {
    ap_block_state40_pp1_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state41_pp1_stage0_iter15() {
    ap_block_state41_pp1_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state42_pp1_stage0_iter16() {
    ap_block_state42_pp1_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void parseColorsToCenterPixel::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(exitcond_i_fu_430_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_ap_condition_pp1_exit_iter0_state26() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_703_p2.read())) {
        ap_condition_pp1_exit_iter0_state26 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state26 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void parseColorsToCenterPixel::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void parseColorsToCenterPixel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter16.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond_i_reg_1087.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4 = i_1_reg_1091.read();
    } else {
        ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4 = minimumDistanceIndex_reg_311.read();
    }
}

void parseColorsToCenterPixel::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_colorBlue_1_fu_675_p1() {
    colorBlue_1_fu_675_p1 = p_color_array_q0.read().range(8-1, 0);
}

void parseColorsToCenterPixel::thread_colorBlue_cast_fu_699_p1() {
    colorBlue_cast_fu_699_p1 = esl_zext<9,8>(colorBlue_1_fu_675_p1.read());
}

void parseColorsToCenterPixel::thread_colorBlue_fu_447_p1() {
    colorBlue_fu_447_p1 = p_color_array_q0.read().range(8-1, 0);
}

void parseColorsToCenterPixel::thread_colorBlue_i_cast_fu_475_p1() {
    colorBlue_i_cast_fu_475_p1 = esl_zext<9,8>(colorBlue_reg_1101.read());
}

void parseColorsToCenterPixel::thread_colorGreen_cast_fu_695_p1() {
    colorGreen_cast_fu_695_p1 = esl_zext<9,8>(grp_fu_372_p4.read());
}

void parseColorsToCenterPixel::thread_colorGreen_i_cast_fu_472_p1() {
    colorGreen_i_cast_fu_472_p1 = esl_zext<9,8>(colorGreen_reg_1106.read());
}

void parseColorsToCenterPixel::thread_colorRed_cast_cast_fu_687_p3() {
    colorRed_cast_cast_fu_687_p3 = (!tmp_22_fu_679_p3.read()[0].is_01())? sc_lv<9>(): ((tmp_22_fu_679_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void parseColorsToCenterPixel::thread_colorRed_i_cast_cast_fu_459_p3() {
    colorRed_i_cast_cast_fu_459_p3 = (!tmp_11_fu_451_p3.read()[0].is_01())? sc_lv<9>(): ((tmp_11_fu_451_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void parseColorsToCenterPixel::thread_distance_0_minimumDi_fu_623_p3() {
    distance_0_minimumDi_fu_623_p3 = (!tmp_i7_fu_609_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_i7_fu_609_p2.read()[0].to_bool())? minimumDistance_fu_606_p1.read(): minimumDistance_i_reg_323.read());
}

void parseColorsToCenterPixel::thread_exitcond_fu_703_p2() {
    exitcond_fu_703_p2 = (!i1_reg_335.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_335.read() == ap_const_lv4_8);
}

void parseColorsToCenterPixel::thread_exitcond_i_fu_430_p2() {
    exitcond_i_fu_430_p2 = (!ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4.read() == ap_const_lv3_6);
}

void parseColorsToCenterPixel::thread_grp_fu_372_p4() {
    grp_fu_372_p4 = p_color_array_q0.read().range(15, 8);
}

void parseColorsToCenterPixel::thread_grp_fxp_sqrt_fu_357_ap_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        grp_fxp_sqrt_fu_357_ap_ce = ap_const_logic_1;
    } else {
        grp_fxp_sqrt_fu_357_ap_ce = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_grp_fxp_sqrt_fu_357_in_val_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter2_exitcond_reg_1201.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        grp_fxp_sqrt_fu_357_in_val_V_read = powerSummation_V_reg_1247.read();
    } else if ((esl_seteq<1,1,1>(ap_reg_pp0_iter3_exitcond_i_reg_1087.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        grp_fxp_sqrt_fu_357_in_val_V_read = powerSummation_V_1_reg_1127.read();
    } else {
        grp_fxp_sqrt_fu_357_in_val_V_read = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void parseColorsToCenterPixel::thread_i_0_minimumDistanceI_fu_615_p3() {
    i_0_minimumDistanceI_fu_615_p3 = (!tmp_i7_fu_609_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_i7_fu_609_p2.read()[0].to_bool())? minimumDistanceIndex_1_fu_602_p1.read(): centerColor_reg_299.read());
}

void parseColorsToCenterPixel::thread_i_1_fu_436_p2() {
    i_1_fu_436_p2 = (!ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void parseColorsToCenterPixel::thread_i_fu_709_p2() {
    i_fu_709_p2 = (!i1_reg_335.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_reg_335.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void parseColorsToCenterPixel::thread_idx_urem_fu_727_p3() {
    idx_urem_fu_727_p3 = (!tmp_25_fu_721_p2.read()[0].is_01())? sc_lv<4>(): ((tmp_25_fu_721_p2.read()[0].to_bool())? next_urem_fu_715_p2.read(): ap_const_lv4_0);
}

void parseColorsToCenterPixel::thread_minimumDistanceIndex_1_fu_602_p1() {
    minimumDistanceIndex_1_fu_602_p1 = esl_zext<32,3>(ap_reg_pp0_iter16_minimumDistanceIndex_reg_311.read());
}

void parseColorsToCenterPixel::thread_minimumDistance_fu_606_p1() {
    minimumDistance_fu_606_p1 = esl_zext<32,12>(tmp_15_reg_1132.read());
}

void parseColorsToCenterPixel::thread_mul_fu_753_p1() {
    mul_fu_753_p1 =  (sc_lv<3>) (mul_fu_753_p10.read());
}

void parseColorsToCenterPixel::thread_mul_fu_753_p10() {
    mul_fu_753_p10 = esl_zext<8,3>(tmp_31_fu_745_p1.read());
}

void parseColorsToCenterPixel::thread_mul_fu_753_p2() {
    mul_fu_753_p2 = (!ap_const_lv8_B.is_01() || !mul_fu_753_p1.read().is_01())? sc_lv<8>(): sc_biguint<8>(ap_const_lv8_B) * sc_biguint<3>(mul_fu_753_p1.read());
}

void parseColorsToCenterPixel::thread_next_urem_fu_715_p2() {
    next_urem_fu_715_p2 = (!ap_const_lv4_1.is_01() || !phi_urem_reg_346.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(phi_urem_reg_346.read()));
}

void parseColorsToCenterPixel::thread_number_assign_1_cast_fu_806_p1() {
    number_assign_1_cast_fu_806_p1 = esl_sext<18,9>(number_assign_1_fu_801_p2.read());
}

void parseColorsToCenterPixel::thread_number_assign_1_fu_801_p2() {
    number_assign_1_fu_801_p2 = (!pixelGreen_cast_fu_793_p1.read().is_01() || !colorGreen_cast_reg_1191.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelGreen_cast_fu_793_p1.read()) - sc_biguint<9>(colorGreen_cast_reg_1191.read()));
}

void parseColorsToCenterPixel::thread_number_assign_2_fu_816_p2() {
    number_assign_2_fu_816_p2 = (!pixelBlue_cast_fu_797_p1.read().is_01() || !colorBlue_cast_reg_1196.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelBlue_cast_fu_797_p1.read()) - sc_biguint<9>(colorBlue_cast_reg_1196.read()));
}

void parseColorsToCenterPixel::thread_number_assign_3_fu_467_p2() {
    number_assign_3_fu_467_p2 = (!pixelRed_i_cast_reg_1072.read().is_01() || !colorRed_i_cast_cast_fu_459_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelRed_i_cast_reg_1072.read()) - sc_biguint<9>(colorRed_i_cast_cast_fu_459_p3.read()));
}

void parseColorsToCenterPixel::thread_number_assign_3_i_ca_fu_483_p1() {
    number_assign_3_i_ca_fu_483_p1 = esl_sext<18,9>(number_assign_4_fu_478_p2.read());
}

void parseColorsToCenterPixel::thread_number_assign_4_fu_478_p2() {
    number_assign_4_fu_478_p2 = (!pixelGreen_i_cast_reg_1077.read().is_01() || !colorGreen_i_cast_fu_472_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelGreen_i_cast_reg_1077.read()) - sc_biguint<9>(colorGreen_i_cast_fu_472_p1.read()));
}

void parseColorsToCenterPixel::thread_number_assign_5_fu_493_p2() {
    number_assign_5_fu_493_p2 = (!pixelBlue_i_cast_reg_1082.read().is_01() || !colorBlue_i_cast_fu_475_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelBlue_i_cast_reg_1082.read()) - sc_biguint<9>(colorBlue_i_cast_fu_475_p1.read()));
}

void parseColorsToCenterPixel::thread_number_assign_cast_c_fu_843_p1() {
    number_assign_cast_c_fu_843_p1 = esl_sext<18,9>(number_assign_fu_838_p2.read());
}

void parseColorsToCenterPixel::thread_number_assign_fu_838_p2() {
    number_assign_fu_838_p2 = (!pixelRed_cast_fu_835_p1.read().is_01() || !colorRed_cast_cast_reg_1186.read().is_01())? sc_lv<9>(): (sc_biguint<9>(pixelRed_cast_fu_835_p1.read()) - sc_biguint<9>(colorRed_cast_cast_reg_1186.read()));
}

void parseColorsToCenterPixel::thread_number_assign_i_cast_fu_512_p1() {
    number_assign_i_cast_fu_512_p1 = esl_sext<18,9>(ap_reg_pp0_iter2_number_assign_3_reg_1111.read());
}

void parseColorsToCenterPixel::thread_p_Val2_1_cast_fu_872_p1() {
    p_Val2_1_cast_fu_872_p1 = esl_sext<29,28>(tmp_23_fu_865_p3.read());
}

void parseColorsToCenterPixel::thread_p_Val2_1_fu_898_p2() {
    p_Val2_1_fu_898_p2 = (!p_shl_i_cast_fu_883_p1.read().is_01() || !p_shl9_i_cast_fu_894_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(p_shl_i_cast_fu_883_p1.read()) - sc_bigint<28>(p_shl9_i_cast_fu_894_p1.read()));
}

void parseColorsToCenterPixel::thread_p_Val2_2_cast_cast_fu_904_p1() {
    p_Val2_2_cast_cast_fu_904_p1 = esl_sext<29,28>(p_Val2_1_fu_898_p2.read());
}

void parseColorsToCenterPixel::thread_p_Val2_3_cast_fu_529_p1() {
    p_Val2_3_cast_fu_529_p1 = esl_sext<30,27>(tmp_10_fu_521_p3.read());
}

void parseColorsToCenterPixel::thread_p_Val2_4_cast_fu_540_p1() {
    p_Val2_4_cast_fu_540_p1 = esl_sext<29,28>(tmp_13_fu_533_p3.read());
}

void parseColorsToCenterPixel::thread_p_Val2_5_i6_cast_c_fu_572_p1() {
    p_Val2_5_i6_cast_c_fu_572_p1 = esl_sext<29,28>(p_Val2_s_fu_566_p2.read());
}

void parseColorsToCenterPixel::thread_p_Val2_cast_fu_861_p1() {
    p_Val2_cast_fu_861_p1 = esl_sext<30,27>(tmp_20_fu_853_p3.read());
}

void parseColorsToCenterPixel::thread_p_Val2_s_fu_566_p2() {
    p_Val2_s_fu_566_p2 = (!p_shl_i_i_cast_fu_551_p1.read().is_01() || !p_shl9_i_i_cast_fu_562_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(p_shl_i_i_cast_fu_551_p1.read()) - sc_bigint<28>(p_shl9_i_i_cast_fu_562_p1.read()));
}

void parseColorsToCenterPixel::thread_p_color_array_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        p_color_array_address0 =  (sc_lv<3>) (tmp_reg_1167.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        p_color_array_address0 =  (sc_lv<3>) (tmp_i5_fu_442_p1.read());
    } else {
        p_color_array_address0 =  (sc_lv<3>) ("XXX");
    }
}

void parseColorsToCenterPixel::thread_p_color_array_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        p_color_array_ce0 = ap_const_logic_1;
    } else {
        p_color_array_ce0 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_p_demorgan_fu_1030_p2() {
    p_demorgan_fu_1030_p2 = (tmp_45_fu_1018_p2.read() & tmp_46_fu_1024_p2.read());
}

void parseColorsToCenterPixel::thread_p_shl9_i_cast_fu_894_p1() {
    p_shl9_i_cast_fu_894_p1 = esl_sext<28,25>(p_shl9_i_fu_887_p3.read());
}

void parseColorsToCenterPixel::thread_p_shl9_i_fu_887_p3() {
    p_shl9_i_fu_887_p3 = esl_concat<17,8>(tmp_30_reg_1241.read(), ap_const_lv8_0);
}

void parseColorsToCenterPixel::thread_p_shl9_i_i_cast_fu_562_p1() {
    p_shl9_i_i_cast_fu_562_p1 = esl_sext<28,25>(p_shl9_i_i_fu_555_p3.read());
}

void parseColorsToCenterPixel::thread_p_shl9_i_i_fu_555_p3() {
    p_shl9_i_i_fu_555_p3 = esl_concat<17,8>(tmp_19_reg_1121.read(), ap_const_lv8_0);
}

void parseColorsToCenterPixel::thread_p_shl_i_cast_fu_883_p1() {
    p_shl_i_cast_fu_883_p1 = esl_sext<28,27>(p_shl_i_fu_876_p3.read());
}

void parseColorsToCenterPixel::thread_p_shl_i_fu_876_p3() {
    p_shl_i_fu_876_p3 = esl_concat<17,10>(tmp_30_reg_1241.read(), ap_const_lv10_0);
}

void parseColorsToCenterPixel::thread_p_shl_i_i_cast_fu_551_p1() {
    p_shl_i_i_cast_fu_551_p1 = esl_sext<28,27>(p_shl_i_i_fu_544_p3.read());
}

void parseColorsToCenterPixel::thread_p_shl_i_i_fu_544_p3() {
    p_shl_i_i_fu_544_p3 = esl_concat<17,10>(tmp_19_reg_1121.read(), ap_const_lv10_0);
}

void parseColorsToCenterPixel::thread_pixelArray_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter15.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        pixelArray_address0 = ap_reg_pp1_iter14_pixelArray_addr_3_reg_1220.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        pixelArray_address0 =  (sc_lv<2>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        pixelArray_address0 =  (sc_lv<2>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        pixelArray_address0 =  (sc_lv<2>) (ap_const_lv64_1);
    } else {
        pixelArray_address0 =  (sc_lv<2>) ("XX");
    }
}

void parseColorsToCenterPixel::thread_pixelArray_address1() {
    pixelArray_address1 = ap_reg_pp1_iter15_pixelArray_addr_3_reg_1220.read();
}

void parseColorsToCenterPixel::thread_pixelArray_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter15.read())))) {
        pixelArray_ce0 = ap_const_logic_1;
    } else {
        pixelArray_ce0 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_pixelArray_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter16.read()))) {
        pixelArray_ce1 = ap_const_logic_1;
    } else {
        pixelArray_ce1 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_pixelArray_d1() {
    pixelArray_d1 = (tmp_48_fu_1042_p2.read() | tmp_49_fu_1048_p2.read());
}

void parseColorsToCenterPixel::thread_pixelArray_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp1_iter15_exitcond_reg_1201.read()))) {
        pixelArray_we1 = ap_const_logic_1;
    } else {
        pixelArray_we1 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_pixelBlue_1_fu_769_p1() {
    pixelBlue_1_fu_769_p1 = tempArray_q0.read().range(8-1, 0);
}

void parseColorsToCenterPixel::thread_pixelBlue_cast_fu_797_p1() {
    pixelBlue_cast_fu_797_p1 = esl_zext<9,8>(pixelBlue_1_fu_769_p1.read());
}

void parseColorsToCenterPixel::thread_pixelBlue_fu_388_p4() {
    pixelBlue_fu_388_p4 = pixelArray_q0.read().range(39, 32);
}

void parseColorsToCenterPixel::thread_pixelBlue_i_cast_fu_426_p1() {
    pixelBlue_i_cast_fu_426_p1 = esl_zext<9,8>(pixelBlue_fu_388_p4.read());
}

void parseColorsToCenterPixel::thread_pixelGreen_1_fu_783_p4() {
    pixelGreen_1_fu_783_p4 = tempArray_q0.read().range(15, 8);
}

void parseColorsToCenterPixel::thread_pixelGreen_cast_fu_793_p1() {
    pixelGreen_cast_fu_793_p1 = esl_zext<9,8>(pixelGreen_1_fu_783_p4.read());
}

void parseColorsToCenterPixel::thread_pixelGreen_fu_412_p4() {
    pixelGreen_fu_412_p4 = pixelArray_q0.read().range(47, 40);
}

void parseColorsToCenterPixel::thread_pixelGreen_i_cast_fu_422_p1() {
    pixelGreen_i_cast_fu_422_p1 = esl_zext<9,8>(pixelGreen_fu_412_p4.read());
}

void parseColorsToCenterPixel::thread_pixelRed_cast_fu_835_p1() {
    pixelRed_cast_fu_835_p1 = esl_zext<9,8>(pixelRed_1_reg_1231.read());
}

void parseColorsToCenterPixel::thread_pixelRed_fu_398_p4() {
    pixelRed_fu_398_p4 = pixelArray_q0.read().range(55, 48);
}

void parseColorsToCenterPixel::thread_pixelRed_i_cast_fu_408_p1() {
    pixelRed_i_cast_fu_408_p1 = esl_zext<9,8>(pixelRed_fu_398_p4.read());
}

void parseColorsToCenterPixel::thread_powerSummation_V_1_fu_586_p2() {
    powerSummation_V_1_fu_586_p2 = (!p_Val2_3_cast_fu_529_p1.read().is_01() || !tmp8_cast_fu_582_p1.read().is_01())? sc_lv<30>(): (sc_bigint<30>(p_Val2_3_cast_fu_529_p1.read()) + sc_bigint<30>(tmp8_cast_fu_582_p1.read()));
}

void parseColorsToCenterPixel::thread_powerSummation_V_fu_918_p2() {
    powerSummation_V_fu_918_p2 = (!p_Val2_cast_fu_861_p1.read().is_01() || !tmp9_cast_fu_914_p1.read().is_01())? sc_lv<30>(): (sc_bigint<30>(p_Val2_cast_fu_861_p1.read()) + sc_bigint<30>(tmp9_cast_fu_914_p1.read()));
}

void parseColorsToCenterPixel::thread_result_1_fu_810_p0() {
    result_1_fu_810_p0 =  (sc_lv<9>) (number_assign_1_cast_fu_806_p1.read());
}

void parseColorsToCenterPixel::thread_result_1_fu_810_p1() {
    result_1_fu_810_p1 =  (sc_lv<9>) (number_assign_1_cast_fu_806_p1.read());
}

void parseColorsToCenterPixel::thread_result_1_fu_810_p2() {
    result_1_fu_810_p2 = (!result_1_fu_810_p0.read().is_01() || !result_1_fu_810_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_1_fu_810_p0.read()) * sc_bigint<9>(result_1_fu_810_p1.read());
}

void parseColorsToCenterPixel::thread_result_2_fu_515_p0() {
    result_2_fu_515_p0 =  (sc_lv<9>) (number_assign_i_cast_fu_512_p1.read());
}

void parseColorsToCenterPixel::thread_result_2_fu_515_p1() {
    result_2_fu_515_p1 =  (sc_lv<9>) (number_assign_i_cast_fu_512_p1.read());
}

void parseColorsToCenterPixel::thread_result_2_fu_515_p2() {
    result_2_fu_515_p2 = (!result_2_fu_515_p0.read().is_01() || !result_2_fu_515_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_2_fu_515_p0.read()) * sc_bigint<9>(result_2_fu_515_p1.read());
}

void parseColorsToCenterPixel::thread_result_3_fu_487_p0() {
    result_3_fu_487_p0 =  (sc_lv<9>) (number_assign_3_i_ca_fu_483_p1.read());
}

void parseColorsToCenterPixel::thread_result_3_fu_487_p1() {
    result_3_fu_487_p1 =  (sc_lv<9>) (number_assign_3_i_ca_fu_483_p1.read());
}

void parseColorsToCenterPixel::thread_result_3_fu_487_p2() {
    result_3_fu_487_p2 = (!result_3_fu_487_p0.read().is_01() || !result_3_fu_487_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_3_fu_487_p0.read()) * sc_bigint<9>(result_3_fu_487_p1.read());
}

void parseColorsToCenterPixel::thread_result_fu_847_p0() {
    result_fu_847_p0 =  (sc_lv<9>) (number_assign_cast_c_fu_843_p1.read());
}

void parseColorsToCenterPixel::thread_result_fu_847_p1() {
    result_fu_847_p1 =  (sc_lv<9>) (number_assign_cast_c_fu_843_p1.read());
}

void parseColorsToCenterPixel::thread_result_fu_847_p2() {
    result_fu_847_p2 = (!result_fu_847_p0.read().is_01() || !result_fu_847_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_fu_847_p0.read()) * sc_bigint<9>(result_fu_847_p1.read());
}

void parseColorsToCenterPixel::thread_selectedColorArray_address0() {
    selectedColorArray_address0 =  (sc_lv<3>) (tmp_fu_664_p1.read());
}

void parseColorsToCenterPixel::thread_selectedColorArray_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        selectedColorArray_ce0 = ap_const_logic_1;
    } else {
        selectedColorArray_ce0 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_tempArray_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        tempArray_address0 =  (sc_lv<3>) (tmp_8_fu_735_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        tempArray_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tempArray_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tempArray_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tempArray_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else {
        tempArray_address0 =  (sc_lv<3>) ("XXX");
    }
}

void parseColorsToCenterPixel::thread_tempArray_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        tempArray_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tempArray_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tempArray_address1 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tempArray_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else {
        tempArray_address1 =  (sc_lv<3>) ("XXX");
    }
}

void parseColorsToCenterPixel::thread_tempArray_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        tempArray_ce0 = ap_const_logic_1;
    } else {
        tempArray_ce0 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_tempArray_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        tempArray_ce1 = ap_const_logic_1;
    } else {
        tempArray_ce1 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_tempArray_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        tempArray_d0 = reg_382.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tempArray_d0 = tmp_5_fu_659_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tempArray_d0 = tmp_3_fu_644_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tempArray_d0 = tmp_4_fu_631_p1.read();
    } else {
        tempArray_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void parseColorsToCenterPixel::thread_tempArray_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        tempArray_d1 = tmp_2_reg_1162.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tempArray_d1 = tmp_9_reg_1152.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        tempArray_d1 = reg_382.read();
    } else {
        tempArray_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void parseColorsToCenterPixel::thread_tempArray_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        tempArray_we0 = ap_const_logic_1;
    } else {
        tempArray_we0 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_tempArray_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        tempArray_we1 = ap_const_logic_1;
    } else {
        tempArray_we1 = ap_const_logic_0;
    }
}

void parseColorsToCenterPixel::thread_tmp8_cast_fu_582_p1() {
    tmp8_cast_fu_582_p1 = esl_sext<30,29>(tmp8_fu_576_p2.read());
}

void parseColorsToCenterPixel::thread_tmp8_fu_576_p2() {
    tmp8_fu_576_p2 = (!p_Val2_5_i6_cast_c_fu_572_p1.read().is_01() || !p_Val2_4_cast_fu_540_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(p_Val2_5_i6_cast_c_fu_572_p1.read()) + sc_bigint<29>(p_Val2_4_cast_fu_540_p1.read()));
}

void parseColorsToCenterPixel::thread_tmp9_cast_fu_914_p1() {
    tmp9_cast_fu_914_p1 = esl_sext<30,29>(tmp9_fu_908_p2.read());
}

void parseColorsToCenterPixel::thread_tmp9_fu_908_p2() {
    tmp9_fu_908_p2 = (!p_Val2_2_cast_cast_fu_904_p1.read().is_01() || !p_Val2_1_cast_fu_872_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(p_Val2_2_cast_cast_fu_904_p1.read()) + sc_bigint<29>(p_Val2_1_cast_fu_872_p1.read()));
}

void parseColorsToCenterPixel::thread_tmp_10_fu_521_p3() {
    tmp_10_fu_521_p3 = esl_concat<18,9>(result_2_fu_515_p2.read(), ap_const_lv9_0);
}

void parseColorsToCenterPixel::thread_tmp_11_fu_451_p3() {
    tmp_11_fu_451_p3 = p_color_array_q0.read().range(16, 16);
}

void parseColorsToCenterPixel::thread_tmp_13_fu_533_p3() {
    tmp_13_fu_533_p3 = esl_concat<18,10>(result_3_reg_1116.read(), ap_const_lv10_0);
}

void parseColorsToCenterPixel::thread_tmp_16_fu_924_p3() {
    tmp_16_fu_924_p3 = esl_concat<2,5>(ap_reg_pp1_iter14_tmp_24_reg_1226.read(), ap_const_lv5_0);
}

void parseColorsToCenterPixel::thread_tmp_17_fu_931_p2() {
    tmp_17_fu_931_p2 = (tmp_16_fu_924_p3.read() | ap_const_lv7_1F);
}

void parseColorsToCenterPixel::thread_tmp_19_fu_506_p0() {
    tmp_19_fu_506_p0 = number_assign_5_fu_493_p2.read();
}

void parseColorsToCenterPixel::thread_tmp_19_fu_506_p1() {
    tmp_19_fu_506_p1 = number_assign_5_fu_493_p2.read();
}

void parseColorsToCenterPixel::thread_tmp_19_fu_506_p2() {
    tmp_19_fu_506_p2 = (!tmp_19_fu_506_p0.read().is_01() || !tmp_19_fu_506_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(tmp_19_fu_506_p0.read()) * sc_bigint<9>(tmp_19_fu_506_p1.read());
}

void parseColorsToCenterPixel::thread_tmp_1_fu_669_p2() {
    tmp_1_fu_669_p2 = (!selectedColorArray_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(selectedColorArray_q0.read() == ap_const_lv32_1);
}

void parseColorsToCenterPixel::thread_tmp_20_fu_853_p3() {
    tmp_20_fu_853_p3 = esl_concat<18,9>(result_fu_847_p2.read(), ap_const_lv9_0);
}

void parseColorsToCenterPixel::thread_tmp_21_fu_949_p4() {
    tmp_21_fu_949_p4 = result_V_reg_1252.read().range(19, 8);
}

void parseColorsToCenterPixel::thread_tmp_22_fu_679_p3() {
    tmp_22_fu_679_p3 = p_color_array_q0.read().range(16, 16);
}

void parseColorsToCenterPixel::thread_tmp_23_fu_865_p3() {
    tmp_23_fu_865_p3 = esl_concat<18,10>(result_1_reg_1236.read(), ap_const_lv10_0);
}

void parseColorsToCenterPixel::thread_tmp_25_fu_721_p2() {
    tmp_25_fu_721_p2 = (!next_urem_fu_715_p2.read().is_01() || !ap_const_lv4_3.is_01())? sc_lv<1>(): (sc_biguint<4>(next_urem_fu_715_p2.read()) < sc_biguint<4>(ap_const_lv4_3));
}

void parseColorsToCenterPixel::thread_tmp_30_fu_829_p0() {
    tmp_30_fu_829_p0 = number_assign_2_fu_816_p2.read();
}

void parseColorsToCenterPixel::thread_tmp_30_fu_829_p1() {
    tmp_30_fu_829_p1 = number_assign_2_fu_816_p2.read();
}

void parseColorsToCenterPixel::thread_tmp_30_fu_829_p2() {
    tmp_30_fu_829_p2 = (!tmp_30_fu_829_p0.read().is_01() || !tmp_30_fu_829_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(tmp_30_fu_829_p0.read()) * sc_bigint<9>(tmp_30_fu_829_p1.read());
}

void parseColorsToCenterPixel::thread_tmp_31_fu_745_p1() {
    tmp_31_fu_745_p1 = i1_reg_335.read().range(3-1, 0);
}

void parseColorsToCenterPixel::thread_tmp_32_fu_937_p2() {
    tmp_32_fu_937_p2 = (!tmp_16_fu_924_p3.read().is_01() || !tmp_17_fu_931_p2.read().is_01())? sc_lv<1>(): (sc_biguint<7>(tmp_16_fu_924_p3.read()) > sc_biguint<7>(tmp_17_fu_931_p2.read()));
}

void parseColorsToCenterPixel::thread_tmp_33_fu_958_p1() {
    tmp_33_fu_958_p1 = esl_zext<96,12>(tmp_21_fu_949_p4.read());
}

void parseColorsToCenterPixel::thread_tmp_34_fu_943_p2() {
    tmp_34_fu_943_p2 = (!ap_const_lv7_5F.is_01() || !tmp_16_fu_924_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_16_fu_924_p3.read()));
}

void parseColorsToCenterPixel::thread_tmp_35_fu_962_p3() {
    tmp_35_fu_962_p3 = (!tmp_32_reg_1270.read()[0].is_01())? sc_lv<7>(): ((tmp_32_reg_1270.read()[0].to_bool())? tmp_16_reg_1257.read(): tmp_17_reg_1264.read());
}

void parseColorsToCenterPixel::thread_tmp_36_fu_967_p3() {
    tmp_36_fu_967_p3 = (!tmp_32_reg_1270.read()[0].is_01())? sc_lv<7>(): ((tmp_32_reg_1270.read()[0].to_bool())? tmp_17_reg_1264.read(): tmp_16_reg_1257.read());
}

void parseColorsToCenterPixel::thread_tmp_37_fu_972_p3() {
    tmp_37_fu_972_p3 = (!tmp_32_reg_1270.read()[0].is_01())? sc_lv<7>(): ((tmp_32_reg_1270.read()[0].to_bool())? tmp_34_reg_1278.read(): tmp_16_reg_1257.read());
}

void parseColorsToCenterPixel::thread_tmp_38_fu_977_p2() {
    tmp_38_fu_977_p2 = (!ap_const_lv7_5F.is_01() || !tmp_35_fu_962_p3.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_5F) - sc_biguint<7>(tmp_35_fu_962_p3.read()));
}

void parseColorsToCenterPixel::thread_tmp_39_fu_983_p1() {
    tmp_39_fu_983_p1 = esl_zext<96,7>(tmp_37_fu_972_p3.read());
}

void parseColorsToCenterPixel::thread_tmp_3_fu_644_p1() {
    tmp_3_fu_644_p1 = pixelArray_q0.read().range(32-1, 0);
}

void parseColorsToCenterPixel::thread_tmp_40_fu_987_p1() {
    tmp_40_fu_987_p1 = esl_zext<96,7>(tmp_36_fu_967_p3.read());
}

void parseColorsToCenterPixel::thread_tmp_41_fu_991_p1() {
    tmp_41_fu_991_p1 = esl_zext<96,7>(tmp_38_fu_977_p2.read());
}

void parseColorsToCenterPixel::thread_tmp_42_fu_995_p2() {
    tmp_42_fu_995_p2 = (!tmp_39_fu_983_p1.read().is_01())? sc_lv<96>(): tmp_33_fu_958_p1.read() << (unsigned short)tmp_39_fu_983_p1.read().to_uint();
}

void parseColorsToCenterPixel::thread_tmp_43_fu_1001_p4() {
    tmp_43_fu_1001_p4 = tmp_42_fu_995_p2.read().range(0, 95);
}

void parseColorsToCenterPixel::thread_tmp_44_fu_1011_p3() {
    tmp_44_fu_1011_p3 = (!tmp_32_reg_1270.read()[0].is_01())? sc_lv<96>(): ((tmp_32_reg_1270.read()[0].to_bool())? tmp_43_fu_1001_p4.read(): tmp_42_fu_995_p2.read());
}

void parseColorsToCenterPixel::thread_tmp_45_fu_1018_p2() {
    tmp_45_fu_1018_p2 = (!tmp_40_fu_987_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF << (unsigned short)tmp_40_fu_987_p1.read().to_uint();
}

void parseColorsToCenterPixel::thread_tmp_46_fu_1024_p2() {
    tmp_46_fu_1024_p2 = (!tmp_41_fu_991_p1.read().is_01())? sc_lv<96>(): ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF >> (unsigned short)tmp_41_fu_991_p1.read().to_uint();
}

void parseColorsToCenterPixel::thread_tmp_47_fu_1036_p2() {
    tmp_47_fu_1036_p2 = (p_demorgan_fu_1030_p2.read() ^ ap_const_lv96_FFFFFFFFFFFFFFFFFFFFFFFF);
}

void parseColorsToCenterPixel::thread_tmp_48_fu_1042_p2() {
    tmp_48_fu_1042_p2 = (pixelArray_q0.read() & tmp_47_fu_1036_p2.read());
}

void parseColorsToCenterPixel::thread_tmp_49_fu_1048_p2() {
    tmp_49_fu_1048_p2 = (tmp_44_fu_1011_p3.read() & p_demorgan_fu_1030_p2.read());
}

void parseColorsToCenterPixel::thread_tmp_4_fu_631_p1() {
    tmp_4_fu_631_p1 = pixelArray_load_reg_1066.read().range(32-1, 0);
}

void parseColorsToCenterPixel::thread_tmp_5_fu_659_p1() {
    tmp_5_fu_659_p1 = pixelArray_q0.read().range(32-1, 0);
}

void parseColorsToCenterPixel::thread_tmp_8_fu_735_p1() {
    tmp_8_fu_735_p1 = esl_zext<64,4>(i1_reg_335.read());
}

void parseColorsToCenterPixel::thread_tmp_fu_664_p1() {
    tmp_fu_664_p1 = esl_sext<64,32>(centerColor_reg_299.read());
}

void parseColorsToCenterPixel::thread_tmp_i5_fu_442_p1() {
    tmp_i5_fu_442_p1 = esl_zext<64,3>(ap_phi_mux_minimumDistanceIndex_phi_fu_315_p4.read());
}

void parseColorsToCenterPixel::thread_tmp_i7_fu_609_p2() {
    tmp_i7_fu_609_p2 = (!minimumDistance_fu_606_p1.read().is_01() || !minimumDistance_i_reg_323.read().is_01())? sc_lv<1>(): (sc_bigint<32>(minimumDistance_fu_606_p1.read()) < sc_bigint<32>(minimumDistance_i_reg_323.read()));
}

void parseColorsToCenterPixel::thread_tmp_s_fu_740_p1() {
    tmp_s_fu_740_p1 = esl_zext<64,4>(phi_urem_reg_346.read());
}

void parseColorsToCenterPixel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter16.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_i_fu_430_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter16.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_i_fu_430_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_669_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter16.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter15.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_703_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter16.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter15.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_703_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void parseColorsToCenterPixel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pixelArray_address0\" :  \"" << pixelArray_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pixelArray_ce0\" :  \"" << pixelArray_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"pixelArray_q0\" :  \"" << pixelArray_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pixelArray_address1\" :  \"" << pixelArray_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pixelArray_ce1\" :  \"" << pixelArray_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pixelArray_we1\" :  \"" << pixelArray_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"pixelArray_d1\" :  \"" << pixelArray_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"selectedColorArray_address0\" :  \"" << selectedColorArray_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"selectedColorArray_ce0\" :  \"" << selectedColorArray_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"selectedColorArray_q0\" :  \"" << selectedColorArray_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

