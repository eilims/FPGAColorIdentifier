// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getPixelClassification_Stream.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getPixelClassification_Stream::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getPixelClassification_Stream::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> getPixelClassification_Stream::ap_ST_fsm_state1 = "1";
const sc_lv<2> getPixelClassification_Stream::ap_ST_fsm_pp0_stage0 = "10";
const bool getPixelClassification_Stream::ap_const_boolean_1 = true;
const sc_lv<1> getPixelClassification_Stream::ap_const_lv1_0 = "0";
const sc_lv<1> getPixelClassification_Stream::ap_const_lv1_1 = "1";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_0 = "00";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_2 = "10";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_3 = "11";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_1 = "1";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_1 = "1";
const bool getPixelClassification_Stream::ap_const_boolean_0 = false;
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_2 = "10";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_3 = "11";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_4 = "100";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_5 = "101";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FFFF = "1111111111111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF00FF = "111111110000000011111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FFFF00 = "111111111111111100000000";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF00 = "1111111100000000";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF = "11111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF0000 = "111111110000000000000000";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_1 = "1";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_2 = "10";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_3 = "11";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_6 = "110";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_10 = "10000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_17 = "10111";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_8 = "1000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_F = "1111";
const sc_lv<9> getPixelClassification_Stream::ap_const_lv9_FF = "11111111";
const sc_lv<9> getPixelClassification_Stream::ap_const_lv9_0 = "000000000";
const sc_lv<10> getPixelClassification_Stream::ap_const_lv10_0 = "0000000000";
const sc_lv<8> getPixelClassification_Stream::ap_const_lv8_0 = "00000000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_13 = "10011";
const sc_lv<12> getPixelClassification_Stream::ap_const_lv12_96 = "10010110";

getPixelClassification_Stream::getPixelClassification_Stream(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_color_array_stream_s_U = new getPixelClassificbkb("p_color_array_stream_s_U");
    p_color_array_stream_s_U->clk(ap_clk);
    p_color_array_stream_s_U->reset(ap_rst_n_inv);
    p_color_array_stream_s_U->address0(p_color_array_stream_s_address0);
    p_color_array_stream_s_U->ce0(p_color_array_stream_s_ce0);
    p_color_array_stream_s_U->q0(p_color_array_stream_s_q0);
    p_color_array_stream_s_U->address1(p_color_array_stream_s_address1);
    p_color_array_stream_s_U->ce1(p_color_array_stream_s_ce1);
    p_color_array_stream_s_U->q1(p_color_array_stream_s_q1);
    p_color_array_stream_s_U->address2(p_color_array_stream_s_address2);
    p_color_array_stream_s_U->ce2(p_color_array_stream_s_ce2);
    p_color_array_stream_s_U->q2(p_color_array_stream_s_q2);
    grp_fxp_sqrt_fu_264 = new fxp_sqrt("grp_fxp_sqrt_fu_264");
    grp_fxp_sqrt_fu_264->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_264->ap_rst(ap_rst_n_inv);
    grp_fxp_sqrt_fu_264->in_val_V_read(grp_fxp_sqrt_fu_264_in_val_V_read);
    grp_fxp_sqrt_fu_264->ap_return(grp_fxp_sqrt_fu_264_ap_return);
    grp_fxp_sqrt_fu_264->ap_ce(grp_fxp_sqrt_fu_264_ap_ce);
    grp_fxp_sqrt_fu_269 = new fxp_sqrt("grp_fxp_sqrt_fu_269");
    grp_fxp_sqrt_fu_269->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_269->ap_rst(ap_rst_n_inv);
    grp_fxp_sqrt_fu_269->in_val_V_read(grp_fxp_sqrt_fu_269_in_val_V_read);
    grp_fxp_sqrt_fu_269->ap_return(grp_fxp_sqrt_fu_269_ap_return);
    grp_fxp_sqrt_fu_269->ap_ce(grp_fxp_sqrt_fu_269_ap_ce);
    grp_fxp_sqrt_fu_274 = new fxp_sqrt("grp_fxp_sqrt_fu_274");
    grp_fxp_sqrt_fu_274->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_274->ap_rst(ap_rst_n_inv);
    grp_fxp_sqrt_fu_274->in_val_V_read(powerSummation_V_2_reg_1116);
    grp_fxp_sqrt_fu_274->ap_return(grp_fxp_sqrt_fu_274_ap_return);
    grp_fxp_sqrt_fu_274->ap_ce(grp_fxp_sqrt_fu_274_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_177 );
    sensitive << ( ap_enable_reg_pp0_iter19 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_177 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_block_state20_io );
    sensitive << ( ap_block_state21_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_177 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_block_state20_io );
    sensitive << ( ap_block_state21_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_io);
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_predicate_op216_write_state20 );
    sensitive << ( ap_predicate_op217_write_state20 );
    sensitive << ( ap_predicate_op218_write_state20 );
    sensitive << ( ap_predicate_op219_write_state20 );
    sensitive << ( ap_predicate_op220_write_state20 );
    sensitive << ( ap_predicate_op221_write_state20 );
    sensitive << ( ap_predicate_op222_write_state20 );

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_io);
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_predicate_op228_write_state21 );
    sensitive << ( ap_predicate_op230_write_state21 );
    sensitive << ( ap_predicate_op232_write_state21 );
    sensitive << ( ap_predicate_op234_write_state21 );
    sensitive << ( ap_predicate_op236_write_state21 );
    sensitive << ( ap_predicate_op238_write_state21 );
    sensitive << ( ap_predicate_op240_write_state21 );

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);
    sensitive << ( out_pixel_V_1_ack_in );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( do_init_reg_177 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_165);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_620);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );

    SC_METHOD(thread_ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4);
    sensitive << ( in_pixel_V_0_data_out );
    sensitive << ( do_init_reg_177 );
    sensitive << ( ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6 );
    sensitive << ( ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222 );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( in_pixel_V9_rewind_reg_208 );
    sensitive << ( in_pixel_V9_phi_reg_222 );
    sensitive << ( ap_reg_pp0_iter1_exitcond_reg_1013 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_minimumDistance4_phi_fu_240_p6);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( minimumDistance4_reg_236 );
    sensitive << ( ap_reg_pp0_iter16_exitcond_reg_1013 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( minimumDistance_1_2_fu_974_p3 );

    SC_METHOD(thread_ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );
    sensitive << ( minimumDistanceIndex_2_reg_250 );

    SC_METHOD(thread_ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6);
    sensitive << ( exitcond_reg_1013 );
    sensitive << ( minimumDistanceIndex_3_reg_193 );
    sensitive << ( tmp_29_reg_1008 );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222);

    SC_METHOD(thread_ap_predicate_op216_write_state20);
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op217_write_state20);
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op218_write_state20);
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op219_write_state20);
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op220_write_state20);
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op221_write_state20);
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op222_write_state20);
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op228_write_state21);
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op230_write_state21);
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op232_write_state21);
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op234_write_state21);
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op236_write_state21);
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op238_write_state21);
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_ap_predicate_op240_write_state21);
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_colorBlue_V_1_fu_430_p4);
    sensitive << ( p_color_array_stream_s_q1 );

    SC_METHOD(thread_colorBlue_V_2_fu_486_p4);
    sensitive << ( p_color_array_stream_s_q2 );

    SC_METHOD(thread_colorBlue_V_fu_362_p4);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_colorGreen_V_1_fu_426_p1);
    sensitive << ( p_color_array_stream_s_q1 );

    SC_METHOD(thread_colorGreen_V_2_fu_482_p1);
    sensitive << ( p_color_array_stream_s_q2 );

    SC_METHOD(thread_colorGreen_V_fu_358_p1);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_exitcond_fu_320_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( i_2_fu_310_p2 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_264_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_264_in_val_V_read);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( p_Val2_cast_fu_678_p1 );
    sensitive << ( tmp6_cast_fu_702_p1 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_269_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_269_in_val_V_read);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( p_Val2_3_cast_fu_720_p1 );
    sensitive << ( tmp10_cast_fu_744_p1 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_274_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_1_fu_299_p2);
    sensitive << ( minimumDistanceIndex_fu_279_p1 );

    SC_METHOD(thread_i_2_fu_310_p2);
    sensitive << ( minimumDistanceIndex_fu_279_p1 );

    SC_METHOD(thread_i_fu_288_p2);
    sensitive << ( minimumDistanceIndex_fu_279_p1 );

    SC_METHOD(thread_in_pixel_V_0_ack_in);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_in_pixel_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_177 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_pixel_V_0_data_out);
    sensitive << ( in_pixel_V_0_payload_A );
    sensitive << ( in_pixel_V_0_payload_B );
    sensitive << ( in_pixel_V_0_sel );

    SC_METHOD(thread_in_pixel_V_0_load_A);
    sensitive << ( in_pixel_V_0_sel_wr );
    sensitive << ( in_pixel_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_V_0_load_B);
    sensitive << ( in_pixel_V_0_sel_wr );
    sensitive << ( in_pixel_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_V_0_sel);
    sensitive << ( in_pixel_V_0_sel_rd );

    SC_METHOD(thread_in_pixel_V_0_state_cmp_full);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_in_pixel_V_0_vld_in);
    sensitive << ( in_pixel_V_TVALID );

    SC_METHOD(thread_in_pixel_V_0_vld_out);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_in_pixel_V_TDATA_blk_n);
    sensitive << ( in_pixel_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( do_init_reg_177 );

    SC_METHOD(thread_in_pixel_V_TREADY);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_lhs_V_1_fu_390_p1);
    sensitive << ( pixelGreen_V_fu_336_p1 );

    SC_METHOD(thread_lhs_V_2_fu_404_p1);
    sensitive << ( pixelBlue_V_fu_340_p4 );

    SC_METHOD(thread_lhs_V_fu_372_p1);
    sensitive << ( pixelRed_V_fu_326_p4 );

    SC_METHOD(thread_minimumDistanceIndex_1_fu_921_p1);
    sensitive << ( ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_193 );

    SC_METHOD(thread_minimumDistanceIndex_fu_279_p1);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6 );

    SC_METHOD(thread_minimumDistance_1_1_fu_903_p3);
    sensitive << ( or_cond_1_fu_897_p2 );
    sensitive << ( tmp_5_i1_fu_883_p1 );
    sensitive << ( minimumDistance_1_fu_875_p3 );

    SC_METHOD(thread_minimumDistance_1_2_fu_974_p3);
    sensitive << ( minimumDistance_1_1_reg_1147 );
    sensitive << ( tmp_5_i2_fu_925_p1 );
    sensitive << ( or_cond_2_fu_938_p2 );

    SC_METHOD(thread_minimumDistance_1_fu_875_p3);
    sensitive << ( or_cond_14_fu_870_p2 );
    sensitive << ( ap_phi_mux_minimumDistance4_phi_fu_240_p6 );
    sensitive << ( tmp_5_i_fu_861_p1 );

    SC_METHOD(thread_newSel1_fu_959_p3);
    sensitive << ( or_cond_14_reg_1137 );
    sensitive << ( ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6 );
    sensitive << ( minimumDistanceIndex_1_fu_921_p1 );

    SC_METHOD(thread_newSel2_fu_966_p3);
    sensitive << ( or_cond_fu_954_p2 );
    sensitive << ( newSel_cast_fu_950_p1 );
    sensitive << ( newSel1_fu_959_p3 );

    SC_METHOD(thread_newSel_cast_fu_950_p1);
    sensitive << ( newSel_fu_944_p3 );

    SC_METHOD(thread_newSel_fu_944_p3);
    sensitive << ( ap_reg_pp0_iter16_i_reg_988 );
    sensitive << ( ap_reg_pp0_iter16_i_1_reg_998 );
    sensitive << ( or_cond_2_fu_938_p2 );

    SC_METHOD(thread_or_cond_14_fu_870_p2);
    sensitive << ( tmp_2_reg_1126 );
    sensitive << ( tmp_1_fu_864_p2 );

    SC_METHOD(thread_or_cond_1_fu_897_p2);
    sensitive << ( tmp_1_1_fu_886_p2 );
    sensitive << ( tmp_2_1_fu_892_p2 );

    SC_METHOD(thread_or_cond_2_fu_938_p2);
    sensitive << ( tmp_1_2_fu_928_p2 );
    sensitive << ( tmp_2_2_fu_933_p2 );

    SC_METHOD(thread_or_cond_fu_954_p2);
    sensitive << ( or_cond_1_reg_1142 );
    sensitive << ( or_cond_2_fu_938_p2 );

    SC_METHOD(thread_out_pixel_V_1_ack_in);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_out_pixel_V_1_ack_out);
    sensitive << ( out_pixel_V_TREADY );

    SC_METHOD(thread_out_pixel_V_1_data_in);
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_predicate_op216_write_state20 );
    sensitive << ( ap_predicate_op217_write_state20 );
    sensitive << ( ap_predicate_op218_write_state20 );
    sensitive << ( ap_predicate_op219_write_state20 );
    sensitive << ( ap_predicate_op220_write_state20 );
    sensitive << ( ap_predicate_op221_write_state20 );
    sensitive << ( ap_predicate_op222_write_state20 );
    sensitive << ( ap_reg_pp0_iter17_in_pixel_V9_phi_reg_222 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_pixel_V_1_data_out);
    sensitive << ( out_pixel_V_1_payload_A );
    sensitive << ( out_pixel_V_1_payload_B );
    sensitive << ( out_pixel_V_1_sel );

    SC_METHOD(thread_out_pixel_V_1_load_A);
    sensitive << ( out_pixel_V_1_sel_wr );
    sensitive << ( out_pixel_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_V_1_load_B);
    sensitive << ( out_pixel_V_1_sel_wr );
    sensitive << ( out_pixel_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_V_1_sel);
    sensitive << ( out_pixel_V_1_sel_rd );

    SC_METHOD(thread_out_pixel_V_1_state_cmp_full);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_out_pixel_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_predicate_op216_write_state20 );
    sensitive << ( ap_predicate_op217_write_state20 );
    sensitive << ( ap_predicate_op218_write_state20 );
    sensitive << ( ap_predicate_op219_write_state20 );
    sensitive << ( ap_predicate_op220_write_state20 );
    sensitive << ( ap_predicate_op221_write_state20 );
    sensitive << ( ap_predicate_op222_write_state20 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_pixel_V_1_vld_out);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_out_pixel_V_TDATA);
    sensitive << ( out_pixel_V_1_data_out );

    SC_METHOD(thread_out_pixel_V_TDATA_blk_n);
    sensitive << ( out_pixel_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_reg_pp0_iter17_exitcond_reg_1013 );
    sensitive << ( newSel2_reg_1159 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_1013 );
    sensitive << ( ap_reg_pp0_iter18_newSel2_reg_1159 );

    SC_METHOD(thread_out_pixel_V_TVALID);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_p_Val2_10_cast_cas_fu_815_p1);
    sensitive << ( p_Val2_2_fu_809_p2 );

    SC_METHOD(thread_p_Val2_1_cast_fu_689_p1);
    sensitive << ( tmp_6_fu_682_p3 );

    SC_METHOD(thread_p_Val2_1_fu_644_p2);
    sensitive << ( p_shl_i1_cast_fu_628_p1 );
    sensitive << ( p_shl3_i1_cast_fu_640_p1 );

    SC_METHOD(thread_p_Val2_2_cast_cast_fu_693_p1);
    sensitive << ( p_Val2_s_reg_1075 );

    SC_METHOD(thread_p_Val2_2_fu_809_p2);
    sensitive << ( p_shl_i2_cast_fu_794_p1 );
    sensitive << ( p_shl3_i2_cast_fu_805_p1 );

    SC_METHOD(thread_p_Val2_3_cast_fu_720_p1);
    sensitive << ( tmp_5_fu_713_p3 );

    SC_METHOD(thread_p_Val2_4_cast_fu_731_p1);
    sensitive << ( tmp_8_fu_724_p3 );

    SC_METHOD(thread_p_Val2_6_cast5_fu_772_p1);
    sensitive << ( tmp_11_fu_764_p3 );

    SC_METHOD(thread_p_Val2_6_cast_cast_fu_735_p1);
    sensitive << ( p_Val2_1_reg_1090 );

    SC_METHOD(thread_p_Val2_7_cast_fu_783_p1);
    sensitive << ( tmp_12_fu_776_p3 );

    SC_METHOD(thread_p_Val2_cast_fu_678_p1);
    sensitive << ( tmp_4_fu_671_p3 );

    SC_METHOD(thread_p_Val2_s_fu_584_p2);
    sensitive << ( p_shl_i_cast_fu_568_p1 );
    sensitive << ( p_shl3_i_cast_fu_580_p1 );

    SC_METHOD(thread_p_cast1_fu_530_p1);
    sensitive << ( r_V_reg_1017 );

    SC_METHOD(thread_p_cast2_fu_539_p1);
    sensitive << ( r_V_1_reg_1022 );

    SC_METHOD(thread_p_cast3_fu_590_p1);
    sensitive << ( r_V_3_reg_1033 );

    SC_METHOD(thread_p_cast4_fu_599_p1);
    sensitive << ( r_V_4_reg_1038 );

    SC_METHOD(thread_p_cast5_fu_755_p1);
    sensitive << ( ap_reg_pp0_iter2_r_V_6_reg_1049 );

    SC_METHOD(thread_p_cast_fu_650_p1);
    sensitive << ( r_V_7_reg_1054 );

    SC_METHOD(thread_p_color_array_stream_s_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp1_fu_283_p1 );

    SC_METHOD(thread_p_color_array_stream_s_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_fu_294_p1 );

    SC_METHOD(thread_p_color_array_stream_s_address2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_305_p1 );

    SC_METHOD(thread_p_color_array_stream_s_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_color_array_stream_s_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_color_array_stream_s_ce2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_shl3_i1_cast_fu_640_p1);
    sensitive << ( p_shl3_i1_fu_632_p3 );

    SC_METHOD(thread_p_shl3_i1_fu_632_p3);
    sensitive << ( tmp_23_fu_614_p2 );

    SC_METHOD(thread_p_shl3_i2_cast_fu_805_p1);
    sensitive << ( p_shl3_i2_fu_798_p3 );

    SC_METHOD(thread_p_shl3_i2_fu_798_p3);
    sensitive << ( tmp_28_reg_1100 );

    SC_METHOD(thread_p_shl3_i_cast_fu_580_p1);
    sensitive << ( p_shl3_i_fu_572_p3 );

    SC_METHOD(thread_p_shl3_i_fu_572_p3);
    sensitive << ( tmp_16_fu_554_p2 );

    SC_METHOD(thread_p_shl_i1_cast_fu_628_p1);
    sensitive << ( p_shl_i1_fu_620_p3 );

    SC_METHOD(thread_p_shl_i1_fu_620_p3);
    sensitive << ( tmp_23_fu_614_p2 );

    SC_METHOD(thread_p_shl_i2_cast_fu_794_p1);
    sensitive << ( p_shl_i2_fu_787_p3 );

    SC_METHOD(thread_p_shl_i2_fu_787_p3);
    sensitive << ( tmp_28_reg_1100 );

    SC_METHOD(thread_p_shl_i_cast_fu_568_p1);
    sensitive << ( p_shl_i_fu_560_p3 );

    SC_METHOD(thread_p_shl_i_fu_560_p3);
    sensitive << ( tmp_16_fu_554_p2 );

    SC_METHOD(thread_pixelBlue_V_fu_340_p4);
    sensitive << ( ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4 );

    SC_METHOD(thread_pixelGreen_V_fu_336_p1);
    sensitive << ( ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4 );

    SC_METHOD(thread_pixelRed_V_fu_326_p4);
    sensitive << ( ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4 );

    SC_METHOD(thread_powerSummation_V_2_fu_829_p2);
    sensitive << ( p_Val2_6_cast5_fu_772_p1 );
    sensitive << ( tmp14_cast_fu_825_p1 );

    SC_METHOD(thread_r_V_1_fu_398_p2);
    sensitive << ( lhs_V_1_fu_390_p1 );
    sensitive << ( rhs_V_1_fu_394_p1 );

    SC_METHOD(thread_r_V_2_fu_412_p2);
    sensitive << ( lhs_V_2_fu_404_p1 );
    sensitive << ( rhs_V_2_fu_408_p1 );

    SC_METHOD(thread_r_V_3_fu_448_p2);
    sensitive << ( lhs_V_fu_372_p1 );
    sensitive << ( rhs_V_3_cast_fu_440_p3 );

    SC_METHOD(thread_r_V_4_fu_458_p2);
    sensitive << ( lhs_V_1_fu_390_p1 );
    sensitive << ( rhs_V_4_fu_454_p1 );

    SC_METHOD(thread_r_V_5_fu_468_p2);
    sensitive << ( lhs_V_2_fu_404_p1 );
    sensitive << ( rhs_V_5_fu_464_p1 );

    SC_METHOD(thread_r_V_6_fu_504_p2);
    sensitive << ( lhs_V_fu_372_p1 );
    sensitive << ( rhs_V_6_cast_fu_496_p3 );

    SC_METHOD(thread_r_V_7_fu_514_p2);
    sensitive << ( lhs_V_1_fu_390_p1 );
    sensitive << ( rhs_V_7_fu_510_p1 );

    SC_METHOD(thread_r_V_8_fu_524_p2);
    sensitive << ( lhs_V_2_fu_404_p1 );
    sensitive << ( rhs_V_8_fu_520_p1 );

    SC_METHOD(thread_r_V_fu_384_p2);
    sensitive << ( lhs_V_fu_372_p1 );
    sensitive << ( rhs_V_cast_fu_376_p3 );

    SC_METHOD(thread_result_3_fu_593_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast3_fu_590_p1 );

    SC_METHOD(thread_result_3_fu_593_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast3_fu_590_p1 );

    SC_METHOD(thread_result_3_fu_593_p2);
    sensitive << ( result_3_fu_593_p0 );
    sensitive << ( result_3_fu_593_p1 );

    SC_METHOD(thread_result_4_fu_653_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast_fu_650_p1 );

    SC_METHOD(thread_result_4_fu_653_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast_fu_650_p1 );

    SC_METHOD(thread_result_4_fu_653_p2);
    sensitive << ( result_4_fu_653_p0 );
    sensitive << ( result_4_fu_653_p1 );

    SC_METHOD(thread_result_6_fu_602_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast4_fu_599_p1 );

    SC_METHOD(thread_result_6_fu_602_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast4_fu_599_p1 );

    SC_METHOD(thread_result_6_fu_602_p2);
    sensitive << ( result_6_fu_602_p0 );
    sensitive << ( result_6_fu_602_p1 );

    SC_METHOD(thread_result_9_fu_758_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( p_cast5_fu_755_p1 );

    SC_METHOD(thread_result_9_fu_758_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( p_cast5_fu_755_p1 );

    SC_METHOD(thread_result_9_fu_758_p2);
    sensitive << ( result_9_fu_758_p0 );
    sensitive << ( result_9_fu_758_p1 );

    SC_METHOD(thread_result_fu_533_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast1_fu_530_p1 );

    SC_METHOD(thread_result_fu_533_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast1_fu_530_p1 );

    SC_METHOD(thread_result_fu_533_p2);
    sensitive << ( result_fu_533_p0 );
    sensitive << ( result_fu_533_p1 );

    SC_METHOD(thread_result_s_fu_542_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast2_fu_539_p1 );

    SC_METHOD(thread_result_s_fu_542_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( p_cast2_fu_539_p1 );

    SC_METHOD(thread_result_s_fu_542_p2);
    sensitive << ( result_s_fu_542_p0 );
    sensitive << ( result_s_fu_542_p1 );

    SC_METHOD(thread_rhs_V_1_fu_394_p1);
    sensitive << ( colorGreen_V_fu_358_p1 );

    SC_METHOD(thread_rhs_V_2_fu_408_p1);
    sensitive << ( colorBlue_V_fu_362_p4 );

    SC_METHOD(thread_rhs_V_3_cast_fu_440_p3);
    sensitive << ( rhs_V_3_fu_418_p3 );

    SC_METHOD(thread_rhs_V_3_fu_418_p3);
    sensitive << ( p_color_array_stream_s_q1 );

    SC_METHOD(thread_rhs_V_4_fu_454_p1);
    sensitive << ( colorGreen_V_1_fu_426_p1 );

    SC_METHOD(thread_rhs_V_5_fu_464_p1);
    sensitive << ( colorBlue_V_1_fu_430_p4 );

    SC_METHOD(thread_rhs_V_6_cast_fu_496_p3);
    sensitive << ( rhs_V_6_fu_474_p3 );

    SC_METHOD(thread_rhs_V_6_fu_474_p3);
    sensitive << ( p_color_array_stream_s_q2 );

    SC_METHOD(thread_rhs_V_7_fu_510_p1);
    sensitive << ( colorGreen_V_2_fu_482_p1 );

    SC_METHOD(thread_rhs_V_8_fu_520_p1);
    sensitive << ( colorBlue_V_2_fu_486_p4 );

    SC_METHOD(thread_rhs_V_cast_fu_376_p3);
    sensitive << ( rhs_V_fu_350_p3 );

    SC_METHOD(thread_rhs_V_fu_350_p3);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_tmp10_cast_fu_744_p1);
    sensitive << ( tmp10_fu_738_p2 );

    SC_METHOD(thread_tmp10_fu_738_p2);
    sensitive << ( p_Val2_6_cast_cast_fu_735_p1 );
    sensitive << ( p_Val2_4_cast_fu_731_p1 );

    SC_METHOD(thread_tmp14_cast_fu_825_p1);
    sensitive << ( tmp14_fu_819_p2 );

    SC_METHOD(thread_tmp14_fu_819_p2);
    sensitive << ( p_Val2_10_cast_cas_fu_815_p1 );
    sensitive << ( p_Val2_7_cast_fu_783_p1 );

    SC_METHOD(thread_tmp1_fu_283_p1);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6 );

    SC_METHOD(thread_tmp6_cast_fu_702_p1);
    sensitive << ( tmp6_fu_696_p2 );

    SC_METHOD(thread_tmp6_fu_696_p2);
    sensitive << ( p_Val2_2_cast_cast_fu_693_p1 );
    sensitive << ( p_Val2_1_cast_fu_689_p1 );

    SC_METHOD(thread_tmp_11_fu_764_p3);
    sensitive << ( result_9_fu_758_p2 );

    SC_METHOD(thread_tmp_12_fu_776_p3);
    sensitive << ( result_4_reg_1095 );

    SC_METHOD(thread_tmp_16_fu_554_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_2_reg_1027 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_16_fu_554_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_2_reg_1027 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_16_fu_554_p2);
    sensitive << ( tmp_16_fu_554_p0 );
    sensitive << ( tmp_16_fu_554_p1 );

    SC_METHOD(thread_tmp_1_1_fu_886_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( tmp_5_i1_fu_883_p1 );
    sensitive << ( minimumDistance_1_fu_875_p3 );

    SC_METHOD(thread_tmp_1_2_fu_928_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( minimumDistance_1_1_reg_1147 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( tmp_5_i2_fu_925_p1 );

    SC_METHOD(thread_tmp_1_fu_864_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_phi_mux_minimumDistance4_phi_fu_240_p6 );
    sensitive << ( tmp_5_i_fu_861_p1 );

    SC_METHOD(thread_tmp_23_fu_614_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_5_reg_1043 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_23_fu_614_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_5_reg_1043 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_23_fu_614_p2);
    sensitive << ( tmp_23_fu_614_p0 );
    sensitive << ( tmp_23_fu_614_p1 );

    SC_METHOD(thread_tmp_28_fu_665_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_8_reg_1059 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_28_fu_665_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( r_V_8_reg_1059 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_tmp_28_fu_665_p2);
    sensitive << ( tmp_28_fu_665_p0 );
    sensitive << ( tmp_28_fu_665_p1 );

    SC_METHOD(thread_tmp_29_fu_316_p1);
    sensitive << ( i_2_fu_310_p2 );

    SC_METHOD(thread_tmp_2_1_fu_892_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_9_reg_1131 );
    sensitive << ( ap_enable_reg_pp0_iter16 );

    SC_METHOD(thread_tmp_2_2_fu_933_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_14_reg_1153 );
    sensitive << ( ap_enable_reg_pp0_iter17 );

    SC_METHOD(thread_tmp_2_fu_845_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_7_fu_835_p4 );
    sensitive << ( ap_enable_reg_pp0_iter15 );

    SC_METHOD(thread_tmp_3_fu_305_p1);
    sensitive << ( i_1_fu_299_p2 );

    SC_METHOD(thread_tmp_4_fu_671_p3);
    sensitive << ( result_reg_1065 );

    SC_METHOD(thread_tmp_5_fu_713_p3);
    sensitive << ( result_3_reg_1080 );

    SC_METHOD(thread_tmp_5_i1_fu_883_p1);
    sensitive << ( tmp_9_reg_1131 );

    SC_METHOD(thread_tmp_5_i2_fu_925_p1);
    sensitive << ( tmp_14_reg_1153 );

    SC_METHOD(thread_tmp_5_i_fu_861_p1);
    sensitive << ( tmp_7_reg_1121 );

    SC_METHOD(thread_tmp_6_fu_682_p3);
    sensitive << ( result_s_reg_1070 );

    SC_METHOD(thread_tmp_7_fu_835_p4);
    sensitive << ( grp_fxp_sqrt_fu_264_ap_return );

    SC_METHOD(thread_tmp_8_fu_724_p3);
    sensitive << ( result_6_reg_1085 );

    SC_METHOD(thread_tmp_s_fu_294_p1);
    sensitive << ( i_fu_288_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    in_pixel_V_0_sel_rd = SC_LOGIC_0;
    in_pixel_V_0_sel_wr = SC_LOGIC_0;
    in_pixel_V_0_state = "00";
    out_pixel_V_1_sel_rd = SC_LOGIC_0;
    out_pixel_V_1_sel_wr = SC_LOGIC_0;
    out_pixel_V_1_state = "00";
    ap_CS_fsm = "01";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getPixelClassification_Stream_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_pixel_V_TDATA, "(port)in_pixel_V_TDATA");
    sc_trace(mVcdFile, in_pixel_V_TVALID, "(port)in_pixel_V_TVALID");
    sc_trace(mVcdFile, in_pixel_V_TREADY, "(port)in_pixel_V_TREADY");
    sc_trace(mVcdFile, out_pixel_V_TDATA, "(port)out_pixel_V_TDATA");
    sc_trace(mVcdFile, out_pixel_V_TVALID, "(port)out_pixel_V_TVALID");
    sc_trace(mVcdFile, out_pixel_V_TREADY, "(port)out_pixel_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, in_pixel_V_0_data_out, "in_pixel_V_0_data_out");
    sc_trace(mVcdFile, in_pixel_V_0_vld_in, "in_pixel_V_0_vld_in");
    sc_trace(mVcdFile, in_pixel_V_0_vld_out, "in_pixel_V_0_vld_out");
    sc_trace(mVcdFile, in_pixel_V_0_ack_in, "in_pixel_V_0_ack_in");
    sc_trace(mVcdFile, in_pixel_V_0_ack_out, "in_pixel_V_0_ack_out");
    sc_trace(mVcdFile, in_pixel_V_0_payload_A, "in_pixel_V_0_payload_A");
    sc_trace(mVcdFile, in_pixel_V_0_payload_B, "in_pixel_V_0_payload_B");
    sc_trace(mVcdFile, in_pixel_V_0_sel_rd, "in_pixel_V_0_sel_rd");
    sc_trace(mVcdFile, in_pixel_V_0_sel_wr, "in_pixel_V_0_sel_wr");
    sc_trace(mVcdFile, in_pixel_V_0_sel, "in_pixel_V_0_sel");
    sc_trace(mVcdFile, in_pixel_V_0_load_A, "in_pixel_V_0_load_A");
    sc_trace(mVcdFile, in_pixel_V_0_load_B, "in_pixel_V_0_load_B");
    sc_trace(mVcdFile, in_pixel_V_0_state, "in_pixel_V_0_state");
    sc_trace(mVcdFile, in_pixel_V_0_state_cmp_full, "in_pixel_V_0_state_cmp_full");
    sc_trace(mVcdFile, out_pixel_V_1_data_in, "out_pixel_V_1_data_in");
    sc_trace(mVcdFile, out_pixel_V_1_data_out, "out_pixel_V_1_data_out");
    sc_trace(mVcdFile, out_pixel_V_1_vld_in, "out_pixel_V_1_vld_in");
    sc_trace(mVcdFile, out_pixel_V_1_vld_out, "out_pixel_V_1_vld_out");
    sc_trace(mVcdFile, out_pixel_V_1_ack_in, "out_pixel_V_1_ack_in");
    sc_trace(mVcdFile, out_pixel_V_1_ack_out, "out_pixel_V_1_ack_out");
    sc_trace(mVcdFile, out_pixel_V_1_payload_A, "out_pixel_V_1_payload_A");
    sc_trace(mVcdFile, out_pixel_V_1_payload_B, "out_pixel_V_1_payload_B");
    sc_trace(mVcdFile, out_pixel_V_1_sel_rd, "out_pixel_V_1_sel_rd");
    sc_trace(mVcdFile, out_pixel_V_1_sel_wr, "out_pixel_V_1_sel_wr");
    sc_trace(mVcdFile, out_pixel_V_1_sel, "out_pixel_V_1_sel");
    sc_trace(mVcdFile, out_pixel_V_1_load_A, "out_pixel_V_1_load_A");
    sc_trace(mVcdFile, out_pixel_V_1_load_B, "out_pixel_V_1_load_B");
    sc_trace(mVcdFile, out_pixel_V_1_state, "out_pixel_V_1_state");
    sc_trace(mVcdFile, out_pixel_V_1_state_cmp_full, "out_pixel_V_1_state_cmp_full");
    sc_trace(mVcdFile, p_color_array_stream_s_address0, "p_color_array_stream_s_address0");
    sc_trace(mVcdFile, p_color_array_stream_s_ce0, "p_color_array_stream_s_ce0");
    sc_trace(mVcdFile, p_color_array_stream_s_q0, "p_color_array_stream_s_q0");
    sc_trace(mVcdFile, p_color_array_stream_s_address1, "p_color_array_stream_s_address1");
    sc_trace(mVcdFile, p_color_array_stream_s_ce1, "p_color_array_stream_s_ce1");
    sc_trace(mVcdFile, p_color_array_stream_s_q1, "p_color_array_stream_s_q1");
    sc_trace(mVcdFile, p_color_array_stream_s_address2, "p_color_array_stream_s_address2");
    sc_trace(mVcdFile, p_color_array_stream_s_ce2, "p_color_array_stream_s_ce2");
    sc_trace(mVcdFile, p_color_array_stream_s_q2, "p_color_array_stream_s_q2");
    sc_trace(mVcdFile, in_pixel_V_TDATA_blk_n, "in_pixel_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, do_init_reg_177, "do_init_reg_177");
    sc_trace(mVcdFile, out_pixel_V_TDATA_blk_n, "out_pixel_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, exitcond_reg_1013, "exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_exitcond_reg_1013, "ap_reg_pp0_iter17_exitcond_reg_1013");
    sc_trace(mVcdFile, newSel2_reg_1159, "newSel2_reg_1159");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_exitcond_reg_1013, "ap_reg_pp0_iter18_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_newSel2_reg_1159, "ap_reg_pp0_iter18_newSel2_reg_1159");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_predicate_op216_write_state20, "ap_predicate_op216_write_state20");
    sc_trace(mVcdFile, ap_predicate_op217_write_state20, "ap_predicate_op217_write_state20");
    sc_trace(mVcdFile, ap_predicate_op218_write_state20, "ap_predicate_op218_write_state20");
    sc_trace(mVcdFile, ap_predicate_op219_write_state20, "ap_predicate_op219_write_state20");
    sc_trace(mVcdFile, ap_predicate_op220_write_state20, "ap_predicate_op220_write_state20");
    sc_trace(mVcdFile, ap_predicate_op221_write_state20, "ap_predicate_op221_write_state20");
    sc_trace(mVcdFile, ap_predicate_op222_write_state20, "ap_predicate_op222_write_state20");
    sc_trace(mVcdFile, ap_block_state20_io, "ap_block_state20_io");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_predicate_op228_write_state21, "ap_predicate_op228_write_state21");
    sc_trace(mVcdFile, ap_predicate_op230_write_state21, "ap_predicate_op230_write_state21");
    sc_trace(mVcdFile, ap_predicate_op232_write_state21, "ap_predicate_op232_write_state21");
    sc_trace(mVcdFile, ap_predicate_op234_write_state21, "ap_predicate_op234_write_state21");
    sc_trace(mVcdFile, ap_predicate_op236_write_state21, "ap_predicate_op236_write_state21");
    sc_trace(mVcdFile, ap_predicate_op238_write_state21, "ap_predicate_op238_write_state21");
    sc_trace(mVcdFile, ap_predicate_op240_write_state21, "ap_predicate_op240_write_state21");
    sc_trace(mVcdFile, ap_block_state21_io, "ap_block_state21_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, minimumDistanceIndex_3_reg_193, "minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter1_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter2_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter3_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter4_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter5_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter6_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter7_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter8_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter9_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter10_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter11_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter12_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter13_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter14_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter15_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_193, "ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_193");
    sc_trace(mVcdFile, in_pixel_V9_rewind_reg_208, "in_pixel_V9_rewind_reg_208");
    sc_trace(mVcdFile, in_pixel_V9_phi_reg_222, "in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter2_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter3_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter4_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter5_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter6_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter7_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter8_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter9_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter10_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter11_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter12_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter13_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter14_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter15_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter16_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_in_pixel_V9_phi_reg_222, "ap_reg_pp0_iter17_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, minimumDistance4_reg_236, "minimumDistance4_reg_236");
    sc_trace(mVcdFile, minimumDistanceIndex_2_reg_250, "minimumDistanceIndex_2_reg_250");
    sc_trace(mVcdFile, i_fu_288_p2, "i_fu_288_p2");
    sc_trace(mVcdFile, i_reg_988, "i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_i_reg_988, "ap_reg_pp0_iter1_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_i_reg_988, "ap_reg_pp0_iter2_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_i_reg_988, "ap_reg_pp0_iter3_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_i_reg_988, "ap_reg_pp0_iter4_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_i_reg_988, "ap_reg_pp0_iter5_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_i_reg_988, "ap_reg_pp0_iter6_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_i_reg_988, "ap_reg_pp0_iter7_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_i_reg_988, "ap_reg_pp0_iter8_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_i_reg_988, "ap_reg_pp0_iter9_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_i_reg_988, "ap_reg_pp0_iter10_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_i_reg_988, "ap_reg_pp0_iter11_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_i_reg_988, "ap_reg_pp0_iter12_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_i_reg_988, "ap_reg_pp0_iter13_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_i_reg_988, "ap_reg_pp0_iter14_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_i_reg_988, "ap_reg_pp0_iter15_i_reg_988");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_i_reg_988, "ap_reg_pp0_iter16_i_reg_988");
    sc_trace(mVcdFile, i_1_fu_299_p2, "i_1_fu_299_p2");
    sc_trace(mVcdFile, i_1_reg_998, "i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_i_1_reg_998, "ap_reg_pp0_iter1_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_i_1_reg_998, "ap_reg_pp0_iter2_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_i_1_reg_998, "ap_reg_pp0_iter3_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_i_1_reg_998, "ap_reg_pp0_iter4_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_i_1_reg_998, "ap_reg_pp0_iter5_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_i_1_reg_998, "ap_reg_pp0_iter6_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_i_1_reg_998, "ap_reg_pp0_iter7_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_i_1_reg_998, "ap_reg_pp0_iter8_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_i_1_reg_998, "ap_reg_pp0_iter9_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_i_1_reg_998, "ap_reg_pp0_iter10_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_i_1_reg_998, "ap_reg_pp0_iter11_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_i_1_reg_998, "ap_reg_pp0_iter12_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_i_1_reg_998, "ap_reg_pp0_iter13_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_i_1_reg_998, "ap_reg_pp0_iter14_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_i_1_reg_998, "ap_reg_pp0_iter15_i_1_reg_998");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_i_1_reg_998, "ap_reg_pp0_iter16_i_1_reg_998");
    sc_trace(mVcdFile, tmp_29_fu_316_p1, "tmp_29_fu_316_p1");
    sc_trace(mVcdFile, tmp_29_reg_1008, "tmp_29_reg_1008");
    sc_trace(mVcdFile, exitcond_fu_320_p2, "exitcond_fu_320_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_reg_1013, "ap_reg_pp0_iter1_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_reg_1013, "ap_reg_pp0_iter2_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_reg_1013, "ap_reg_pp0_iter3_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_reg_1013, "ap_reg_pp0_iter4_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_reg_1013, "ap_reg_pp0_iter5_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_reg_1013, "ap_reg_pp0_iter6_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_reg_1013, "ap_reg_pp0_iter7_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_reg_1013, "ap_reg_pp0_iter8_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_exitcond_reg_1013, "ap_reg_pp0_iter9_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_exitcond_reg_1013, "ap_reg_pp0_iter10_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_exitcond_reg_1013, "ap_reg_pp0_iter11_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_exitcond_reg_1013, "ap_reg_pp0_iter12_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_exitcond_reg_1013, "ap_reg_pp0_iter13_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_exitcond_reg_1013, "ap_reg_pp0_iter14_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_exitcond_reg_1013, "ap_reg_pp0_iter15_exitcond_reg_1013");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_exitcond_reg_1013, "ap_reg_pp0_iter16_exitcond_reg_1013");
    sc_trace(mVcdFile, r_V_fu_384_p2, "r_V_fu_384_p2");
    sc_trace(mVcdFile, r_V_reg_1017, "r_V_reg_1017");
    sc_trace(mVcdFile, r_V_1_fu_398_p2, "r_V_1_fu_398_p2");
    sc_trace(mVcdFile, r_V_1_reg_1022, "r_V_1_reg_1022");
    sc_trace(mVcdFile, r_V_2_fu_412_p2, "r_V_2_fu_412_p2");
    sc_trace(mVcdFile, r_V_2_reg_1027, "r_V_2_reg_1027");
    sc_trace(mVcdFile, r_V_3_fu_448_p2, "r_V_3_fu_448_p2");
    sc_trace(mVcdFile, r_V_3_reg_1033, "r_V_3_reg_1033");
    sc_trace(mVcdFile, r_V_4_fu_458_p2, "r_V_4_fu_458_p2");
    sc_trace(mVcdFile, r_V_4_reg_1038, "r_V_4_reg_1038");
    sc_trace(mVcdFile, r_V_5_fu_468_p2, "r_V_5_fu_468_p2");
    sc_trace(mVcdFile, r_V_5_reg_1043, "r_V_5_reg_1043");
    sc_trace(mVcdFile, r_V_6_fu_504_p2, "r_V_6_fu_504_p2");
    sc_trace(mVcdFile, r_V_6_reg_1049, "r_V_6_reg_1049");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_r_V_6_reg_1049, "ap_reg_pp0_iter2_r_V_6_reg_1049");
    sc_trace(mVcdFile, r_V_7_fu_514_p2, "r_V_7_fu_514_p2");
    sc_trace(mVcdFile, r_V_7_reg_1054, "r_V_7_reg_1054");
    sc_trace(mVcdFile, r_V_8_fu_524_p2, "r_V_8_fu_524_p2");
    sc_trace(mVcdFile, r_V_8_reg_1059, "r_V_8_reg_1059");
    sc_trace(mVcdFile, result_fu_533_p2, "result_fu_533_p2");
    sc_trace(mVcdFile, result_reg_1065, "result_reg_1065");
    sc_trace(mVcdFile, result_s_fu_542_p2, "result_s_fu_542_p2");
    sc_trace(mVcdFile, result_s_reg_1070, "result_s_reg_1070");
    sc_trace(mVcdFile, p_Val2_s_fu_584_p2, "p_Val2_s_fu_584_p2");
    sc_trace(mVcdFile, p_Val2_s_reg_1075, "p_Val2_s_reg_1075");
    sc_trace(mVcdFile, result_3_fu_593_p2, "result_3_fu_593_p2");
    sc_trace(mVcdFile, result_3_reg_1080, "result_3_reg_1080");
    sc_trace(mVcdFile, result_6_fu_602_p2, "result_6_fu_602_p2");
    sc_trace(mVcdFile, result_6_reg_1085, "result_6_reg_1085");
    sc_trace(mVcdFile, p_Val2_1_fu_644_p2, "p_Val2_1_fu_644_p2");
    sc_trace(mVcdFile, p_Val2_1_reg_1090, "p_Val2_1_reg_1090");
    sc_trace(mVcdFile, result_4_fu_653_p2, "result_4_fu_653_p2");
    sc_trace(mVcdFile, result_4_reg_1095, "result_4_reg_1095");
    sc_trace(mVcdFile, tmp_28_fu_665_p2, "tmp_28_fu_665_p2");
    sc_trace(mVcdFile, tmp_28_reg_1100, "tmp_28_reg_1100");
    sc_trace(mVcdFile, powerSummation_V_2_fu_829_p2, "powerSummation_V_2_fu_829_p2");
    sc_trace(mVcdFile, powerSummation_V_2_reg_1116, "powerSummation_V_2_reg_1116");
    sc_trace(mVcdFile, tmp_7_fu_835_p4, "tmp_7_fu_835_p4");
    sc_trace(mVcdFile, tmp_7_reg_1121, "tmp_7_reg_1121");
    sc_trace(mVcdFile, tmp_2_fu_845_p2, "tmp_2_fu_845_p2");
    sc_trace(mVcdFile, tmp_2_reg_1126, "tmp_2_reg_1126");
    sc_trace(mVcdFile, tmp_9_reg_1131, "tmp_9_reg_1131");
    sc_trace(mVcdFile, or_cond_14_fu_870_p2, "or_cond_14_fu_870_p2");
    sc_trace(mVcdFile, or_cond_14_reg_1137, "or_cond_14_reg_1137");
    sc_trace(mVcdFile, or_cond_1_fu_897_p2, "or_cond_1_fu_897_p2");
    sc_trace(mVcdFile, or_cond_1_reg_1142, "or_cond_1_reg_1142");
    sc_trace(mVcdFile, minimumDistance_1_1_fu_903_p3, "minimumDistance_1_1_fu_903_p3");
    sc_trace(mVcdFile, minimumDistance_1_1_reg_1147, "minimumDistance_1_1_reg_1147");
    sc_trace(mVcdFile, tmp_14_reg_1153, "tmp_14_reg_1153");
    sc_trace(mVcdFile, newSel2_fu_966_p3, "newSel2_fu_966_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, minimumDistance_1_2_fu_974_p3, "minimumDistance_1_2_fu_974_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_264_in_val_V_read, "grp_fxp_sqrt_fu_264_in_val_V_read");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_264_ap_return, "grp_fxp_sqrt_fu_264_ap_return");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_264_ap_ce, "grp_fxp_sqrt_fu_264_ap_ce");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_269_in_val_V_read, "grp_fxp_sqrt_fu_269_in_val_V_read");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_269_ap_return, "grp_fxp_sqrt_fu_269_ap_return");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_269_ap_ce, "grp_fxp_sqrt_fu_269_ap_ce");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_274_ap_return, "grp_fxp_sqrt_fu_274_ap_return");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_274_ap_ce, "grp_fxp_sqrt_fu_274_ap_ce");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6, "ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6");
    sc_trace(mVcdFile, ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6, "ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6");
    sc_trace(mVcdFile, ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4, "ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222, "ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistance4_phi_fu_240_p6, "ap_phi_mux_minimumDistance4_phi_fu_240_p6");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6, "ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6");
    sc_trace(mVcdFile, tmp1_fu_283_p1, "tmp1_fu_283_p1");
    sc_trace(mVcdFile, tmp_s_fu_294_p1, "tmp_s_fu_294_p1");
    sc_trace(mVcdFile, tmp_3_fu_305_p1, "tmp_3_fu_305_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, minimumDistanceIndex_fu_279_p1, "minimumDistanceIndex_fu_279_p1");
    sc_trace(mVcdFile, i_2_fu_310_p2, "i_2_fu_310_p2");
    sc_trace(mVcdFile, pixelRed_V_fu_326_p4, "pixelRed_V_fu_326_p4");
    sc_trace(mVcdFile, rhs_V_fu_350_p3, "rhs_V_fu_350_p3");
    sc_trace(mVcdFile, lhs_V_fu_372_p1, "lhs_V_fu_372_p1");
    sc_trace(mVcdFile, rhs_V_cast_fu_376_p3, "rhs_V_cast_fu_376_p3");
    sc_trace(mVcdFile, pixelGreen_V_fu_336_p1, "pixelGreen_V_fu_336_p1");
    sc_trace(mVcdFile, colorGreen_V_fu_358_p1, "colorGreen_V_fu_358_p1");
    sc_trace(mVcdFile, lhs_V_1_fu_390_p1, "lhs_V_1_fu_390_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_394_p1, "rhs_V_1_fu_394_p1");
    sc_trace(mVcdFile, pixelBlue_V_fu_340_p4, "pixelBlue_V_fu_340_p4");
    sc_trace(mVcdFile, colorBlue_V_fu_362_p4, "colorBlue_V_fu_362_p4");
    sc_trace(mVcdFile, lhs_V_2_fu_404_p1, "lhs_V_2_fu_404_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_408_p1, "rhs_V_2_fu_408_p1");
    sc_trace(mVcdFile, rhs_V_3_fu_418_p3, "rhs_V_3_fu_418_p3");
    sc_trace(mVcdFile, rhs_V_3_cast_fu_440_p3, "rhs_V_3_cast_fu_440_p3");
    sc_trace(mVcdFile, colorGreen_V_1_fu_426_p1, "colorGreen_V_1_fu_426_p1");
    sc_trace(mVcdFile, rhs_V_4_fu_454_p1, "rhs_V_4_fu_454_p1");
    sc_trace(mVcdFile, colorBlue_V_1_fu_430_p4, "colorBlue_V_1_fu_430_p4");
    sc_trace(mVcdFile, rhs_V_5_fu_464_p1, "rhs_V_5_fu_464_p1");
    sc_trace(mVcdFile, rhs_V_6_fu_474_p3, "rhs_V_6_fu_474_p3");
    sc_trace(mVcdFile, rhs_V_6_cast_fu_496_p3, "rhs_V_6_cast_fu_496_p3");
    sc_trace(mVcdFile, colorGreen_V_2_fu_482_p1, "colorGreen_V_2_fu_482_p1");
    sc_trace(mVcdFile, rhs_V_7_fu_510_p1, "rhs_V_7_fu_510_p1");
    sc_trace(mVcdFile, colorBlue_V_2_fu_486_p4, "colorBlue_V_2_fu_486_p4");
    sc_trace(mVcdFile, rhs_V_8_fu_520_p1, "rhs_V_8_fu_520_p1");
    sc_trace(mVcdFile, result_fu_533_p0, "result_fu_533_p0");
    sc_trace(mVcdFile, p_cast1_fu_530_p1, "p_cast1_fu_530_p1");
    sc_trace(mVcdFile, result_fu_533_p1, "result_fu_533_p1");
    sc_trace(mVcdFile, result_s_fu_542_p0, "result_s_fu_542_p0");
    sc_trace(mVcdFile, p_cast2_fu_539_p1, "p_cast2_fu_539_p1");
    sc_trace(mVcdFile, result_s_fu_542_p1, "result_s_fu_542_p1");
    sc_trace(mVcdFile, tmp_16_fu_554_p0, "tmp_16_fu_554_p0");
    sc_trace(mVcdFile, tmp_16_fu_554_p1, "tmp_16_fu_554_p1");
    sc_trace(mVcdFile, tmp_16_fu_554_p2, "tmp_16_fu_554_p2");
    sc_trace(mVcdFile, p_shl_i_fu_560_p3, "p_shl_i_fu_560_p3");
    sc_trace(mVcdFile, p_shl3_i_fu_572_p3, "p_shl3_i_fu_572_p3");
    sc_trace(mVcdFile, p_shl_i_cast_fu_568_p1, "p_shl_i_cast_fu_568_p1");
    sc_trace(mVcdFile, p_shl3_i_cast_fu_580_p1, "p_shl3_i_cast_fu_580_p1");
    sc_trace(mVcdFile, result_3_fu_593_p0, "result_3_fu_593_p0");
    sc_trace(mVcdFile, p_cast3_fu_590_p1, "p_cast3_fu_590_p1");
    sc_trace(mVcdFile, result_3_fu_593_p1, "result_3_fu_593_p1");
    sc_trace(mVcdFile, result_6_fu_602_p0, "result_6_fu_602_p0");
    sc_trace(mVcdFile, p_cast4_fu_599_p1, "p_cast4_fu_599_p1");
    sc_trace(mVcdFile, result_6_fu_602_p1, "result_6_fu_602_p1");
    sc_trace(mVcdFile, tmp_23_fu_614_p0, "tmp_23_fu_614_p0");
    sc_trace(mVcdFile, tmp_23_fu_614_p1, "tmp_23_fu_614_p1");
    sc_trace(mVcdFile, tmp_23_fu_614_p2, "tmp_23_fu_614_p2");
    sc_trace(mVcdFile, p_shl_i1_fu_620_p3, "p_shl_i1_fu_620_p3");
    sc_trace(mVcdFile, p_shl3_i1_fu_632_p3, "p_shl3_i1_fu_632_p3");
    sc_trace(mVcdFile, p_shl_i1_cast_fu_628_p1, "p_shl_i1_cast_fu_628_p1");
    sc_trace(mVcdFile, p_shl3_i1_cast_fu_640_p1, "p_shl3_i1_cast_fu_640_p1");
    sc_trace(mVcdFile, result_4_fu_653_p0, "result_4_fu_653_p0");
    sc_trace(mVcdFile, p_cast_fu_650_p1, "p_cast_fu_650_p1");
    sc_trace(mVcdFile, result_4_fu_653_p1, "result_4_fu_653_p1");
    sc_trace(mVcdFile, tmp_28_fu_665_p0, "tmp_28_fu_665_p0");
    sc_trace(mVcdFile, tmp_28_fu_665_p1, "tmp_28_fu_665_p1");
    sc_trace(mVcdFile, tmp_4_fu_671_p3, "tmp_4_fu_671_p3");
    sc_trace(mVcdFile, tmp_6_fu_682_p3, "tmp_6_fu_682_p3");
    sc_trace(mVcdFile, p_Val2_2_cast_cast_fu_693_p1, "p_Val2_2_cast_cast_fu_693_p1");
    sc_trace(mVcdFile, p_Val2_1_cast_fu_689_p1, "p_Val2_1_cast_fu_689_p1");
    sc_trace(mVcdFile, tmp6_fu_696_p2, "tmp6_fu_696_p2");
    sc_trace(mVcdFile, p_Val2_cast_fu_678_p1, "p_Val2_cast_fu_678_p1");
    sc_trace(mVcdFile, tmp6_cast_fu_702_p1, "tmp6_cast_fu_702_p1");
    sc_trace(mVcdFile, tmp_5_fu_713_p3, "tmp_5_fu_713_p3");
    sc_trace(mVcdFile, tmp_8_fu_724_p3, "tmp_8_fu_724_p3");
    sc_trace(mVcdFile, p_Val2_6_cast_cast_fu_735_p1, "p_Val2_6_cast_cast_fu_735_p1");
    sc_trace(mVcdFile, p_Val2_4_cast_fu_731_p1, "p_Val2_4_cast_fu_731_p1");
    sc_trace(mVcdFile, tmp10_fu_738_p2, "tmp10_fu_738_p2");
    sc_trace(mVcdFile, p_Val2_3_cast_fu_720_p1, "p_Val2_3_cast_fu_720_p1");
    sc_trace(mVcdFile, tmp10_cast_fu_744_p1, "tmp10_cast_fu_744_p1");
    sc_trace(mVcdFile, result_9_fu_758_p0, "result_9_fu_758_p0");
    sc_trace(mVcdFile, p_cast5_fu_755_p1, "p_cast5_fu_755_p1");
    sc_trace(mVcdFile, result_9_fu_758_p1, "result_9_fu_758_p1");
    sc_trace(mVcdFile, result_9_fu_758_p2, "result_9_fu_758_p2");
    sc_trace(mVcdFile, tmp_11_fu_764_p3, "tmp_11_fu_764_p3");
    sc_trace(mVcdFile, tmp_12_fu_776_p3, "tmp_12_fu_776_p3");
    sc_trace(mVcdFile, p_shl_i2_fu_787_p3, "p_shl_i2_fu_787_p3");
    sc_trace(mVcdFile, p_shl3_i2_fu_798_p3, "p_shl3_i2_fu_798_p3");
    sc_trace(mVcdFile, p_shl_i2_cast_fu_794_p1, "p_shl_i2_cast_fu_794_p1");
    sc_trace(mVcdFile, p_shl3_i2_cast_fu_805_p1, "p_shl3_i2_cast_fu_805_p1");
    sc_trace(mVcdFile, p_Val2_2_fu_809_p2, "p_Val2_2_fu_809_p2");
    sc_trace(mVcdFile, p_Val2_10_cast_cas_fu_815_p1, "p_Val2_10_cast_cas_fu_815_p1");
    sc_trace(mVcdFile, p_Val2_7_cast_fu_783_p1, "p_Val2_7_cast_fu_783_p1");
    sc_trace(mVcdFile, tmp14_fu_819_p2, "tmp14_fu_819_p2");
    sc_trace(mVcdFile, p_Val2_6_cast5_fu_772_p1, "p_Val2_6_cast5_fu_772_p1");
    sc_trace(mVcdFile, tmp14_cast_fu_825_p1, "tmp14_cast_fu_825_p1");
    sc_trace(mVcdFile, tmp_5_i_fu_861_p1, "tmp_5_i_fu_861_p1");
    sc_trace(mVcdFile, tmp_1_fu_864_p2, "tmp_1_fu_864_p2");
    sc_trace(mVcdFile, tmp_5_i1_fu_883_p1, "tmp_5_i1_fu_883_p1");
    sc_trace(mVcdFile, minimumDistance_1_fu_875_p3, "minimumDistance_1_fu_875_p3");
    sc_trace(mVcdFile, tmp_1_1_fu_886_p2, "tmp_1_1_fu_886_p2");
    sc_trace(mVcdFile, tmp_2_1_fu_892_p2, "tmp_2_1_fu_892_p2");
    sc_trace(mVcdFile, tmp_5_i2_fu_925_p1, "tmp_5_i2_fu_925_p1");
    sc_trace(mVcdFile, tmp_1_2_fu_928_p2, "tmp_1_2_fu_928_p2");
    sc_trace(mVcdFile, tmp_2_2_fu_933_p2, "tmp_2_2_fu_933_p2");
    sc_trace(mVcdFile, or_cond_2_fu_938_p2, "or_cond_2_fu_938_p2");
    sc_trace(mVcdFile, newSel_fu_944_p3, "newSel_fu_944_p3");
    sc_trace(mVcdFile, minimumDistanceIndex_1_fu_921_p1, "minimumDistanceIndex_1_fu_921_p1");
    sc_trace(mVcdFile, or_cond_fu_954_p2, "or_cond_fu_954_p2");
    sc_trace(mVcdFile, newSel_cast_fu_950_p1, "newSel_cast_fu_950_p1");
    sc_trace(mVcdFile, newSel1_fu_959_p3, "newSel1_fu_959_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_165, "ap_condition_165");
    sc_trace(mVcdFile, ap_condition_620, "ap_condition_620");
#endif

    }
    mHdltvinHandle.open("getPixelClassification_Stream.hdltvin.dat");
    mHdltvoutHandle.open("getPixelClassification_Stream.hdltvout.dat");
}

getPixelClassification_Stream::~getPixelClassification_Stream() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete p_color_array_stream_s_U;
    delete grp_fxp_sqrt_fu_264;
    delete grp_fxp_sqrt_fu_269;
    delete grp_fxp_sqrt_fu_274;
}

void getPixelClassification_Stream::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            ap_enable_reg_pp0_iter19 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1013.read()))) {
        do_init_reg_177 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_1013.read())))) {
        do_init_reg_177 = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_condition_620.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, do_init_reg_177.read())) {
            in_pixel_V9_phi_reg_222 = ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read())) {
            in_pixel_V9_phi_reg_222 = in_pixel_V_0_data_out.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            in_pixel_V9_phi_reg_222 = ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_out.read()))) {
            in_pixel_V_0_sel_rd =  (sc_logic) (~in_pixel_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_in.read()))) {
            in_pixel_V_0_sel_wr =  (sc_logic) (~in_pixel_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_2)))) {
            in_pixel_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_1)))) {
            in_pixel_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()))))) {
            in_pixel_V_0_state = ap_const_lv2_3;
        } else {
            in_pixel_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter16_exitcond_reg_1013.read()))) {
        minimumDistance4_reg_236 = minimumDistance_1_2_fu_974_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter16_exitcond_reg_1013.read())))) {
        minimumDistance4_reg_236 = ap_const_lv32_7FFFFFFF;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter17_exitcond_reg_1013.read()))) {
        minimumDistanceIndex_2_reg_250 = newSel2_reg_1159.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        minimumDistanceIndex_2_reg_250 = ap_const_lv32_FFFFFFFF;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1013.read()))) {
        minimumDistanceIndex_3_reg_193 = tmp_29_reg_1008.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_1013.read())))) {
        minimumDistanceIndex_3_reg_193 = ap_const_lv2_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_out.read()))) {
            out_pixel_V_1_sel_rd =  (sc_logic) (~out_pixel_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_in.read()))) {
            out_pixel_V_1_sel_wr =  (sc_logic) (~out_pixel_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_V_1_state.read())))) {
            out_pixel_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_V_1_state.read())))) {
            out_pixel_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()))))) {
            out_pixel_V_1_state = ap_const_lv2_3;
        } else {
            out_pixel_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter10_exitcond_reg_1013 = ap_reg_pp0_iter9_exitcond_reg_1013.read();
        ap_reg_pp0_iter10_i_1_reg_998 = ap_reg_pp0_iter9_i_1_reg_998.read();
        ap_reg_pp0_iter10_i_reg_988 = ap_reg_pp0_iter9_i_reg_988.read();
        ap_reg_pp0_iter10_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter9_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter10_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter9_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter11_exitcond_reg_1013 = ap_reg_pp0_iter10_exitcond_reg_1013.read();
        ap_reg_pp0_iter11_i_1_reg_998 = ap_reg_pp0_iter10_i_1_reg_998.read();
        ap_reg_pp0_iter11_i_reg_988 = ap_reg_pp0_iter10_i_reg_988.read();
        ap_reg_pp0_iter11_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter10_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter11_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter10_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter12_exitcond_reg_1013 = ap_reg_pp0_iter11_exitcond_reg_1013.read();
        ap_reg_pp0_iter12_i_1_reg_998 = ap_reg_pp0_iter11_i_1_reg_998.read();
        ap_reg_pp0_iter12_i_reg_988 = ap_reg_pp0_iter11_i_reg_988.read();
        ap_reg_pp0_iter12_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter11_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter12_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter11_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter13_exitcond_reg_1013 = ap_reg_pp0_iter12_exitcond_reg_1013.read();
        ap_reg_pp0_iter13_i_1_reg_998 = ap_reg_pp0_iter12_i_1_reg_998.read();
        ap_reg_pp0_iter13_i_reg_988 = ap_reg_pp0_iter12_i_reg_988.read();
        ap_reg_pp0_iter13_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter12_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter13_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter12_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter14_exitcond_reg_1013 = ap_reg_pp0_iter13_exitcond_reg_1013.read();
        ap_reg_pp0_iter14_i_1_reg_998 = ap_reg_pp0_iter13_i_1_reg_998.read();
        ap_reg_pp0_iter14_i_reg_988 = ap_reg_pp0_iter13_i_reg_988.read();
        ap_reg_pp0_iter14_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter13_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter14_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter13_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter15_exitcond_reg_1013 = ap_reg_pp0_iter14_exitcond_reg_1013.read();
        ap_reg_pp0_iter15_i_1_reg_998 = ap_reg_pp0_iter14_i_1_reg_998.read();
        ap_reg_pp0_iter15_i_reg_988 = ap_reg_pp0_iter14_i_reg_988.read();
        ap_reg_pp0_iter15_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter14_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter15_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter14_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter16_exitcond_reg_1013 = ap_reg_pp0_iter15_exitcond_reg_1013.read();
        ap_reg_pp0_iter16_i_1_reg_998 = ap_reg_pp0_iter15_i_1_reg_998.read();
        ap_reg_pp0_iter16_i_reg_988 = ap_reg_pp0_iter15_i_reg_988.read();
        ap_reg_pp0_iter16_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter15_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter15_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter17_exitcond_reg_1013 = ap_reg_pp0_iter16_exitcond_reg_1013.read();
        ap_reg_pp0_iter17_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter16_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter18_exitcond_reg_1013 = ap_reg_pp0_iter17_exitcond_reg_1013.read();
        ap_reg_pp0_iter18_newSel2_reg_1159 = newSel2_reg_1159.read();
        ap_reg_pp0_iter2_exitcond_reg_1013 = ap_reg_pp0_iter1_exitcond_reg_1013.read();
        ap_reg_pp0_iter2_i_1_reg_998 = ap_reg_pp0_iter1_i_1_reg_998.read();
        ap_reg_pp0_iter2_i_reg_988 = ap_reg_pp0_iter1_i_reg_988.read();
        ap_reg_pp0_iter2_in_pixel_V9_phi_reg_222 = in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter2_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter1_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter2_r_V_6_reg_1049 = r_V_6_reg_1049.read();
        ap_reg_pp0_iter3_exitcond_reg_1013 = ap_reg_pp0_iter2_exitcond_reg_1013.read();
        ap_reg_pp0_iter3_i_1_reg_998 = ap_reg_pp0_iter2_i_1_reg_998.read();
        ap_reg_pp0_iter3_i_reg_988 = ap_reg_pp0_iter2_i_reg_988.read();
        ap_reg_pp0_iter3_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter2_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter3_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter2_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter4_exitcond_reg_1013 = ap_reg_pp0_iter3_exitcond_reg_1013.read();
        ap_reg_pp0_iter4_i_1_reg_998 = ap_reg_pp0_iter3_i_1_reg_998.read();
        ap_reg_pp0_iter4_i_reg_988 = ap_reg_pp0_iter3_i_reg_988.read();
        ap_reg_pp0_iter4_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter3_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter4_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter3_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter5_exitcond_reg_1013 = ap_reg_pp0_iter4_exitcond_reg_1013.read();
        ap_reg_pp0_iter5_i_1_reg_998 = ap_reg_pp0_iter4_i_1_reg_998.read();
        ap_reg_pp0_iter5_i_reg_988 = ap_reg_pp0_iter4_i_reg_988.read();
        ap_reg_pp0_iter5_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter4_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter5_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter4_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter6_exitcond_reg_1013 = ap_reg_pp0_iter5_exitcond_reg_1013.read();
        ap_reg_pp0_iter6_i_1_reg_998 = ap_reg_pp0_iter5_i_1_reg_998.read();
        ap_reg_pp0_iter6_i_reg_988 = ap_reg_pp0_iter5_i_reg_988.read();
        ap_reg_pp0_iter6_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter5_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter6_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter5_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter7_exitcond_reg_1013 = ap_reg_pp0_iter6_exitcond_reg_1013.read();
        ap_reg_pp0_iter7_i_1_reg_998 = ap_reg_pp0_iter6_i_1_reg_998.read();
        ap_reg_pp0_iter7_i_reg_988 = ap_reg_pp0_iter6_i_reg_988.read();
        ap_reg_pp0_iter7_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter6_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter7_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter6_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter8_exitcond_reg_1013 = ap_reg_pp0_iter7_exitcond_reg_1013.read();
        ap_reg_pp0_iter8_i_1_reg_998 = ap_reg_pp0_iter7_i_1_reg_998.read();
        ap_reg_pp0_iter8_i_reg_988 = ap_reg_pp0_iter7_i_reg_988.read();
        ap_reg_pp0_iter8_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter7_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter8_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter7_minimumDistanceIndex_3_reg_193.read();
        ap_reg_pp0_iter9_exitcond_reg_1013 = ap_reg_pp0_iter8_exitcond_reg_1013.read();
        ap_reg_pp0_iter9_i_1_reg_998 = ap_reg_pp0_iter8_i_1_reg_998.read();
        ap_reg_pp0_iter9_i_reg_988 = ap_reg_pp0_iter8_i_reg_988.read();
        ap_reg_pp0_iter9_in_pixel_V9_phi_reg_222 = ap_reg_pp0_iter8_in_pixel_V9_phi_reg_222.read();
        ap_reg_pp0_iter9_minimumDistanceIndex_3_reg_193 = ap_reg_pp0_iter8_minimumDistanceIndex_3_reg_193.read();
        minimumDistance_1_1_reg_1147 = minimumDistance_1_1_fu_903_p3.read();
        or_cond_14_reg_1137 = or_cond_14_fu_870_p2.read();
        or_cond_1_reg_1142 = or_cond_1_fu_897_p2.read();
        p_Val2_1_reg_1090 = p_Val2_1_fu_644_p2.read();
        p_Val2_s_reg_1075 = p_Val2_s_fu_584_p2.read();
        powerSummation_V_2_reg_1116 = powerSummation_V_2_fu_829_p2.read();
        result_3_reg_1080 = result_3_fu_593_p2.read();
        result_4_reg_1095 = result_4_fu_653_p2.read();
        result_6_reg_1085 = result_6_fu_602_p2.read();
        result_reg_1065 = result_fu_533_p2.read();
        result_s_reg_1070 = result_s_fu_542_p2.read();
        tmp_14_reg_1153 = grp_fxp_sqrt_fu_274_ap_return.read().range(19, 8);
        tmp_28_reg_1100 = tmp_28_fu_665_p2.read();
        tmp_2_reg_1126 = tmp_2_fu_845_p2.read();
        tmp_7_reg_1121 = grp_fxp_sqrt_fu_264_ap_return.read().range(19, 8);
        tmp_9_reg_1131 = grp_fxp_sqrt_fu_269_ap_return.read().range(19, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_exitcond_reg_1013 = exitcond_reg_1013.read();
        ap_reg_pp0_iter1_i_1_reg_998 = i_1_reg_998.read();
        ap_reg_pp0_iter1_i_reg_988 = i_reg_988.read();
        ap_reg_pp0_iter1_minimumDistanceIndex_3_reg_193 = minimumDistanceIndex_3_reg_193.read();
        exitcond_reg_1013 = exitcond_fu_320_p2.read();
        i_1_reg_998 = i_1_fu_299_p2.read();
        i_reg_988 = i_fu_288_p2.read();
        r_V_1_reg_1022 = r_V_1_fu_398_p2.read();
        r_V_2_reg_1027 = r_V_2_fu_412_p2.read();
        r_V_3_reg_1033 = r_V_3_fu_448_p2.read();
        r_V_4_reg_1038 = r_V_4_fu_458_p2.read();
        r_V_5_reg_1043 = r_V_5_fu_468_p2.read();
        r_V_6_reg_1049 = r_V_6_fu_504_p2.read();
        r_V_7_reg_1054 = r_V_7_fu_514_p2.read();
        r_V_8_reg_1059 = r_V_8_fu_524_p2.read();
        r_V_reg_1017 = r_V_fu_384_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_reg_1013.read()))) {
        in_pixel_V9_rewind_reg_208 = in_pixel_V9_phi_reg_222.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_load_A.read())) {
        in_pixel_V_0_payload_A = in_pixel_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_load_B.read())) {
        in_pixel_V_0_payload_B = in_pixel_V_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()))) {
        newSel2_reg_1159 = newSel2_fu_966_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_load_A.read())) {
        out_pixel_V_1_payload_A = out_pixel_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_load_B.read())) {
        out_pixel_V_1_payload_B = out_pixel_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        tmp_29_reg_1008 = tmp_29_fu_316_p1.read();
    }
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read())));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state20_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state21_io.read()))));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state20_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state21_io.read()))));
}

void getPixelClassification_Stream::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state20_io() {
    ap_block_state20_io = ((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op216_write_state20.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op217_write_state20.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op218_write_state20.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op219_write_state20.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op220_write_state20.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op221_write_state20.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op222_write_state20.read())));
}

void getPixelClassification_Stream::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state21_io() {
    ap_block_state21_io = ((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op228_write_state21.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op230_write_state21.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op232_write_state21.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op234_write_state21.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op236_write_state21.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op238_write_state21.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op240_write_state21.read())));
}

void getPixelClassification_Stream::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read());
}

void getPixelClassification_Stream::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read()));
}

void getPixelClassification_Stream::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_condition_165() {
    ap_condition_165 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void getPixelClassification_Stream::thread_ap_condition_620() {
    ap_condition_620 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void getPixelClassification_Stream::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getPixelClassification_Stream::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4() {
    if (esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, do_init_reg_177.read())) {
            ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4 = ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read())) {
            ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4 = in_pixel_V_0_data_out.read();
        } else {
            ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4 = ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222.read();
        }
    } else {
        ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4 = ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_exitcond_reg_1013.read()))) {
        ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6 = in_pixel_V9_phi_reg_222.read();
    } else {
        ap_phi_mux_in_pixel_V9_rewind_phi_fu_212_p6 = in_pixel_V9_rewind_reg_208.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_minimumDistance4_phi_fu_240_p6() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter17.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter16_exitcond_reg_1013.read())) {
            ap_phi_mux_minimumDistance4_phi_fu_240_p6 = ap_const_lv32_7FFFFFFF;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter16_exitcond_reg_1013.read())) {
            ap_phi_mux_minimumDistance4_phi_fu_240_p6 = minimumDistance_1_2_fu_974_p3.read();
        } else {
            ap_phi_mux_minimumDistance4_phi_fu_240_p6 = minimumDistance4_reg_236.read();
        }
    } else {
        ap_phi_mux_minimumDistance4_phi_fu_240_p6 = minimumDistance4_reg_236.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read())) {
            ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6 = ap_const_lv32_FFFFFFFF;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter17_exitcond_reg_1013.read())) {
            ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6 = newSel2_reg_1159.read();
        } else {
            ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6 = minimumDistanceIndex_2_reg_250.read();
        }
    } else {
        ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6 = minimumDistanceIndex_2_reg_250.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6() {
    if (esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_1013.read())) {
            ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6 = ap_const_lv2_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_1013.read())) {
            ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6 = tmp_29_reg_1008.read();
        } else {
            ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6 = minimumDistanceIndex_3_reg_193.read();
        }
    } else {
        ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6 = minimumDistanceIndex_3_reg_193.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222() {
    ap_phi_reg_pp0_iter1_in_pixel_V9_phi_reg_222 = "XXXXXXXXXXXXXXXXXXXXXXXX";
}

void getPixelClassification_Stream::thread_ap_predicate_op216_write_state20() {
    ap_predicate_op216_write_state20 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_predicate_op217_write_state20() {
    ap_predicate_op217_write_state20 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_4));
}

void getPixelClassification_Stream::thread_ap_predicate_op218_write_state20() {
    ap_predicate_op218_write_state20 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_3));
}

void getPixelClassification_Stream::thread_ap_predicate_op219_write_state20() {
    ap_predicate_op219_write_state20 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_2));
}

void getPixelClassification_Stream::thread_ap_predicate_op220_write_state20() {
    ap_predicate_op220_write_state20 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(ap_const_lv32_1, newSel2_reg_1159.read()));
}

void getPixelClassification_Stream::thread_ap_predicate_op221_write_state20() {
    ap_predicate_op221_write_state20 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_0));
}

void getPixelClassification_Stream::thread_ap_predicate_op222_write_state20() {
    ap_predicate_op222_write_state20 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_0) && !esl_seteq<1,32,32>(ap_const_lv32_1, newSel2_reg_1159.read()) && !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_2) && !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_3) && !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_4) && !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_predicate_op228_write_state21() {
    ap_predicate_op228_write_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_predicate_op230_write_state21() {
    ap_predicate_op230_write_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_4));
}

void getPixelClassification_Stream::thread_ap_predicate_op232_write_state21() {
    ap_predicate_op232_write_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_3));
}

void getPixelClassification_Stream::thread_ap_predicate_op234_write_state21() {
    ap_predicate_op234_write_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_2));
}

void getPixelClassification_Stream::thread_ap_predicate_op236_write_state21() {
    ap_predicate_op236_write_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter18_newSel2_reg_1159.read()));
}

void getPixelClassification_Stream::thread_ap_predicate_op238_write_state21() {
    ap_predicate_op238_write_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && esl_seteq<1,32,32>(ap_const_lv32_0, ap_reg_pp0_iter18_newSel2_reg_1159.read()));
}

void getPixelClassification_Stream::thread_ap_predicate_op240_write_state21() {
    ap_predicate_op240_write_state21 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && !esl_seteq<1,32,32>(ap_const_lv32_0, ap_reg_pp0_iter18_newSel2_reg_1159.read()) && !esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter18_newSel2_reg_1159.read()) && !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_2) && !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_3) && !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_4) && !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void getPixelClassification_Stream::thread_colorBlue_V_1_fu_430_p4() {
    colorBlue_V_1_fu_430_p4 = p_color_array_stream_s_q1.read().range(15, 8);
}

void getPixelClassification_Stream::thread_colorBlue_V_2_fu_486_p4() {
    colorBlue_V_2_fu_486_p4 = p_color_array_stream_s_q2.read().range(15, 8);
}

void getPixelClassification_Stream::thread_colorBlue_V_fu_362_p4() {
    colorBlue_V_fu_362_p4 = p_color_array_stream_s_q0.read().range(15, 8);
}

void getPixelClassification_Stream::thread_colorGreen_V_1_fu_426_p1() {
    colorGreen_V_1_fu_426_p1 = p_color_array_stream_s_q1.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_colorGreen_V_2_fu_482_p1() {
    colorGreen_V_2_fu_482_p1 = p_color_array_stream_s_q2.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_colorGreen_V_fu_358_p1() {
    colorGreen_V_fu_358_p1 = p_color_array_stream_s_q0.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_exitcond_fu_320_p2() {
    exitcond_fu_320_p2 = (!i_2_fu_310_p2.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_2_fu_310_p2.read() == ap_const_lv3_6);
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_264_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fxp_sqrt_fu_264_ap_ce = ap_const_logic_1;
    } else {
        grp_fxp_sqrt_fu_264_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_264_in_val_V_read() {
    grp_fxp_sqrt_fu_264_in_val_V_read = (!p_Val2_cast_fu_678_p1.read().is_01() || !tmp6_cast_fu_702_p1.read().is_01())? sc_lv<30>(): (sc_bigint<30>(p_Val2_cast_fu_678_p1.read()) + sc_bigint<30>(tmp6_cast_fu_702_p1.read()));
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_269_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fxp_sqrt_fu_269_ap_ce = ap_const_logic_1;
    } else {
        grp_fxp_sqrt_fu_269_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_269_in_val_V_read() {
    grp_fxp_sqrt_fu_269_in_val_V_read = (!p_Val2_3_cast_fu_720_p1.read().is_01() || !tmp10_cast_fu_744_p1.read().is_01())? sc_lv<30>(): (sc_bigint<30>(p_Val2_3_cast_fu_720_p1.read()) + sc_bigint<30>(tmp10_cast_fu_744_p1.read()));
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_274_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fxp_sqrt_fu_274_ap_ce = ap_const_logic_1;
    } else {
        grp_fxp_sqrt_fu_274_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_i_1_fu_299_p2() {
    i_1_fu_299_p2 = (!ap_const_lv3_2.is_01() || !minimumDistanceIndex_fu_279_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(minimumDistanceIndex_fu_279_p1.read()));
}

void getPixelClassification_Stream::thread_i_2_fu_310_p2() {
    i_2_fu_310_p2 = (!ap_const_lv3_3.is_01() || !minimumDistanceIndex_fu_279_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) + sc_biguint<3>(minimumDistanceIndex_fu_279_p1.read()));
}

void getPixelClassification_Stream::thread_i_fu_288_p2() {
    i_fu_288_p2 = (!ap_const_lv3_1.is_01() || !minimumDistanceIndex_fu_279_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(minimumDistanceIndex_fu_279_p1.read()));
}

void getPixelClassification_Stream::thread_in_pixel_V_0_ack_in() {
    in_pixel_V_0_ack_in = in_pixel_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_in_pixel_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_pixel_V_0_ack_out = ap_const_logic_1;
    } else {
        in_pixel_V_0_ack_out = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_in_pixel_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_sel.read())) {
        in_pixel_V_0_data_out = in_pixel_V_0_payload_B.read();
    } else {
        in_pixel_V_0_data_out = in_pixel_V_0_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_in_pixel_V_0_load_A() {
    in_pixel_V_0_load_A = (in_pixel_V_0_state_cmp_full.read() & ~in_pixel_V_0_sel_wr.read());
}

void getPixelClassification_Stream::thread_in_pixel_V_0_load_B() {
    in_pixel_V_0_load_B = (in_pixel_V_0_sel_wr.read() & in_pixel_V_0_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_in_pixel_V_0_sel() {
    in_pixel_V_0_sel = in_pixel_V_0_sel_rd.read();
}

void getPixelClassification_Stream::thread_in_pixel_V_0_state_cmp_full() {
    in_pixel_V_0_state_cmp_full =  (sc_logic) ((!in_pixel_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_pixel_V_0_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_in_pixel_V_0_vld_in() {
    in_pixel_V_0_vld_in = in_pixel_V_TVALID.read();
}

void getPixelClassification_Stream::thread_in_pixel_V_0_vld_out() {
    in_pixel_V_0_vld_out = in_pixel_V_0_state.read()[0];
}

void getPixelClassification_Stream::thread_in_pixel_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_177.read()))) {
        in_pixel_V_TDATA_blk_n = in_pixel_V_0_state.read()[0];
    } else {
        in_pixel_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void getPixelClassification_Stream::thread_in_pixel_V_TREADY() {
    in_pixel_V_TREADY = in_pixel_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_lhs_V_1_fu_390_p1() {
    lhs_V_1_fu_390_p1 = esl_zext<9,8>(pixelGreen_V_fu_336_p1.read());
}

void getPixelClassification_Stream::thread_lhs_V_2_fu_404_p1() {
    lhs_V_2_fu_404_p1 = esl_zext<9,8>(pixelBlue_V_fu_340_p4.read());
}

void getPixelClassification_Stream::thread_lhs_V_fu_372_p1() {
    lhs_V_fu_372_p1 = esl_zext<9,8>(pixelRed_V_fu_326_p4.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_1_fu_921_p1() {
    minimumDistanceIndex_1_fu_921_p1 = esl_zext<32,2>(ap_reg_pp0_iter16_minimumDistanceIndex_3_reg_193.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_fu_279_p1() {
    minimumDistanceIndex_fu_279_p1 = esl_zext<3,2>(ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_1_fu_903_p3() {
    minimumDistance_1_1_fu_903_p3 = (!or_cond_1_fu_897_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_1_fu_897_p2.read()[0].to_bool())? tmp_5_i1_fu_883_p1.read(): minimumDistance_1_fu_875_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_2_fu_974_p3() {
    minimumDistance_1_2_fu_974_p3 = (!or_cond_2_fu_938_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_2_fu_938_p2.read()[0].to_bool())? tmp_5_i2_fu_925_p1.read(): minimumDistance_1_1_reg_1147.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_fu_875_p3() {
    minimumDistance_1_fu_875_p3 = (!or_cond_14_fu_870_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_14_fu_870_p2.read()[0].to_bool())? tmp_5_i_fu_861_p1.read(): ap_phi_mux_minimumDistance4_phi_fu_240_p6.read());
}

void getPixelClassification_Stream::thread_newSel1_fu_959_p3() {
    newSel1_fu_959_p3 = (!or_cond_14_reg_1137.read()[0].is_01())? sc_lv<32>(): ((or_cond_14_reg_1137.read()[0].to_bool())? minimumDistanceIndex_1_fu_921_p1.read(): ap_phi_mux_minimumDistanceIndex_2_phi_fu_254_p6.read());
}

void getPixelClassification_Stream::thread_newSel2_fu_966_p3() {
    newSel2_fu_966_p3 = (!or_cond_fu_954_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_954_p2.read()[0].to_bool())? newSel_cast_fu_950_p1.read(): newSel1_fu_959_p3.read());
}

void getPixelClassification_Stream::thread_newSel_cast_fu_950_p1() {
    newSel_cast_fu_950_p1 = esl_zext<32,3>(newSel_fu_944_p3.read());
}

void getPixelClassification_Stream::thread_newSel_fu_944_p3() {
    newSel_fu_944_p3 = (!or_cond_2_fu_938_p2.read()[0].is_01())? sc_lv<3>(): ((or_cond_2_fu_938_p2.read()[0].to_bool())? ap_reg_pp0_iter16_i_1_reg_998.read(): ap_reg_pp0_iter16_i_reg_988.read());
}

void getPixelClassification_Stream::thread_or_cond_14_fu_870_p2() {
    or_cond_14_fu_870_p2 = (tmp_1_fu_864_p2.read() & tmp_2_reg_1126.read());
}

void getPixelClassification_Stream::thread_or_cond_1_fu_897_p2() {
    or_cond_1_fu_897_p2 = (tmp_1_1_fu_886_p2.read() & tmp_2_1_fu_892_p2.read());
}

void getPixelClassification_Stream::thread_or_cond_2_fu_938_p2() {
    or_cond_2_fu_938_p2 = (tmp_1_2_fu_928_p2.read() & tmp_2_2_fu_933_p2.read());
}

void getPixelClassification_Stream::thread_or_cond_fu_954_p2() {
    or_cond_fu_954_p2 = (or_cond_2_fu_938_p2.read() | or_cond_1_reg_1142.read());
}

void getPixelClassification_Stream::thread_out_pixel_V_1_ack_in() {
    out_pixel_V_1_ack_in = out_pixel_V_1_state.read()[1];
}

void getPixelClassification_Stream::thread_out_pixel_V_1_ack_out() {
    out_pixel_V_1_ack_out = out_pixel_V_TREADY.read();
}

void getPixelClassification_Stream::thread_out_pixel_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op222_write_state20.read())) {
            out_pixel_V_1_data_in = ap_reg_pp0_iter17_in_pixel_V9_phi_reg_222.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op221_write_state20.read())) {
            out_pixel_V_1_data_in = ap_const_lv24_FF0000;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op220_write_state20.read())) {
            out_pixel_V_1_data_in = ap_const_lv24_FF;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op219_write_state20.read())) {
            out_pixel_V_1_data_in = ap_const_lv24_FF00;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op218_write_state20.read())) {
            out_pixel_V_1_data_in = ap_const_lv24_FFFF00;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op217_write_state20.read())) {
            out_pixel_V_1_data_in = ap_const_lv24_FF00FF;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op216_write_state20.read())) {
            out_pixel_V_1_data_in = ap_const_lv24_FFFF;
        } else {
            out_pixel_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        out_pixel_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_sel.read())) {
        out_pixel_V_1_data_out = out_pixel_V_1_payload_B.read();
    } else {
        out_pixel_V_1_data_out = out_pixel_V_1_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_1_load_A() {
    out_pixel_V_1_load_A = (out_pixel_V_1_state_cmp_full.read() & ~out_pixel_V_1_sel_wr.read());
}

void getPixelClassification_Stream::thread_out_pixel_V_1_load_B() {
    out_pixel_V_1_load_B = (out_pixel_V_1_sel_wr.read() & out_pixel_V_1_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_out_pixel_V_1_sel() {
    out_pixel_V_1_sel = out_pixel_V_1_sel_rd.read();
}

void getPixelClassification_Stream::thread_out_pixel_V_1_state_cmp_full() {
    out_pixel_V_1_state_cmp_full =  (sc_logic) ((!out_pixel_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_pixel_V_1_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_out_pixel_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op216_write_state20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op217_write_state20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op218_write_state20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op219_write_state20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op220_write_state20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op221_write_state20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op222_write_state20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_pixel_V_1_vld_in = ap_const_logic_1;
    } else {
        out_pixel_V_1_vld_in = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_1_vld_out() {
    out_pixel_V_1_vld_out = out_pixel_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_out_pixel_V_TDATA() {
    out_pixel_V_TDATA = out_pixel_V_1_data_out.read();
}

void getPixelClassification_Stream::thread_out_pixel_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_0, ap_reg_pp0_iter18_newSel2_reg_1159.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_1, newSel2_reg_1159.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter18_newSel2_reg_1159.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_5)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_5)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter18.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter17_exitcond_reg_1013.read()) && 
          !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_0) && 
          !esl_seteq<1,32,32>(ap_const_lv32_1, newSel2_reg_1159.read()) && 
          !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_4) && 
          !esl_seteq<1,32,32>(newSel2_reg_1159.read(), ap_const_lv32_5)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_1013.read()) && 
          !esl_seteq<1,32,32>(ap_const_lv32_0, ap_reg_pp0_iter18_newSel2_reg_1159.read()) && 
          !esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter18_newSel2_reg_1159.read()) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_4) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter18_newSel2_reg_1159.read(), ap_const_lv32_5)))) {
        out_pixel_V_TDATA_blk_n = out_pixel_V_1_state.read()[1];
    } else {
        out_pixel_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_TVALID() {
    out_pixel_V_TVALID = out_pixel_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_p_Val2_10_cast_cas_fu_815_p1() {
    p_Val2_10_cast_cas_fu_815_p1 = esl_sext<29,28>(p_Val2_2_fu_809_p2.read());
}

void getPixelClassification_Stream::thread_p_Val2_1_cast_fu_689_p1() {
    p_Val2_1_cast_fu_689_p1 = esl_sext<29,28>(tmp_6_fu_682_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_1_fu_644_p2() {
    p_Val2_1_fu_644_p2 = (!p_shl_i1_cast_fu_628_p1.read().is_01() || !p_shl3_i1_cast_fu_640_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(p_shl_i1_cast_fu_628_p1.read()) - sc_bigint<28>(p_shl3_i1_cast_fu_640_p1.read()));
}

void getPixelClassification_Stream::thread_p_Val2_2_cast_cast_fu_693_p1() {
    p_Val2_2_cast_cast_fu_693_p1 = esl_sext<29,28>(p_Val2_s_reg_1075.read());
}

void getPixelClassification_Stream::thread_p_Val2_2_fu_809_p2() {
    p_Val2_2_fu_809_p2 = (!p_shl_i2_cast_fu_794_p1.read().is_01() || !p_shl3_i2_cast_fu_805_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(p_shl_i2_cast_fu_794_p1.read()) - sc_bigint<28>(p_shl3_i2_cast_fu_805_p1.read()));
}

void getPixelClassification_Stream::thread_p_Val2_3_cast_fu_720_p1() {
    p_Val2_3_cast_fu_720_p1 = esl_sext<30,27>(tmp_5_fu_713_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_4_cast_fu_731_p1() {
    p_Val2_4_cast_fu_731_p1 = esl_sext<29,28>(tmp_8_fu_724_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_6_cast5_fu_772_p1() {
    p_Val2_6_cast5_fu_772_p1 = esl_sext<30,27>(tmp_11_fu_764_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_6_cast_cast_fu_735_p1() {
    p_Val2_6_cast_cast_fu_735_p1 = esl_sext<29,28>(p_Val2_1_reg_1090.read());
}

void getPixelClassification_Stream::thread_p_Val2_7_cast_fu_783_p1() {
    p_Val2_7_cast_fu_783_p1 = esl_sext<29,28>(tmp_12_fu_776_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_cast_fu_678_p1() {
    p_Val2_cast_fu_678_p1 = esl_sext<30,27>(tmp_4_fu_671_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_s_fu_584_p2() {
    p_Val2_s_fu_584_p2 = (!p_shl_i_cast_fu_568_p1.read().is_01() || !p_shl3_i_cast_fu_580_p1.read().is_01())? sc_lv<28>(): (sc_bigint<28>(p_shl_i_cast_fu_568_p1.read()) - sc_bigint<28>(p_shl3_i_cast_fu_580_p1.read()));
}

void getPixelClassification_Stream::thread_p_cast1_fu_530_p1() {
    p_cast1_fu_530_p1 = esl_sext<18,9>(r_V_reg_1017.read());
}

void getPixelClassification_Stream::thread_p_cast2_fu_539_p1() {
    p_cast2_fu_539_p1 = esl_sext<18,9>(r_V_1_reg_1022.read());
}

void getPixelClassification_Stream::thread_p_cast3_fu_590_p1() {
    p_cast3_fu_590_p1 = esl_sext<18,9>(r_V_3_reg_1033.read());
}

void getPixelClassification_Stream::thread_p_cast4_fu_599_p1() {
    p_cast4_fu_599_p1 = esl_sext<18,9>(r_V_4_reg_1038.read());
}

void getPixelClassification_Stream::thread_p_cast5_fu_755_p1() {
    p_cast5_fu_755_p1 = esl_sext<18,9>(ap_reg_pp0_iter2_r_V_6_reg_1049.read());
}

void getPixelClassification_Stream::thread_p_cast_fu_650_p1() {
    p_cast_fu_650_p1 = esl_sext<18,9>(r_V_7_reg_1054.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_address0() {
    p_color_array_stream_s_address0 =  (sc_lv<3>) (tmp1_fu_283_p1.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_address1() {
    p_color_array_stream_s_address1 =  (sc_lv<3>) (tmp_s_fu_294_p1.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_address2() {
    p_color_array_stream_s_address2 =  (sc_lv<3>) (tmp_3_fu_305_p1.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        p_color_array_stream_s_ce0 = ap_const_logic_1;
    } else {
        p_color_array_stream_s_ce0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        p_color_array_stream_s_ce1 = ap_const_logic_1;
    } else {
        p_color_array_stream_s_ce1 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_ce2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        p_color_array_stream_s_ce2 = ap_const_logic_1;
    } else {
        p_color_array_stream_s_ce2 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_p_shl3_i1_cast_fu_640_p1() {
    p_shl3_i1_cast_fu_640_p1 = esl_sext<28,25>(p_shl3_i1_fu_632_p3.read());
}

void getPixelClassification_Stream::thread_p_shl3_i1_fu_632_p3() {
    p_shl3_i1_fu_632_p3 = esl_concat<17,8>(tmp_23_fu_614_p2.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_p_shl3_i2_cast_fu_805_p1() {
    p_shl3_i2_cast_fu_805_p1 = esl_sext<28,25>(p_shl3_i2_fu_798_p3.read());
}

void getPixelClassification_Stream::thread_p_shl3_i2_fu_798_p3() {
    p_shl3_i2_fu_798_p3 = esl_concat<17,8>(tmp_28_reg_1100.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_p_shl3_i_cast_fu_580_p1() {
    p_shl3_i_cast_fu_580_p1 = esl_sext<28,25>(p_shl3_i_fu_572_p3.read());
}

void getPixelClassification_Stream::thread_p_shl3_i_fu_572_p3() {
    p_shl3_i_fu_572_p3 = esl_concat<17,8>(tmp_16_fu_554_p2.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_p_shl_i1_cast_fu_628_p1() {
    p_shl_i1_cast_fu_628_p1 = esl_sext<28,27>(p_shl_i1_fu_620_p3.read());
}

void getPixelClassification_Stream::thread_p_shl_i1_fu_620_p3() {
    p_shl_i1_fu_620_p3 = esl_concat<17,10>(tmp_23_fu_614_p2.read(), ap_const_lv10_0);
}

void getPixelClassification_Stream::thread_p_shl_i2_cast_fu_794_p1() {
    p_shl_i2_cast_fu_794_p1 = esl_sext<28,27>(p_shl_i2_fu_787_p3.read());
}

void getPixelClassification_Stream::thread_p_shl_i2_fu_787_p3() {
    p_shl_i2_fu_787_p3 = esl_concat<17,10>(tmp_28_reg_1100.read(), ap_const_lv10_0);
}

void getPixelClassification_Stream::thread_p_shl_i_cast_fu_568_p1() {
    p_shl_i_cast_fu_568_p1 = esl_sext<28,27>(p_shl_i_fu_560_p3.read());
}

void getPixelClassification_Stream::thread_p_shl_i_fu_560_p3() {
    p_shl_i_fu_560_p3 = esl_concat<17,10>(tmp_16_fu_554_p2.read(), ap_const_lv10_0);
}

void getPixelClassification_Stream::thread_pixelBlue_V_fu_340_p4() {
    pixelBlue_V_fu_340_p4 = ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4.read().range(15, 8);
}

void getPixelClassification_Stream::thread_pixelGreen_V_fu_336_p1() {
    pixelGreen_V_fu_336_p1 = ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_pixelRed_V_fu_326_p4() {
    pixelRed_V_fu_326_p4 = ap_phi_mux_in_pixel_V9_phi_phi_fu_227_p4.read().range(23, 16);
}

void getPixelClassification_Stream::thread_powerSummation_V_2_fu_829_p2() {
    powerSummation_V_2_fu_829_p2 = (!p_Val2_6_cast5_fu_772_p1.read().is_01() || !tmp14_cast_fu_825_p1.read().is_01())? sc_lv<30>(): (sc_bigint<30>(p_Val2_6_cast5_fu_772_p1.read()) + sc_bigint<30>(tmp14_cast_fu_825_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_1_fu_398_p2() {
    r_V_1_fu_398_p2 = (!lhs_V_1_fu_390_p1.read().is_01() || !rhs_V_1_fu_394_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_1_fu_390_p1.read()) - sc_biguint<9>(rhs_V_1_fu_394_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_2_fu_412_p2() {
    r_V_2_fu_412_p2 = (!lhs_V_2_fu_404_p1.read().is_01() || !rhs_V_2_fu_408_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_2_fu_404_p1.read()) - sc_biguint<9>(rhs_V_2_fu_408_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_3_fu_448_p2() {
    r_V_3_fu_448_p2 = (!lhs_V_fu_372_p1.read().is_01() || !rhs_V_3_cast_fu_440_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_fu_372_p1.read()) - sc_biguint<9>(rhs_V_3_cast_fu_440_p3.read()));
}

void getPixelClassification_Stream::thread_r_V_4_fu_458_p2() {
    r_V_4_fu_458_p2 = (!lhs_V_1_fu_390_p1.read().is_01() || !rhs_V_4_fu_454_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_1_fu_390_p1.read()) - sc_biguint<9>(rhs_V_4_fu_454_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_5_fu_468_p2() {
    r_V_5_fu_468_p2 = (!lhs_V_2_fu_404_p1.read().is_01() || !rhs_V_5_fu_464_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_2_fu_404_p1.read()) - sc_biguint<9>(rhs_V_5_fu_464_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_6_fu_504_p2() {
    r_V_6_fu_504_p2 = (!lhs_V_fu_372_p1.read().is_01() || !rhs_V_6_cast_fu_496_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_fu_372_p1.read()) - sc_biguint<9>(rhs_V_6_cast_fu_496_p3.read()));
}

void getPixelClassification_Stream::thread_r_V_7_fu_514_p2() {
    r_V_7_fu_514_p2 = (!lhs_V_1_fu_390_p1.read().is_01() || !rhs_V_7_fu_510_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_1_fu_390_p1.read()) - sc_biguint<9>(rhs_V_7_fu_510_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_8_fu_524_p2() {
    r_V_8_fu_524_p2 = (!lhs_V_2_fu_404_p1.read().is_01() || !rhs_V_8_fu_520_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_2_fu_404_p1.read()) - sc_biguint<9>(rhs_V_8_fu_520_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_fu_384_p2() {
    r_V_fu_384_p2 = (!lhs_V_fu_372_p1.read().is_01() || !rhs_V_cast_fu_376_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_fu_372_p1.read()) - sc_biguint<9>(rhs_V_cast_fu_376_p3.read()));
}

void getPixelClassification_Stream::thread_result_3_fu_593_p0() {
    result_3_fu_593_p0 =  (sc_lv<9>) (p_cast3_fu_590_p1.read());
}

void getPixelClassification_Stream::thread_result_3_fu_593_p1() {
    result_3_fu_593_p1 =  (sc_lv<9>) (p_cast3_fu_590_p1.read());
}

void getPixelClassification_Stream::thread_result_3_fu_593_p2() {
    result_3_fu_593_p2 = (!result_3_fu_593_p0.read().is_01() || !result_3_fu_593_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_3_fu_593_p0.read()) * sc_bigint<9>(result_3_fu_593_p1.read());
}

void getPixelClassification_Stream::thread_result_4_fu_653_p0() {
    result_4_fu_653_p0 =  (sc_lv<9>) (p_cast_fu_650_p1.read());
}

void getPixelClassification_Stream::thread_result_4_fu_653_p1() {
    result_4_fu_653_p1 =  (sc_lv<9>) (p_cast_fu_650_p1.read());
}

void getPixelClassification_Stream::thread_result_4_fu_653_p2() {
    result_4_fu_653_p2 = (!result_4_fu_653_p0.read().is_01() || !result_4_fu_653_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_4_fu_653_p0.read()) * sc_bigint<9>(result_4_fu_653_p1.read());
}

void getPixelClassification_Stream::thread_result_6_fu_602_p0() {
    result_6_fu_602_p0 =  (sc_lv<9>) (p_cast4_fu_599_p1.read());
}

void getPixelClassification_Stream::thread_result_6_fu_602_p1() {
    result_6_fu_602_p1 =  (sc_lv<9>) (p_cast4_fu_599_p1.read());
}

void getPixelClassification_Stream::thread_result_6_fu_602_p2() {
    result_6_fu_602_p2 = (!result_6_fu_602_p0.read().is_01() || !result_6_fu_602_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_6_fu_602_p0.read()) * sc_bigint<9>(result_6_fu_602_p1.read());
}

void getPixelClassification_Stream::thread_result_9_fu_758_p0() {
    result_9_fu_758_p0 =  (sc_lv<9>) (p_cast5_fu_755_p1.read());
}

void getPixelClassification_Stream::thread_result_9_fu_758_p1() {
    result_9_fu_758_p1 =  (sc_lv<9>) (p_cast5_fu_755_p1.read());
}

void getPixelClassification_Stream::thread_result_9_fu_758_p2() {
    result_9_fu_758_p2 = (!result_9_fu_758_p0.read().is_01() || !result_9_fu_758_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_9_fu_758_p0.read()) * sc_bigint<9>(result_9_fu_758_p1.read());
}

void getPixelClassification_Stream::thread_result_fu_533_p0() {
    result_fu_533_p0 =  (sc_lv<9>) (p_cast1_fu_530_p1.read());
}

void getPixelClassification_Stream::thread_result_fu_533_p1() {
    result_fu_533_p1 =  (sc_lv<9>) (p_cast1_fu_530_p1.read());
}

void getPixelClassification_Stream::thread_result_fu_533_p2() {
    result_fu_533_p2 = (!result_fu_533_p0.read().is_01() || !result_fu_533_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_fu_533_p0.read()) * sc_bigint<9>(result_fu_533_p1.read());
}

void getPixelClassification_Stream::thread_result_s_fu_542_p0() {
    result_s_fu_542_p0 =  (sc_lv<9>) (p_cast2_fu_539_p1.read());
}

void getPixelClassification_Stream::thread_result_s_fu_542_p1() {
    result_s_fu_542_p1 =  (sc_lv<9>) (p_cast2_fu_539_p1.read());
}

void getPixelClassification_Stream::thread_result_s_fu_542_p2() {
    result_s_fu_542_p2 = (!result_s_fu_542_p0.read().is_01() || !result_s_fu_542_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_s_fu_542_p0.read()) * sc_bigint<9>(result_s_fu_542_p1.read());
}

void getPixelClassification_Stream::thread_rhs_V_1_fu_394_p1() {
    rhs_V_1_fu_394_p1 = esl_zext<9,8>(colorGreen_V_fu_358_p1.read());
}

void getPixelClassification_Stream::thread_rhs_V_2_fu_408_p1() {
    rhs_V_2_fu_408_p1 = esl_zext<9,8>(colorBlue_V_fu_362_p4.read());
}

void getPixelClassification_Stream::thread_rhs_V_3_cast_fu_440_p3() {
    rhs_V_3_cast_fu_440_p3 = (!rhs_V_3_fu_418_p3.read()[0].is_01())? sc_lv<9>(): ((rhs_V_3_fu_418_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_rhs_V_3_fu_418_p3() {
    rhs_V_3_fu_418_p3 = p_color_array_stream_s_q1.read().range(16, 16);
}

void getPixelClassification_Stream::thread_rhs_V_4_fu_454_p1() {
    rhs_V_4_fu_454_p1 = esl_zext<9,8>(colorGreen_V_1_fu_426_p1.read());
}

void getPixelClassification_Stream::thread_rhs_V_5_fu_464_p1() {
    rhs_V_5_fu_464_p1 = esl_zext<9,8>(colorBlue_V_1_fu_430_p4.read());
}

void getPixelClassification_Stream::thread_rhs_V_6_cast_fu_496_p3() {
    rhs_V_6_cast_fu_496_p3 = (!rhs_V_6_fu_474_p3.read()[0].is_01())? sc_lv<9>(): ((rhs_V_6_fu_474_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_rhs_V_6_fu_474_p3() {
    rhs_V_6_fu_474_p3 = p_color_array_stream_s_q2.read().range(16, 16);
}

void getPixelClassification_Stream::thread_rhs_V_7_fu_510_p1() {
    rhs_V_7_fu_510_p1 = esl_zext<9,8>(colorGreen_V_2_fu_482_p1.read());
}

void getPixelClassification_Stream::thread_rhs_V_8_fu_520_p1() {
    rhs_V_8_fu_520_p1 = esl_zext<9,8>(colorBlue_V_2_fu_486_p4.read());
}

void getPixelClassification_Stream::thread_rhs_V_cast_fu_376_p3() {
    rhs_V_cast_fu_376_p3 = (!rhs_V_fu_350_p3.read()[0].is_01())? sc_lv<9>(): ((rhs_V_fu_350_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_rhs_V_fu_350_p3() {
    rhs_V_fu_350_p3 = p_color_array_stream_s_q0.read().range(16, 16);
}

void getPixelClassification_Stream::thread_tmp10_cast_fu_744_p1() {
    tmp10_cast_fu_744_p1 = esl_sext<30,29>(tmp10_fu_738_p2.read());
}

void getPixelClassification_Stream::thread_tmp10_fu_738_p2() {
    tmp10_fu_738_p2 = (!p_Val2_6_cast_cast_fu_735_p1.read().is_01() || !p_Val2_4_cast_fu_731_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(p_Val2_6_cast_cast_fu_735_p1.read()) + sc_bigint<29>(p_Val2_4_cast_fu_731_p1.read()));
}

void getPixelClassification_Stream::thread_tmp14_cast_fu_825_p1() {
    tmp14_cast_fu_825_p1 = esl_sext<30,29>(tmp14_fu_819_p2.read());
}

void getPixelClassification_Stream::thread_tmp14_fu_819_p2() {
    tmp14_fu_819_p2 = (!p_Val2_10_cast_cas_fu_815_p1.read().is_01() || !p_Val2_7_cast_fu_783_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(p_Val2_10_cast_cas_fu_815_p1.read()) + sc_bigint<29>(p_Val2_7_cast_fu_783_p1.read()));
}

void getPixelClassification_Stream::thread_tmp1_fu_283_p1() {
    tmp1_fu_283_p1 = esl_zext<64,2>(ap_phi_mux_minimumDistanceIndex_3_phi_fu_197_p6.read());
}

void getPixelClassification_Stream::thread_tmp6_cast_fu_702_p1() {
    tmp6_cast_fu_702_p1 = esl_sext<30,29>(tmp6_fu_696_p2.read());
}

void getPixelClassification_Stream::thread_tmp6_fu_696_p2() {
    tmp6_fu_696_p2 = (!p_Val2_2_cast_cast_fu_693_p1.read().is_01() || !p_Val2_1_cast_fu_689_p1.read().is_01())? sc_lv<29>(): (sc_bigint<29>(p_Val2_2_cast_cast_fu_693_p1.read()) + sc_bigint<29>(p_Val2_1_cast_fu_689_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_11_fu_764_p3() {
    tmp_11_fu_764_p3 = esl_concat<18,9>(result_9_fu_758_p2.read(), ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_tmp_12_fu_776_p3() {
    tmp_12_fu_776_p3 = esl_concat<18,10>(result_4_reg_1095.read(), ap_const_lv10_0);
}

void getPixelClassification_Stream::thread_tmp_16_fu_554_p0() {
    tmp_16_fu_554_p0 = r_V_2_reg_1027.read();
}

void getPixelClassification_Stream::thread_tmp_16_fu_554_p1() {
    tmp_16_fu_554_p1 = r_V_2_reg_1027.read();
}

void getPixelClassification_Stream::thread_tmp_16_fu_554_p2() {
    tmp_16_fu_554_p2 = (!tmp_16_fu_554_p0.read().is_01() || !tmp_16_fu_554_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(tmp_16_fu_554_p0.read()) * sc_bigint<9>(tmp_16_fu_554_p1.read());
}

void getPixelClassification_Stream::thread_tmp_1_1_fu_886_p2() {
    tmp_1_1_fu_886_p2 = (!tmp_5_i1_fu_883_p1.read().is_01() || !minimumDistance_1_fu_875_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_5_i1_fu_883_p1.read()) < sc_bigint<32>(minimumDistance_1_fu_875_p3.read()));
}

void getPixelClassification_Stream::thread_tmp_1_2_fu_928_p2() {
    tmp_1_2_fu_928_p2 = (!tmp_5_i2_fu_925_p1.read().is_01() || !minimumDistance_1_1_reg_1147.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_5_i2_fu_925_p1.read()) < sc_bigint<32>(minimumDistance_1_1_reg_1147.read()));
}

void getPixelClassification_Stream::thread_tmp_1_fu_864_p2() {
    tmp_1_fu_864_p2 = (!tmp_5_i_fu_861_p1.read().is_01() || !ap_phi_mux_minimumDistance4_phi_fu_240_p6.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_5_i_fu_861_p1.read()) < sc_bigint<32>(ap_phi_mux_minimumDistance4_phi_fu_240_p6.read()));
}

void getPixelClassification_Stream::thread_tmp_23_fu_614_p0() {
    tmp_23_fu_614_p0 = r_V_5_reg_1043.read();
}

void getPixelClassification_Stream::thread_tmp_23_fu_614_p1() {
    tmp_23_fu_614_p1 = r_V_5_reg_1043.read();
}

void getPixelClassification_Stream::thread_tmp_23_fu_614_p2() {
    tmp_23_fu_614_p2 = (!tmp_23_fu_614_p0.read().is_01() || !tmp_23_fu_614_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(tmp_23_fu_614_p0.read()) * sc_bigint<9>(tmp_23_fu_614_p1.read());
}

void getPixelClassification_Stream::thread_tmp_28_fu_665_p0() {
    tmp_28_fu_665_p0 = r_V_8_reg_1059.read();
}

void getPixelClassification_Stream::thread_tmp_28_fu_665_p1() {
    tmp_28_fu_665_p1 = r_V_8_reg_1059.read();
}

void getPixelClassification_Stream::thread_tmp_28_fu_665_p2() {
    tmp_28_fu_665_p2 = (!tmp_28_fu_665_p0.read().is_01() || !tmp_28_fu_665_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(tmp_28_fu_665_p0.read()) * sc_bigint<9>(tmp_28_fu_665_p1.read());
}

void getPixelClassification_Stream::thread_tmp_29_fu_316_p1() {
    tmp_29_fu_316_p1 = i_2_fu_310_p2.read().range(2-1, 0);
}

void getPixelClassification_Stream::thread_tmp_2_1_fu_892_p2() {
    tmp_2_1_fu_892_p2 = (!tmp_9_reg_1131.read().is_01() || !ap_const_lv12_96.is_01())? sc_lv<1>(): (sc_biguint<12>(tmp_9_reg_1131.read()) < sc_biguint<12>(ap_const_lv12_96));
}

void getPixelClassification_Stream::thread_tmp_2_2_fu_933_p2() {
    tmp_2_2_fu_933_p2 = (!tmp_14_reg_1153.read().is_01() || !ap_const_lv12_96.is_01())? sc_lv<1>(): (sc_biguint<12>(tmp_14_reg_1153.read()) < sc_biguint<12>(ap_const_lv12_96));
}

void getPixelClassification_Stream::thread_tmp_2_fu_845_p2() {
    tmp_2_fu_845_p2 = (!tmp_7_fu_835_p4.read().is_01() || !ap_const_lv12_96.is_01())? sc_lv<1>(): (sc_biguint<12>(tmp_7_fu_835_p4.read()) < sc_biguint<12>(ap_const_lv12_96));
}

void getPixelClassification_Stream::thread_tmp_3_fu_305_p1() {
    tmp_3_fu_305_p1 = esl_zext<64,3>(i_1_fu_299_p2.read());
}

void getPixelClassification_Stream::thread_tmp_4_fu_671_p3() {
    tmp_4_fu_671_p3 = esl_concat<18,9>(result_reg_1065.read(), ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_tmp_5_fu_713_p3() {
    tmp_5_fu_713_p3 = esl_concat<18,9>(result_3_reg_1080.read(), ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_tmp_5_i1_fu_883_p1() {
    tmp_5_i1_fu_883_p1 = esl_zext<32,12>(tmp_9_reg_1131.read());
}

void getPixelClassification_Stream::thread_tmp_5_i2_fu_925_p1() {
    tmp_5_i2_fu_925_p1 = esl_zext<32,12>(tmp_14_reg_1153.read());
}

void getPixelClassification_Stream::thread_tmp_5_i_fu_861_p1() {
    tmp_5_i_fu_861_p1 = esl_zext<32,12>(tmp_7_reg_1121.read());
}

void getPixelClassification_Stream::thread_tmp_6_fu_682_p3() {
    tmp_6_fu_682_p3 = esl_concat<18,10>(result_s_reg_1070.read(), ap_const_lv10_0);
}

void getPixelClassification_Stream::thread_tmp_7_fu_835_p4() {
    tmp_7_fu_835_p4 = grp_fxp_sqrt_fu_264_ap_return.read().range(19, 8);
}

void getPixelClassification_Stream::thread_tmp_8_fu_724_p3() {
    tmp_8_fu_724_p3 = esl_concat<18,10>(result_6_reg_1085.read(), ap_const_lv10_0);
}

void getPixelClassification_Stream::thread_tmp_s_fu_294_p1() {
    tmp_s_fu_294_p1 = esl_zext<64,3>(i_fu_288_p2.read());
}

void getPixelClassification_Stream::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reset_idle_pp0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void getPixelClassification_Stream::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_V_TDATA\" :  \"" << in_pixel_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_V_TVALID\" :  \"" << in_pixel_V_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_pixel_V_TREADY\" :  \"" << in_pixel_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_V_TDATA\" :  \"" << out_pixel_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_V_TVALID\" :  \"" << out_pixel_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_pixel_V_TREADY\" :  \"" << out_pixel_V_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

