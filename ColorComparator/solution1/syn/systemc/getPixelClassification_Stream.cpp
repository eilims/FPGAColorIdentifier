// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getPixelClassification_Stream.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getPixelClassification_Stream::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getPixelClassification_Stream::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_state1 = "1";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage8 = "1000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage9 = "10000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage10 = "100000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage11 = "1000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage12 = "10000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage13 = "100000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage14 = "1000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage15 = "10000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage16 = "100000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage17 = "1000000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage18 = "10000000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage19 = "100000000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage20 = "1000000000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage21 = "10000000000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage22 = "100000000000000000000000";
const sc_lv<25> getPixelClassification_Stream::ap_ST_fsm_pp0_stage23 = "1000000000000000000000000";
const bool getPixelClassification_Stream::ap_const_boolean_1 = true;
const sc_lv<1> getPixelClassification_Stream::ap_const_lv1_0 = "0";
const sc_lv<1> getPixelClassification_Stream::ap_const_lv1_1 = "1";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_0 = "00";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_2 = "10";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_3 = "11";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_1 = "1";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_2 = "10";
const bool getPixelClassification_Stream::ap_const_boolean_0 = false;
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_18 = "11000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_1 = "1";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_3 = "11";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_4 = "100";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_5 = "101";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_6 = "110";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_7 = "111";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_8 = "1000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_9 = "1001";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_14 = "10100";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_15 = "10101";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_16 = "10110";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_17 = "10111";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_A = "1010";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_B = "1011";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_C = "1100";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_D = "1101";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_E = "1110";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_F = "1111";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_10 = "10000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_11 = "10001";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_12 = "10010";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_13 = "10011";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<12> getPixelClassification_Stream::ap_const_lv12_13B = "100111011";
const sc_lv<9> getPixelClassification_Stream::ap_const_lv9_FF = "11111111";
const sc_lv<9> getPixelClassification_Stream::ap_const_lv9_0 = "000000000";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_1 = "1";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_0 = "000";
const sc_lv<15> getPixelClassification_Stream::ap_const_lv15_1D = "11101";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_2 = "10";
const sc_lv<42> getPixelClassification_Stream::ap_const_lv42_19999A = "110011001100110011010";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_29 = "101001";
const sc_lv<41> getPixelClassification_Stream::ap_const_lv41_0 = "00000000000000000000000000000000000000000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_28 = "101000";
const sc_lv<20> getPixelClassification_Stream::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<45> getPixelClassification_Stream::ap_const_lv45_666667 = "11001100110011001100111";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_1B = "11011";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_2C = "101100";
const sc_lv<21> getPixelClassification_Stream::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<8> getPixelClassification_Stream::ap_const_lv8_0 = "00000000";
const sc_lv<45> getPixelClassification_Stream::ap_const_lv45_0 = "000000000000000000000000000000000000000000000";
const sc_lv<22> getPixelClassification_Stream::ap_const_lv22_0 = "0000000000000000000000";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_3 = "11";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_6 = "110";

getPixelClassification_Stream::getPixelClassification_Stream(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_color_array_stream_s_U = new getPixelClassificbkb("p_color_array_stream_s_U");
    p_color_array_stream_s_U->clk(ap_clk);
    p_color_array_stream_s_U->reset(ap_rst_n_inv);
    p_color_array_stream_s_U->address0(p_color_array_stream_s_address0);
    p_color_array_stream_s_U->ce0(p_color_array_stream_s_ce0);
    p_color_array_stream_s_U->q0(p_color_array_stream_s_q0);
    grp_fxp_sqrt_fu_329 = new fxp_sqrt("grp_fxp_sqrt_fu_329");
    grp_fxp_sqrt_fu_329->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_329->ap_rst(ap_rst_n_inv);
    grp_fxp_sqrt_fu_329->in_val_V_read(grp_fxp_sqrt_fu_329_in_val_V_read);
    grp_fxp_sqrt_fu_329->ap_return(grp_fxp_sqrt_fu_329_ap_return);
    grp_fxp_sqrt_fu_329->ap_ce(grp_fxp_sqrt_fu_329_ap_ce);
    grp_fxp_sqrt_fu_334 = new fxp_sqrt("grp_fxp_sqrt_fu_334");
    grp_fxp_sqrt_fu_334->ap_clk(ap_clk);
    grp_fxp_sqrt_fu_334->ap_rst(ap_rst_n_inv);
    grp_fxp_sqrt_fu_334->in_val_V_read(grp_fxp_sqrt_fu_334_in_val_V_read);
    grp_fxp_sqrt_fu_334->ap_return(grp_fxp_sqrt_fu_334_ap_return);
    grp_fxp_sqrt_fu_334->ap_ce(grp_fxp_sqrt_fu_334_ap_ce);
    getPixelClassificcud_U2 = new getPixelClassificcud<1,1,15,9,22>("getPixelClassificcud_U2");
    getPixelClassificcud_U2->din0(tmp10_reg_1807);
    getPixelClassificcud_U2->din1(r_V_2_reg_1802);
    getPixelClassificcud_U2->dout(tmp_9_i1_tr_fu_1704_p2);
    getPixelClassificcud_U3 = new getPixelClassificcud<1,1,15,9,22>("getPixelClassificcud_U3");
    getPixelClassificcud_U3->din0(tmp12_reg_1866);
    getPixelClassificcud_U3->din1(r_V_5_reg_1861);
    getPixelClassificcud_U3->dout(tmp_9_i_tr_fu_1711_p2);
    getPixelClassificcud_U4 = new getPixelClassificcud<1,1,15,9,22>("getPixelClassificcud_U4");
    getPixelClassificcud_U4->din0(tmp14_reg_1919);
    getPixelClassificcud_U4->din1(r_V_8_reg_1881);
    getPixelClassificcud_U4->dout(tmp_9_i2_tr_fu_1718_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state26_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state26_io );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage10_11001);

    SC_METHOD(thread_ap_block_pp0_stage10_subdone);

    SC_METHOD(thread_ap_block_pp0_stage11_11001);

    SC_METHOD(thread_ap_block_pp0_stage11_subdone);

    SC_METHOD(thread_ap_block_pp0_stage12_11001);

    SC_METHOD(thread_ap_block_pp0_stage12_subdone);

    SC_METHOD(thread_ap_block_pp0_stage13_11001);

    SC_METHOD(thread_ap_block_pp0_stage13_subdone);

    SC_METHOD(thread_ap_block_pp0_stage14_11001);

    SC_METHOD(thread_ap_block_pp0_stage14_subdone);

    SC_METHOD(thread_ap_block_pp0_stage15_11001);

    SC_METHOD(thread_ap_block_pp0_stage15_subdone);

    SC_METHOD(thread_ap_block_pp0_stage16_11001);

    SC_METHOD(thread_ap_block_pp0_stage16_subdone);

    SC_METHOD(thread_ap_block_pp0_stage17_11001);

    SC_METHOD(thread_ap_block_pp0_stage17_subdone);

    SC_METHOD(thread_ap_block_pp0_stage18_11001);

    SC_METHOD(thread_ap_block_pp0_stage18_subdone);

    SC_METHOD(thread_ap_block_pp0_stage19);

    SC_METHOD(thread_ap_block_pp0_stage19_11001);

    SC_METHOD(thread_ap_block_pp0_stage19_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( out_pixel_user_V_1_ack_in );
    sensitive << ( out_pixel_last_V_1_ack_in );
    sensitive << ( out_pixel_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( out_pixel_user_V_1_ack_in );
    sensitive << ( out_pixel_last_V_1_ack_in );
    sensitive << ( out_pixel_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state27_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( out_pixel_user_V_1_ack_in );
    sensitive << ( out_pixel_last_V_1_ack_in );
    sensitive << ( out_pixel_data_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state27_io );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage20);

    SC_METHOD(thread_ap_block_pp0_stage20_11001);

    SC_METHOD(thread_ap_block_pp0_stage20_subdone);

    SC_METHOD(thread_ap_block_pp0_stage21);

    SC_METHOD(thread_ap_block_pp0_stage21_11001);

    SC_METHOD(thread_ap_block_pp0_stage21_subdone);

    SC_METHOD(thread_ap_block_pp0_stage22_11001);

    SC_METHOD(thread_ap_block_pp0_stage22_subdone);

    SC_METHOD(thread_ap_block_pp0_stage23);

    SC_METHOD(thread_ap_block_pp0_stage23_11001);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( ap_predicate_op345_read_state25 );
    sensitive << ( ap_predicate_op348_read_state25 );

    SC_METHOD(thread_ap_block_pp0_stage23_subdone);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( ap_predicate_op345_read_state25 );
    sensitive << ( ap_predicate_op348_read_state25 );

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_pp0_stage8);

    SC_METHOD(thread_ap_block_pp0_stage8_11001);

    SC_METHOD(thread_ap_block_pp0_stage8_subdone);

    SC_METHOD(thread_ap_block_pp0_stage9_11001);

    SC_METHOD(thread_ap_block_pp0_stage9_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage8_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage9_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage9_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state12_pp0_stage10_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage10_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state13_pp0_stage11_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage11_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state14_pp0_stage12_iter0);

    SC_METHOD(thread_ap_block_state14_pp0_stage12_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state15_pp0_stage13_iter0);

    SC_METHOD(thread_ap_block_state15_pp0_stage13_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state16_pp0_stage14_iter0);

    SC_METHOD(thread_ap_block_state16_pp0_stage14_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state17_pp0_stage15_iter0);

    SC_METHOD(thread_ap_block_state17_pp0_stage15_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state18_pp0_stage16_iter0);

    SC_METHOD(thread_ap_block_state18_pp0_stage16_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state19_pp0_stage17_iter0);

    SC_METHOD(thread_ap_block_state19_pp0_stage17_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state20_pp0_stage18_iter0);

    SC_METHOD(thread_ap_block_state20_pp0_stage18_iter0_ignore_call82);

    SC_METHOD(thread_ap_block_state21_pp0_stage19_iter0);

    SC_METHOD(thread_ap_block_state22_pp0_stage20_iter0);

    SC_METHOD(thread_ap_block_state23_pp0_stage21_iter0);

    SC_METHOD(thread_ap_block_state24_pp0_stage22_iter0);

    SC_METHOD(thread_ap_block_state25_pp0_stage23_iter0);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( ap_predicate_op345_read_state25 );
    sensitive << ( ap_predicate_op348_read_state25 );

    SC_METHOD(thread_ap_block_state26_io);
    sensitive << ( out_pixel_user_V_1_ack_in );
    sensitive << ( exitcond_reg_2119 );

    SC_METHOD(thread_ap_block_state26_pp0_stage0_iter1);
    sensitive << ( in_pixel_user_V_0_vld_out );
    sensitive << ( exitcond_reg_2119 );

    SC_METHOD(thread_ap_block_state27_io);
    sensitive << ( out_pixel_user_V_1_ack_in );
    sensitive << ( exitcond_reg_2119 );

    SC_METHOD(thread_ap_block_state27_pp0_stage1_iter1);
    sensitive << ( out_pixel_user_V_1_ack_in );
    sensitive << ( out_pixel_last_V_1_ack_in );
    sensitive << ( out_pixel_data_V_1_ack_in );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( in_pixel_user_V_0_vld_out );

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_445);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_765);
    sensitive << ( ap_CS_fsm_pp0_stage20 );
    sensitive << ( ap_block_pp0_stage20_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_do_init_phi_fu_262_p6);
    sensitive << ( do_init_reg_257 );

    SC_METHOD(thread_ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6);
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( minimumDistanceIndex_9_reg_227 );
    sensitive << ( tmp_91_reg_2114 );
    sensitive << ( ap_condition_445 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_out_pixel_data_V_tmp_reg_315);

    SC_METHOD(thread_ap_predicate_op345_read_state25);
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( tmp_reg_2123 );

    SC_METHOD(thread_ap_predicate_op348_read_state25);
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( tmp_reg_2123 );
    sensitive << ( tmp_3_reg_2127 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_colorGreen_V_1_fu_549_p1);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_colorGreen_V_2_fu_677_p1);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_colorGreen_V_fu_420_p1);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_exitcond_fu_1656_p2);
    sensitive << ( ap_CS_fsm_pp0_stage21 );
    sensitive << ( ap_block_pp0_stage21_11001 );
    sensitive << ( i_2_fu_1647_p2 );

    SC_METHOD(thread_grp_fu_343_p4);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_grp_fu_353_p4);
    sensitive << ( grp_fxp_sqrt_fu_329_ap_return );

    SC_METHOD(thread_grp_fu_363_p2);
    sensitive << ( ap_CS_fsm_pp0_stage19 );
    sensitive << ( ap_block_pp0_stage19_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage20 );
    sensitive << ( ap_block_pp0_stage20_11001 );
    sensitive << ( grp_fu_353_p4 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_329_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage19 );
    sensitive << ( ap_block_pp0_stage19_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage20 );
    sensitive << ( ap_block_pp0_stage20_11001 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_block_pp0_stage16_11001 );
    sensitive << ( ap_block_pp0_stage17_11001 );
    sensitive << ( ap_block_pp0_stage18_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage16 );
    sensitive << ( ap_CS_fsm_pp0_stage17 );
    sensitive << ( ap_CS_fsm_pp0_stage18 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_329_in_val_V_read);
    sensitive << ( powerSummation_V_fu_1257_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( powerSummation_V_2_fu_1504_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_334_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage19 );
    sensitive << ( ap_block_pp0_stage19_11001 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_block_pp0_stage16_11001 );
    sensitive << ( ap_block_pp0_stage17_11001 );
    sensitive << ( ap_block_pp0_stage18_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_CS_fsm_pp0_stage16 );
    sensitive << ( ap_CS_fsm_pp0_stage17 );
    sensitive << ( ap_CS_fsm_pp0_stage18 );

    SC_METHOD(thread_grp_fxp_sqrt_fu_334_in_val_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( tmp13_cast_fu_1313_p1 );
    sensitive << ( p_Val2_1_fu_1309_p1 );

    SC_METHOD(thread_i_1_cast_fu_1621_p1);
    sensitive << ( i_1_reg_1822 );

    SC_METHOD(thread_i_1_fu_566_p2);
    sensitive << ( minimumDistanceIndex_3_reg_1730 );

    SC_METHOD(thread_i_2_fu_1647_p2);
    sensitive << ( minimumDistanceIndex_3_reg_1730 );

    SC_METHOD(thread_i_cast_fu_1562_p1);
    sensitive << ( i_reg_1762 );

    SC_METHOD(thread_i_fu_442_p2);
    sensitive << ( minimumDistanceIndex_3_fu_384_p1 );

    SC_METHOD(thread_in_pixel_TDATA_blk_n);
    sensitive << ( in_pixel_data_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage23 );
    sensitive << ( ap_block_pp0_stage23 );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( tmp_reg_2123 );
    sensitive << ( tmp_3_reg_2127 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_pixel_TREADY);
    sensitive << ( in_pixel_data_V_0_state );

    SC_METHOD(thread_in_pixel_data_V_0_ack_in);
    sensitive << ( in_pixel_data_V_0_state );

    SC_METHOD(thread_in_pixel_data_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage23 );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_predicate_op345_read_state25 );
    sensitive << ( ap_predicate_op348_read_state25 );
    sensitive << ( ap_block_pp0_stage23_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_pixel_data_V_0_data_out);
    sensitive << ( in_pixel_data_V_0_payload_A );
    sensitive << ( in_pixel_data_V_0_payload_B );
    sensitive << ( in_pixel_data_V_0_sel );

    SC_METHOD(thread_in_pixel_data_V_0_load_A);
    sensitive << ( in_pixel_data_V_0_sel_wr );
    sensitive << ( in_pixel_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_data_V_0_load_B);
    sensitive << ( in_pixel_data_V_0_sel_wr );
    sensitive << ( in_pixel_data_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_data_V_0_sel);
    sensitive << ( in_pixel_data_V_0_sel_rd );

    SC_METHOD(thread_in_pixel_data_V_0_state_cmp_full);
    sensitive << ( in_pixel_data_V_0_state );

    SC_METHOD(thread_in_pixel_data_V_0_vld_in);
    sensitive << ( in_pixel_TVALID );

    SC_METHOD(thread_in_pixel_data_V_0_vld_out);
    sensitive << ( in_pixel_data_V_0_state );

    SC_METHOD(thread_in_pixel_last_V_0_ack_in);
    sensitive << ( in_pixel_last_V_0_state );

    SC_METHOD(thread_in_pixel_last_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage23 );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_predicate_op345_read_state25 );
    sensitive << ( ap_predicate_op348_read_state25 );
    sensitive << ( ap_block_pp0_stage23_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_pixel_last_V_0_data_out);
    sensitive << ( in_pixel_last_V_0_payload_A );
    sensitive << ( in_pixel_last_V_0_payload_B );
    sensitive << ( in_pixel_last_V_0_sel );

    SC_METHOD(thread_in_pixel_last_V_0_load_A);
    sensitive << ( in_pixel_last_V_0_sel_wr );
    sensitive << ( in_pixel_last_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_last_V_0_load_B);
    sensitive << ( in_pixel_last_V_0_sel_wr );
    sensitive << ( in_pixel_last_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_last_V_0_sel);
    sensitive << ( in_pixel_last_V_0_sel_rd );

    SC_METHOD(thread_in_pixel_last_V_0_state_cmp_full);
    sensitive << ( in_pixel_last_V_0_state );

    SC_METHOD(thread_in_pixel_last_V_0_vld_in);
    sensitive << ( in_pixel_TVALID );

    SC_METHOD(thread_in_pixel_last_V_0_vld_out);
    sensitive << ( in_pixel_last_V_0_state );

    SC_METHOD(thread_in_pixel_user_V_0_ack_in);
    sensitive << ( in_pixel_user_V_0_state );

    SC_METHOD(thread_in_pixel_user_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage23 );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_predicate_op345_read_state25 );
    sensitive << ( ap_predicate_op348_read_state25 );
    sensitive << ( ap_block_pp0_stage23_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_pixel_user_V_0_data_out);
    sensitive << ( in_pixel_user_V_0_payload_A );
    sensitive << ( in_pixel_user_V_0_payload_B );
    sensitive << ( in_pixel_user_V_0_sel );

    SC_METHOD(thread_in_pixel_user_V_0_load_A);
    sensitive << ( in_pixel_user_V_0_sel_wr );
    sensitive << ( in_pixel_user_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_user_V_0_load_B);
    sensitive << ( in_pixel_user_V_0_sel_wr );
    sensitive << ( in_pixel_user_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_user_V_0_sel);
    sensitive << ( in_pixel_user_V_0_sel_rd );

    SC_METHOD(thread_in_pixel_user_V_0_state_cmp_full);
    sensitive << ( in_pixel_user_V_0_state );

    SC_METHOD(thread_in_pixel_user_V_0_vld_in);
    sensitive << ( in_pixel_TVALID );

    SC_METHOD(thread_in_pixel_user_V_0_vld_out);
    sensitive << ( in_pixel_user_V_0_state );

    SC_METHOD(thread_lhs_V_1_fu_424_p1);
    sensitive << ( pixelRed_V_fu_388_p4 );

    SC_METHOD(thread_lhs_V_2_fu_488_p1);
    sensitive << ( pixelGreen_V_reg_1736 );

    SC_METHOD(thread_lhs_V_3_fu_518_p1);
    sensitive << ( pixelBlue_V_reg_1741 );

    SC_METHOD(thread_lhs_V_fu_1674_p1);
    sensitive << ( ap_phi_reg_pp0_iter0_in_switch_V51_phi_reg_303 );

    SC_METHOD(thread_minimumDistanceIndex_1_fu_1535_p3);
    sensitive << ( minimumDistanceIndex_reg_289 );
    sensitive << ( tmp_4_reg_2058 );
    sensitive << ( minimumDistanceIndex_4_fu_1531_p1 );

    SC_METHOD(thread_minimumDistanceIndex_2_fu_1548_p3);
    sensitive << ( minimumDistanceIndex_reg_289 );
    sensitive << ( tmp_2_reg_2052 );
    sensitive << ( minimumDistanceIndex_1_fu_1535_p3 );

    SC_METHOD(thread_minimumDistanceIndex_3_fu_384_p1);
    sensitive << ( minimumDistanceIndex_9_reg_227 );

    SC_METHOD(thread_minimumDistanceIndex_4_fu_1531_p1);
    sensitive << ( minimumDistanceIndex_9_reg_227 );

    SC_METHOD(thread_minimumDistanceIndex_5_fu_1579_p3);
    sensitive << ( tmp_4_1_fu_1574_p2 );
    sensitive << ( i_cast_fu_1562_p1 );
    sensitive << ( minimumDistanceIndex_2_fu_1548_p3 );

    SC_METHOD(thread_minimumDistanceIndex_6_fu_1595_p3);
    sensitive << ( minimumDistanceIndex_2_fu_1548_p3 );
    sensitive << ( tmp_2_1_fu_1568_p2 );
    sensitive << ( minimumDistanceIndex_5_fu_1579_p3 );

    SC_METHOD(thread_minimumDistanceIndex_7_fu_1624_p3);
    sensitive << ( minimumDistanceIndex_6_reg_2075 );
    sensitive << ( tmp_4_2_reg_2098 );
    sensitive << ( i_1_cast_fu_1621_p1 );

    SC_METHOD(thread_minimumDistanceIndex_8_fu_1635_p3);
    sensitive << ( minimumDistanceIndex_6_reg_2075 );
    sensitive << ( tmp_2_2_reg_2092 );
    sensitive << ( minimumDistanceIndex_7_fu_1624_p3 );

    SC_METHOD(thread_minimumDistance_1_1_fu_1587_p3);
    sensitive << ( tmp_14_i_fu_1565_p1 );
    sensitive << ( minimumDistance_2_fu_1555_p3 );
    sensitive << ( tmp_4_1_fu_1574_p2 );

    SC_METHOD(thread_minimumDistance_1_2_fu_1630_p3);
    sensitive << ( minimumDistance_2_1_reg_2081 );
    sensitive << ( tmp_14_i2_reg_2087 );
    sensitive << ( tmp_4_2_reg_2098 );

    SC_METHOD(thread_minimumDistance_1_fu_1542_p3);
    sensitive << ( minimumDistance_reg_242 );
    sensitive << ( tmp_14_i1_reg_2047 );
    sensitive << ( tmp_4_reg_2058 );

    SC_METHOD(thread_minimumDistance_2_1_fu_1603_p3);
    sensitive << ( minimumDistance_2_fu_1555_p3 );
    sensitive << ( tmp_2_1_fu_1568_p2 );
    sensitive << ( minimumDistance_1_1_fu_1587_p3 );

    SC_METHOD(thread_minimumDistance_2_2_fu_1641_p3);
    sensitive << ( minimumDistance_2_1_reg_2081 );
    sensitive << ( tmp_2_2_reg_2092 );
    sensitive << ( minimumDistance_1_2_fu_1630_p3 );

    SC_METHOD(thread_minimumDistance_2_fu_1555_p3);
    sensitive << ( minimumDistance_reg_242 );
    sensitive << ( tmp_2_reg_2052 );
    sensitive << ( minimumDistance_1_fu_1542_p3 );

    SC_METHOD(thread_mul1_fu_723_p1);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_5_i1_fu_712_p3 );

    SC_METHOD(thread_mul1_fu_723_p2);
    sensitive << ( mul1_fu_723_p1 );

    SC_METHOD(thread_mul2_fu_1166_p1);
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( tmp_5_i2_fu_1155_p3 );

    SC_METHOD(thread_mul2_fu_1166_p2);
    sensitive << ( mul2_fu_1166_p1 );

    SC_METHOD(thread_mul3_fu_820_p1);
    sensitive << ( tmp_9_i1_tr_reg_1832 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );

    SC_METHOD(thread_mul3_fu_820_p2);
    sensitive << ( mul3_fu_820_p1 );

    SC_METHOD(thread_mul4_fu_847_p1);
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( tmp_5_i_fu_836_p3 );

    SC_METHOD(thread_mul4_fu_847_p2);
    sensitive << ( mul4_fu_847_p1 );

    SC_METHOD(thread_mul5_fu_870_p1);
    sensitive << ( tmp_9_i_tr_reg_1897 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5 );

    SC_METHOD(thread_mul5_fu_870_p2);
    sensitive << ( mul5_fu_870_p1 );

    SC_METHOD(thread_mul_fu_1189_p1);
    sensitive << ( tmp_9_i2_tr_reg_1964 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );

    SC_METHOD(thread_mul_fu_1189_p2);
    sensitive << ( mul_fu_1189_p1 );

    SC_METHOD(thread_neg_mul1_fu_782_p2);
    sensitive << ( tmp_27_reg_1887 );

    SC_METHOD(thread_neg_mul2_fu_931_p2);
    sensitive << ( mul3_reg_1934 );

    SC_METHOD(thread_neg_mul3_fu_1338_p2);
    sensitive << ( tmp_84_reg_2002 );

    SC_METHOD(thread_neg_mul4_fu_1006_p2);
    sensitive << ( tmp_70_reg_1944 );

    SC_METHOD(thread_neg_mul5_fu_1060_p2);
    sensitive << ( mul5_reg_1954 );

    SC_METHOD(thread_neg_mul_fu_1392_p2);
    sensitive << ( mul_reg_2012 );

    SC_METHOD(thread_neg_ti1_fu_811_p2);
    sensitive << ( tmp_12_fu_804_p3 );

    SC_METHOD(thread_neg_ti2_fu_960_p2);
    sensitive << ( tmp_20_fu_953_p3 );

    SC_METHOD(thread_neg_ti3_fu_1035_p2);
    sensitive << ( tmp_36_fu_1028_p3 );

    SC_METHOD(thread_neg_ti4_fu_1089_p2);
    sensitive << ( tmp_48_fu_1082_p3 );

    SC_METHOD(thread_neg_ti8_fu_1367_p2);
    sensitive << ( tmp_54_fu_1360_p3 );

    SC_METHOD(thread_neg_ti_fu_1421_p2);
    sensitive << ( tmp_58_fu_1414_p3 );

    SC_METHOD(thread_number_assign_3_cast_fu_589_p1);
    sensitive << ( r_V_3_reg_1817 );

    SC_METHOD(thread_number_assign_6_cast_fu_1120_p1);
    sensitive << ( r_V_6_reg_1871 );

    SC_METHOD(thread_number_assign_cast_fu_453_p1);
    sensitive << ( r_V_reg_1757 );

    SC_METHOD(thread_out_pixel_TDATA);
    sensitive << ( out_pixel_data_V_1_data_out );

    SC_METHOD(thread_out_pixel_TDATA_blk_n);
    sensitive << ( out_pixel_data_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_pixel_TLAST);
    sensitive << ( out_pixel_last_V_1_data_out );

    SC_METHOD(thread_out_pixel_TUSER);
    sensitive << ( out_pixel_user_V_1_data_out );

    SC_METHOD(thread_out_pixel_TVALID);
    sensitive << ( out_pixel_data_V_1_state );

    SC_METHOD(thread_out_pixel_data_V_1_ack_in);
    sensitive << ( out_pixel_data_V_1_state );

    SC_METHOD(thread_out_pixel_data_V_1_ack_out);
    sensitive << ( out_pixel_TREADY );

    SC_METHOD(thread_out_pixel_data_V_1_data_out);
    sensitive << ( out_pixel_data_V_1_payload_A );
    sensitive << ( out_pixel_data_V_1_payload_B );
    sensitive << ( out_pixel_data_V_1_sel );

    SC_METHOD(thread_out_pixel_data_V_1_load_A);
    sensitive << ( out_pixel_data_V_1_sel_wr );
    sensitive << ( out_pixel_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_data_V_1_load_B);
    sensitive << ( out_pixel_data_V_1_sel_wr );
    sensitive << ( out_pixel_data_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_data_V_1_sel);
    sensitive << ( out_pixel_data_V_1_sel_rd );

    SC_METHOD(thread_out_pixel_data_V_1_state_cmp_full);
    sensitive << ( out_pixel_data_V_1_state );

    SC_METHOD(thread_out_pixel_data_V_1_vld_in);
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_pixel_data_V_1_vld_out);
    sensitive << ( out_pixel_data_V_1_state );

    SC_METHOD(thread_out_pixel_last_V_1_ack_in);
    sensitive << ( out_pixel_last_V_1_state );

    SC_METHOD(thread_out_pixel_last_V_1_ack_out);
    sensitive << ( out_pixel_TREADY );

    SC_METHOD(thread_out_pixel_last_V_1_data_out);
    sensitive << ( out_pixel_last_V_1_payload_A );
    sensitive << ( out_pixel_last_V_1_payload_B );
    sensitive << ( out_pixel_last_V_1_sel );

    SC_METHOD(thread_out_pixel_last_V_1_load_A);
    sensitive << ( out_pixel_last_V_1_sel_wr );
    sensitive << ( out_pixel_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_last_V_1_load_B);
    sensitive << ( out_pixel_last_V_1_sel_wr );
    sensitive << ( out_pixel_last_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_last_V_1_sel);
    sensitive << ( out_pixel_last_V_1_sel_rd );

    SC_METHOD(thread_out_pixel_last_V_1_state_cmp_full);
    sensitive << ( out_pixel_last_V_1_state );

    SC_METHOD(thread_out_pixel_last_V_1_vld_in);
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_pixel_last_V_1_vld_out);
    sensitive << ( out_pixel_last_V_1_state );

    SC_METHOD(thread_out_pixel_user_V_1_ack_in);
    sensitive << ( out_pixel_user_V_1_state );

    SC_METHOD(thread_out_pixel_user_V_1_ack_out);
    sensitive << ( out_pixel_TREADY );

    SC_METHOD(thread_out_pixel_user_V_1_data_out);
    sensitive << ( out_pixel_user_V_1_payload_A );
    sensitive << ( out_pixel_user_V_1_payload_B );
    sensitive << ( out_pixel_user_V_1_sel );

    SC_METHOD(thread_out_pixel_user_V_1_load_A);
    sensitive << ( out_pixel_user_V_1_sel_wr );
    sensitive << ( out_pixel_user_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_user_V_1_load_B);
    sensitive << ( out_pixel_user_V_1_sel_wr );
    sensitive << ( out_pixel_user_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_user_V_1_sel);
    sensitive << ( out_pixel_user_V_1_sel_rd );

    SC_METHOD(thread_out_pixel_user_V_1_state_cmp_full);
    sensitive << ( out_pixel_user_V_1_state );

    SC_METHOD(thread_out_pixel_user_V_1_vld_in);
    sensitive << ( exitcond_reg_2119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_pixel_user_V_1_vld_out);
    sensitive << ( out_pixel_user_V_1_state );

    SC_METHOD(thread_p_Val2_1_cast_fu_927_p1);
    sensitive << ( tmp_14_fu_919_p3 );

    SC_METHOD(thread_p_Val2_1_fu_1309_p1);
    sensitive << ( tmp_69_fu_1301_p3 );

    SC_METHOD(thread_p_Val2_2_cast_fu_981_p1);
    sensitive << ( tmp_22_fu_973_p3 );

    SC_METHOD(thread_p_Val2_2_fu_1497_p1);
    sensitive << ( tmp_83_fu_1489_p3 );

    SC_METHOD(thread_p_Val2_4_cast_fu_1056_p1);
    sensitive << ( tmp_38_fu_1048_p3 );

    SC_METHOD(thread_p_Val2_5_cast_fu_1110_p1);
    sensitive << ( tmp_49_fu_1102_p3 );

    SC_METHOD(thread_p_Val2_6_cast_fu_1388_p1);
    sensitive << ( tmp_55_fu_1380_p3 );

    SC_METHOD(thread_p_Val2_7_cast_fu_1442_p1);
    sensitive << ( tmp_59_fu_1434_p3 );

    SC_METHOD(thread_p_Val2_s_fu_1250_p1);
    sensitive << ( tmp_25_fu_1242_p3 );

    SC_METHOD(thread_p_color_array_stream_8_fu_1689_p1);
    sensitive << ( p_color_array_stream_7_reg_2136 );

    SC_METHOD(thread_p_color_array_stream_s_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage21 );
    sensitive << ( tmp_s_fu_379_p1 );
    sensitive << ( tmp_1_1_fu_448_p1 );
    sensitive << ( tmp_1_2_fu_571_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_6_fu_1684_p1 );
    sensitive << ( ap_block_pp0_stage21 );

    SC_METHOD(thread_p_color_array_stream_s_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage21 );
    sensitive << ( ap_block_pp0_stage21_11001 );

    SC_METHOD(thread_p_neg_i1_fu_899_p2);
    sensitive << ( tmp_2_i1_reg_1772 );

    SC_METHOD(thread_p_neg_i2_fu_1323_p2);
    sensitive << ( tmp_2_i2_reg_1995 );

    SC_METHOD(thread_p_neg_i_fu_991_p2);
    sensitive << ( tmp_2_i_reg_1843 );

    SC_METHOD(thread_p_shl_i1_cast_fu_478_p1);
    sensitive << ( p_shl_i1_fu_470_p3 );

    SC_METHOD(thread_p_shl_i1_fu_470_p3);
    sensitive << ( tmp_9_fu_466_p1 );

    SC_METHOD(thread_p_shl_i2_cast_fu_1145_p1);
    sensitive << ( p_shl_i2_fu_1137_p3 );

    SC_METHOD(thread_p_shl_i2_fu_1137_p3);
    sensitive << ( tmp_79_fu_1133_p1 );

    SC_METHOD(thread_p_shl_i_cast_fu_614_p1);
    sensitive << ( p_shl_i_fu_606_p3 );

    SC_METHOD(thread_p_shl_i_fu_606_p3);
    sensitive << ( tmp_65_fu_602_p1 );

    SC_METHOD(thread_pixelGreen_V_fu_398_p1);
    sensitive << ( in_pixel_data_V_0_data_out );

    SC_METHOD(thread_pixelRed_V_fu_388_p4);
    sensitive << ( in_pixel_data_V_0_data_out );

    SC_METHOD(thread_powerSummation_V_2_fu_1504_p2);
    sensitive << ( tmp15_cast_fu_1501_p1 );
    sensitive << ( p_Val2_2_fu_1497_p1 );

    SC_METHOD(thread_powerSummation_V_fu_1257_p2);
    sensitive << ( tmp11_cast_fu_1254_p1 );
    sensitive << ( p_Val2_s_fu_1250_p1 );

    SC_METHOD(thread_r_V_1_fu_494_p2);
    sensitive << ( lhs_V_2_fu_488_p1 );
    sensitive << ( rhs_V_1_fu_491_p1 );

    SC_METHOD(thread_r_V_2_fu_525_p2);
    sensitive << ( lhs_V_3_fu_518_p1 );
    sensitive << ( rhs_V_2_fu_521_p1 );

    SC_METHOD(thread_r_V_3_fu_561_p2);
    sensitive << ( lhs_V_1_reg_1751 );
    sensitive << ( rhs_V_3_cast_fu_553_p3 );

    SC_METHOD(thread_r_V_4_fu_627_p2);
    sensitive << ( lhs_V_2_reg_1779 );
    sensitive << ( rhs_V_4_fu_624_p1 );

    SC_METHOD(thread_r_V_5_fu_654_p2);
    sensitive << ( lhs_V_3_reg_1796 );
    sensitive << ( rhs_V_5_fu_650_p1 );

    SC_METHOD(thread_r_V_6_fu_689_p2);
    sensitive << ( lhs_V_1_reg_1751 );
    sensitive << ( rhs_V_6_cast_fu_681_p3 );

    SC_METHOD(thread_r_V_7_fu_698_p2);
    sensitive << ( lhs_V_2_reg_1779 );
    sensitive << ( rhs_V_7_fu_694_p1 );

    SC_METHOD(thread_r_V_8_fu_707_p2);
    sensitive << ( lhs_V_3_reg_1796 );
    sensitive << ( rhs_V_8_fu_703_p1 );

    SC_METHOD(thread_r_V_fu_436_p2);
    sensitive << ( lhs_V_1_fu_424_p1 );
    sensitive << ( rhs_V_cast_fu_428_p3 );

    SC_METHOD(thread_result_1_fu_592_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( number_assign_3_cast_fu_589_p1 );

    SC_METHOD(thread_result_1_fu_592_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( number_assign_3_cast_fu_589_p1 );

    SC_METHOD(thread_result_1_fu_592_p2);
    sensitive << ( result_1_fu_592_p0 );
    sensitive << ( result_1_fu_592_p1 );

    SC_METHOD(thread_result_2_fu_1123_p0);
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( number_assign_6_cast_fu_1120_p1 );

    SC_METHOD(thread_result_2_fu_1123_p1);
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( number_assign_6_cast_fu_1120_p1 );

    SC_METHOD(thread_result_2_fu_1123_p2);
    sensitive << ( result_2_fu_1123_p0 );
    sensitive << ( result_2_fu_1123_p1 );

    SC_METHOD(thread_result_3_cast_fu_598_p1);
    sensitive << ( result_1_fu_592_p2 );

    SC_METHOD(thread_result_3_fu_636_p0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_26_fu_632_p1 );

    SC_METHOD(thread_result_3_fu_636_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_26_fu_632_p1 );

    SC_METHOD(thread_result_3_fu_636_p2);
    sensitive << ( result_3_fu_636_p0 );
    sensitive << ( result_3_fu_636_p1 );

    SC_METHOD(thread_result_6_cast_fu_1129_p1);
    sensitive << ( result_2_fu_1123_p2 );

    SC_METHOD(thread_result_6_fu_759_p0);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_42_fu_756_p1 );

    SC_METHOD(thread_result_6_fu_759_p1);
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_42_fu_756_p1 );

    SC_METHOD(thread_result_6_fu_759_p2);
    sensitive << ( result_6_fu_759_p0 );
    sensitive << ( result_6_fu_759_p1 );

    SC_METHOD(thread_result_cast_fu_462_p1);
    sensitive << ( result_fu_456_p2 );

    SC_METHOD(thread_result_fu_456_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( number_assign_cast_fu_453_p1 );

    SC_METHOD(thread_result_fu_456_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( number_assign_cast_fu_453_p1 );

    SC_METHOD(thread_result_fu_456_p2);
    sensitive << ( result_fu_456_p0 );
    sensitive << ( result_fu_456_p1 );

    SC_METHOD(thread_result_s_fu_504_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_fu_500_p1 );

    SC_METHOD(thread_result_s_fu_504_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_7_fu_500_p1 );

    SC_METHOD(thread_result_s_fu_504_p2);
    sensitive << ( result_s_fu_504_p0 );
    sensitive << ( result_s_fu_504_p1 );

    SC_METHOD(thread_rhs_V_1_fu_491_p1);
    sensitive << ( colorGreen_V_reg_1746 );

    SC_METHOD(thread_rhs_V_2_fu_521_p1);
    sensitive << ( reg_369 );

    SC_METHOD(thread_rhs_V_3_cast_fu_553_p3);
    sensitive << ( rhs_V_3_fu_541_p3 );

    SC_METHOD(thread_rhs_V_3_fu_541_p3);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_rhs_V_4_fu_624_p1);
    sensitive << ( colorGreen_V_1_reg_1812 );

    SC_METHOD(thread_rhs_V_5_fu_650_p1);
    sensitive << ( reg_369 );

    SC_METHOD(thread_rhs_V_6_cast_fu_681_p3);
    sensitive << ( rhs_V_6_fu_669_p3 );

    SC_METHOD(thread_rhs_V_6_fu_669_p3);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_rhs_V_7_fu_694_p1);
    sensitive << ( colorGreen_V_2_fu_677_p1 );

    SC_METHOD(thread_rhs_V_8_fu_703_p1);
    sensitive << ( grp_fu_343_p4 );

    SC_METHOD(thread_rhs_V_9_fu_1668_p2);
    sensitive << ( minimumDistanceIndex_8_fu_1635_p3 );

    SC_METHOD(thread_rhs_V_cast_fu_428_p3);
    sensitive << ( rhs_V_fu_412_p3 );

    SC_METHOD(thread_rhs_V_fu_412_p3);
    sensitive << ( p_color_array_stream_s_q0 );

    SC_METHOD(thread_tmp10_fu_535_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( r_V_2_fu_525_p2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp10_fu_535_p2);
    sensitive << ( tmp10_fu_535_p1 );

    SC_METHOD(thread_tmp11_cast_fu_1254_p1);
    sensitive << ( tmp11_reg_1980 );

    SC_METHOD(thread_tmp11_fu_985_p2);
    sensitive << ( p_Val2_1_cast_fu_927_p1 );
    sensitive << ( p_Val2_2_cast_fu_981_p1 );

    SC_METHOD(thread_tmp12_fu_663_p1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( r_V_5_fu_654_p2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_tmp12_fu_663_p2);
    sensitive << ( tmp12_fu_663_p1 );

    SC_METHOD(thread_tmp13_cast_fu_1313_p1);
    sensitive << ( tmp13_reg_1990 );

    SC_METHOD(thread_tmp13_fu_1114_p2);
    sensitive << ( p_Val2_4_cast_fu_1056_p1 );
    sensitive << ( p_Val2_5_cast_fu_1110_p1 );

    SC_METHOD(thread_tmp14_fu_776_p1);
    sensitive << ( r_V_8_reg_1881 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_tmp14_fu_776_p2);
    sensitive << ( tmp14_fu_776_p1 );

    SC_METHOD(thread_tmp15_cast_fu_1501_p1);
    sensitive << ( tmp15_reg_2037 );

    SC_METHOD(thread_tmp15_fu_1446_p2);
    sensitive << ( p_Val2_6_cast_fu_1388_p1 );
    sensitive << ( p_Val2_7_cast_fu_1442_p1 );

    SC_METHOD(thread_tmp_10_fu_1205_p3);
    sensitive << ( tmp_2_i1_reg_1772 );

    SC_METHOD(thread_tmp_10_i1_cast_fu_1212_p1);
    sensitive << ( tmp_21_reg_1975 );

    SC_METHOD(thread_tmp_10_i2_cast_fu_1459_p1);
    sensitive << ( tmp_81_reg_2032 );

    SC_METHOD(thread_tmp_10_i_cast_fu_1271_p1);
    sensitive << ( tmp_67_reg_1985 );

    SC_METHOD(thread_tmp_11_fu_801_p1);
    sensitive << ( tmp_37_reg_1892 );

    SC_METHOD(thread_tmp_11_i1_fu_1215_p2);
    sensitive << ( tmp_10_i1_cast_fu_1212_p1 );

    SC_METHOD(thread_tmp_11_i2_fu_1462_p2);
    sensitive << ( tmp_10_i2_cast_fu_1459_p1 );

    SC_METHOD(thread_tmp_11_i_fu_1274_p2);
    sensitive << ( tmp_10_i_cast_fu_1271_p1 );

    SC_METHOD(thread_tmp_12_fu_804_p3);
    sensitive << ( tmp_34_reg_1790 );
    sensitive << ( tmp_11_fu_801_p1 );
    sensitive << ( tmp_8_fu_797_p1 );

    SC_METHOD(thread_tmp_12_i1_cast_fu_1230_p1);
    sensitive << ( tmp_23_fu_1221_p4 );

    SC_METHOD(thread_tmp_12_i2_cast_fu_1477_p1);
    sensitive << ( tmp_82_fu_1468_p4 );

    SC_METHOD(thread_tmp_12_i_cast_fu_1289_p1);
    sensitive << ( tmp_68_fu_1280_p4 );

    SC_METHOD(thread_tmp_13_fu_914_p3);
    sensitive << ( tmp_34_reg_1790 );
    sensitive << ( tmp_11_reg_1924 );
    sensitive << ( neg_ti1_reg_1929 );

    SC_METHOD(thread_tmp_14_fu_919_p3);
    sensitive << ( tmp_13_fu_914_p3 );

    SC_METHOD(thread_tmp_14_i1_fu_1511_p1);
    sensitive << ( grp_fu_353_p4 );

    SC_METHOD(thread_tmp_14_i2_fu_1611_p1);
    sensitive << ( grp_fu_353_p4 );

    SC_METHOD(thread_tmp_14_i_fu_1565_p1);
    sensitive << ( tmp_33_reg_2064 );

    SC_METHOD(thread_tmp_16_fu_946_p1);
    sensitive << ( tmp_41_fu_936_p4 );

    SC_METHOD(thread_tmp_17_fu_950_p1);
    sensitive << ( tmp_53_reg_1939 );

    SC_METHOD(thread_tmp_18_fu_966_p3);
    sensitive << ( tmp_39_reg_1837 );
    sensitive << ( tmp_17_fu_950_p1 );
    sensitive << ( neg_ti2_fu_960_p2 );

    SC_METHOD(thread_tmp_1_1_fu_448_p1);
    sensitive << ( i_fu_442_p2 );

    SC_METHOD(thread_tmp_1_2_fu_571_p1);
    sensitive << ( i_1_fu_566_p2 );

    SC_METHOD(thread_tmp_20_fu_953_p3);
    sensitive << ( tmp_39_reg_1837 );
    sensitive << ( tmp_16_fu_946_p1 );
    sensitive << ( tmp_17_fu_950_p1 );

    SC_METHOD(thread_tmp_22_fu_973_p3);
    sensitive << ( tmp_18_fu_966_p3 );

    SC_METHOD(thread_tmp_23_fu_1221_p4);
    sensitive << ( tmp_2_i1_reg_1772 );

    SC_METHOD(thread_tmp_24_fu_1293_p3);
    sensitive << ( tmp_66_fu_1264_p3 );
    sensitive << ( tmp_11_i_fu_1274_p2 );
    sensitive << ( tmp_12_i_cast_fu_1289_p1 );

    SC_METHOD(thread_tmp_25_fu_1242_p3);
    sensitive << ( tmp_5_fu_1234_p3 );

    SC_METHOD(thread_tmp_26_fu_632_p1);
    sensitive << ( r_V_4_fu_627_p2 );

    SC_METHOD(thread_tmp_27_fu_729_p1);
    sensitive << ( mul1_fu_723_p2 );

    SC_METHOD(thread_tmp_28_fu_1021_p1);
    sensitive << ( tmp_72_fu_1011_p4 );

    SC_METHOD(thread_tmp_29_fu_1025_p1);
    sensitive << ( tmp_73_reg_1949 );

    SC_METHOD(thread_tmp_2_1_fu_1568_p2);
    sensitive << ( ap_CS_fsm_pp0_stage20 );
    sensitive << ( ap_block_pp0_stage20_11001 );
    sensitive << ( tmp_14_i_fu_1565_p1 );
    sensitive << ( minimumDistance_2_fu_1555_p3 );

    SC_METHOD(thread_tmp_2_2_fu_1615_p2);
    sensitive << ( ap_CS_fsm_pp0_stage20 );
    sensitive << ( ap_block_pp0_stage20_11001 );
    sensitive << ( minimumDistance_2_1_fu_1603_p3 );
    sensitive << ( tmp_14_i2_fu_1611_p1 );

    SC_METHOD(thread_tmp_2_fu_1515_p2);
    sensitive << ( minimumDistance_reg_242 );
    sensitive << ( tmp_14_i1_fu_1511_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage19 );
    sensitive << ( ap_block_pp0_stage19_11001 );

    SC_METHOD(thread_tmp_2_i1_fu_482_p2);
    sensitive << ( p_shl_i1_cast_fu_478_p1 );
    sensitive << ( result_cast_fu_462_p1 );

    SC_METHOD(thread_tmp_2_i2_fu_1149_p2);
    sensitive << ( p_shl_i2_cast_fu_1145_p1 );
    sensitive << ( result_6_cast_fu_1129_p1 );

    SC_METHOD(thread_tmp_2_i_fu_618_p2);
    sensitive << ( p_shl_i_cast_fu_614_p1 );
    sensitive << ( result_3_cast_fu_598_p1 );

    SC_METHOD(thread_tmp_30_fu_1041_p3);
    sensitive << ( tmp_71_reg_1855 );
    sensitive << ( tmp_29_fu_1025_p1 );
    sensitive << ( neg_ti3_fu_1035_p2 );

    SC_METHOD(thread_tmp_32_fu_1095_p3);
    sensitive << ( tmp_74_reg_1902 );
    sensitive << ( tmp_43_fu_1079_p1 );
    sensitive << ( neg_ti4_fu_1089_p2 );

    SC_METHOD(thread_tmp_35_fu_787_p4);
    sensitive << ( neg_mul1_fu_782_p2 );

    SC_METHOD(thread_tmp_36_fu_1028_p3);
    sensitive << ( tmp_71_reg_1855 );
    sensitive << ( tmp_28_fu_1021_p1 );
    sensitive << ( tmp_29_fu_1025_p1 );

    SC_METHOD(thread_tmp_38_fu_1048_p3);
    sensitive << ( tmp_30_fu_1041_p3 );

    SC_METHOD(thread_tmp_3_fu_1678_p2);
    sensitive << ( ap_CS_fsm_pp0_stage21 );
    sensitive << ( ap_block_pp0_stage21_11001 );
    sensitive << ( exitcond_fu_1656_p2 );
    sensitive << ( tmp_fu_1662_p2 );
    sensitive << ( lhs_V_fu_1674_p1 );
    sensitive << ( rhs_V_9_fu_1668_p2 );

    SC_METHOD(thread_tmp_40_fu_1075_p1);
    sensitive << ( tmp_75_fu_1065_p4 );

    SC_METHOD(thread_tmp_41_fu_936_p4);
    sensitive << ( neg_mul2_fu_931_p2 );

    SC_METHOD(thread_tmp_42_fu_756_p1);
    sensitive << ( r_V_7_reg_1876 );

    SC_METHOD(thread_tmp_43_fu_1079_p1);
    sensitive << ( tmp_76_reg_1959 );

    SC_METHOD(thread_tmp_44_fu_1373_p3);
    sensitive << ( tmp_85_reg_1913 );
    sensitive << ( tmp_52_fu_1357_p1 );
    sensitive << ( neg_ti8_fu_1367_p2 );

    SC_METHOD(thread_tmp_46_fu_1427_p3);
    sensitive << ( tmp_88_reg_1969 );
    sensitive << ( tmp_57_fu_1411_p1 );
    sensitive << ( neg_ti_fu_1421_p2 );

    SC_METHOD(thread_tmp_48_fu_1082_p3);
    sensitive << ( tmp_74_reg_1902 );
    sensitive << ( tmp_40_fu_1075_p1 );
    sensitive << ( tmp_43_fu_1079_p1 );

    SC_METHOD(thread_tmp_49_fu_1102_p3);
    sensitive << ( tmp_32_fu_1095_p3 );

    SC_METHOD(thread_tmp_4_1_fu_1574_p2);
    sensitive << ( tmp_33_reg_2064 );
    sensitive << ( ap_CS_fsm_pp0_stage20 );
    sensitive << ( ap_block_pp0_stage20_11001 );

    SC_METHOD(thread_tmp_50_fu_1481_p3);
    sensitive << ( tmp_80_fu_1452_p3 );
    sensitive << ( tmp_11_i2_fu_1462_p2 );
    sensitive << ( tmp_12_i2_cast_fu_1477_p1 );

    SC_METHOD(thread_tmp_51_fu_1353_p1);
    sensitive << ( tmp_86_fu_1343_p4 );

    SC_METHOD(thread_tmp_52_fu_1357_p1);
    sensitive << ( tmp_87_reg_2007 );

    SC_METHOD(thread_tmp_54_fu_1360_p3);
    sensitive << ( tmp_85_reg_1913 );
    sensitive << ( tmp_51_fu_1353_p1 );
    sensitive << ( tmp_52_fu_1357_p1 );

    SC_METHOD(thread_tmp_55_fu_1380_p3);
    sensitive << ( tmp_44_fu_1373_p3 );

    SC_METHOD(thread_tmp_56_fu_1407_p1);
    sensitive << ( tmp_89_fu_1397_p4 );

    SC_METHOD(thread_tmp_57_fu_1411_p1);
    sensitive << ( tmp_90_reg_2017 );

    SC_METHOD(thread_tmp_58_fu_1414_p3);
    sensitive << ( tmp_88_reg_1969 );
    sensitive << ( tmp_56_fu_1407_p1 );
    sensitive << ( tmp_57_fu_1411_p1 );

    SC_METHOD(thread_tmp_59_fu_1434_p3);
    sensitive << ( tmp_46_fu_1427_p3 );

    SC_METHOD(thread_tmp_5_fu_1234_p3);
    sensitive << ( tmp_10_fu_1205_p3 );
    sensitive << ( tmp_11_i1_fu_1215_p2 );
    sensitive << ( tmp_12_i1_cast_fu_1230_p1 );

    SC_METHOD(thread_tmp_5_i1_fu_712_p3);
    sensitive << ( result_s_reg_1785 );

    SC_METHOD(thread_tmp_5_i2_fu_1155_p3);
    sensitive << ( result_6_reg_1908 );

    SC_METHOD(thread_tmp_5_i_fu_836_p3);
    sensitive << ( result_3_reg_1850 );

    SC_METHOD(thread_tmp_65_fu_602_p1);
    sensitive << ( result_1_fu_592_p2 );

    SC_METHOD(thread_tmp_66_fu_1264_p3);
    sensitive << ( tmp_2_i_reg_1843 );

    SC_METHOD(thread_tmp_68_fu_1280_p4);
    sensitive << ( tmp_2_i_reg_1843 );

    SC_METHOD(thread_tmp_69_fu_1301_p3);
    sensitive << ( tmp_24_fu_1293_p3 );

    SC_METHOD(thread_tmp_6_fu_1684_p1);
    sensitive << ( minimumDistanceIndex_8_fu_1635_p3 );

    SC_METHOD(thread_tmp_70_fu_853_p1);
    sensitive << ( mul4_fu_847_p2 );

    SC_METHOD(thread_tmp_72_fu_1011_p4);
    sensitive << ( neg_mul4_fu_1006_p2 );

    SC_METHOD(thread_tmp_75_fu_1065_p4);
    sensitive << ( neg_mul5_fu_1060_p2 );

    SC_METHOD(thread_tmp_79_fu_1133_p1);
    sensitive << ( result_2_fu_1123_p2 );

    SC_METHOD(thread_tmp_7_fu_500_p1);
    sensitive << ( r_V_1_fu_494_p2 );

    SC_METHOD(thread_tmp_80_fu_1452_p3);
    sensitive << ( tmp_2_i2_reg_1995 );

    SC_METHOD(thread_tmp_82_fu_1468_p4);
    sensitive << ( tmp_2_i2_reg_1995 );

    SC_METHOD(thread_tmp_83_fu_1489_p3);
    sensitive << ( tmp_50_fu_1481_p3 );

    SC_METHOD(thread_tmp_84_fu_1172_p1);
    sensitive << ( mul2_fu_1166_p2 );

    SC_METHOD(thread_tmp_86_fu_1343_p4);
    sensitive << ( neg_mul3_fu_1338_p2 );

    SC_METHOD(thread_tmp_89_fu_1397_p4);
    sensitive << ( neg_mul_fu_1392_p2 );

    SC_METHOD(thread_tmp_8_fu_797_p1);
    sensitive << ( tmp_35_fu_787_p4 );

    SC_METHOD(thread_tmp_91_fu_1652_p1);
    sensitive << ( i_2_fu_1647_p2 );

    SC_METHOD(thread_tmp_9_fu_466_p1);
    sensitive << ( result_fu_456_p2 );

    SC_METHOD(thread_tmp_fu_1662_p2);
    sensitive << ( minimumDistanceIndex_8_fu_1635_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage21 );
    sensitive << ( ap_block_pp0_stage21_11001 );
    sensitive << ( exitcond_fu_1656_p2 );

    SC_METHOD(thread_tmp_s_fu_379_p1);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage23_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage8_subdone );
    sensitive << ( ap_block_pp0_stage9_subdone );
    sensitive << ( ap_block_pp0_stage10_subdone );
    sensitive << ( ap_block_pp0_stage11_subdone );
    sensitive << ( ap_block_pp0_stage12_subdone );
    sensitive << ( ap_block_pp0_stage13_subdone );
    sensitive << ( ap_block_pp0_stage14_subdone );
    sensitive << ( ap_block_pp0_stage15_subdone );
    sensitive << ( ap_block_pp0_stage16_subdone );
    sensitive << ( ap_block_pp0_stage17_subdone );
    sensitive << ( ap_block_pp0_stage18_subdone );
    sensitive << ( ap_block_pp0_stage19_subdone );
    sensitive << ( ap_block_pp0_stage20_subdone );
    sensitive << ( ap_block_pp0_stage21_subdone );
    sensitive << ( ap_block_pp0_stage22_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    in_pixel_user_V_0_sel_rd = SC_LOGIC_0;
    in_pixel_user_V_0_sel_wr = SC_LOGIC_0;
    in_pixel_user_V_0_state = "00";
    in_pixel_last_V_0_sel_rd = SC_LOGIC_0;
    in_pixel_last_V_0_sel_wr = SC_LOGIC_0;
    in_pixel_last_V_0_state = "00";
    in_pixel_data_V_0_sel_rd = SC_LOGIC_0;
    in_pixel_data_V_0_sel_wr = SC_LOGIC_0;
    in_pixel_data_V_0_state = "00";
    out_pixel_user_V_1_sel_rd = SC_LOGIC_0;
    out_pixel_user_V_1_sel_wr = SC_LOGIC_0;
    out_pixel_user_V_1_state = "00";
    out_pixel_last_V_1_sel_rd = SC_LOGIC_0;
    out_pixel_last_V_1_sel_wr = SC_LOGIC_0;
    out_pixel_last_V_1_state = "00";
    out_pixel_data_V_1_sel_rd = SC_LOGIC_0;
    out_pixel_data_V_1_sel_wr = SC_LOGIC_0;
    out_pixel_data_V_1_state = "00";
    ap_CS_fsm = "0000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getPixelClassification_Stream_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_pixel_TUSER, "(port)in_pixel_TUSER");
    sc_trace(mVcdFile, in_pixel_TVALID, "(port)in_pixel_TVALID");
    sc_trace(mVcdFile, in_pixel_TREADY, "(port)in_pixel_TREADY");
    sc_trace(mVcdFile, in_pixel_TLAST, "(port)in_pixel_TLAST");
    sc_trace(mVcdFile, in_pixel_TDATA, "(port)in_pixel_TDATA");
    sc_trace(mVcdFile, out_pixel_TUSER, "(port)out_pixel_TUSER");
    sc_trace(mVcdFile, out_pixel_TVALID, "(port)out_pixel_TVALID");
    sc_trace(mVcdFile, out_pixel_TREADY, "(port)out_pixel_TREADY");
    sc_trace(mVcdFile, out_pixel_TLAST, "(port)out_pixel_TLAST");
    sc_trace(mVcdFile, out_pixel_TDATA, "(port)out_pixel_TDATA");
    sc_trace(mVcdFile, in_switch_V, "(port)in_switch_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, in_pixel_user_V_0_data_out, "in_pixel_user_V_0_data_out");
    sc_trace(mVcdFile, in_pixel_user_V_0_vld_in, "in_pixel_user_V_0_vld_in");
    sc_trace(mVcdFile, in_pixel_user_V_0_vld_out, "in_pixel_user_V_0_vld_out");
    sc_trace(mVcdFile, in_pixel_user_V_0_ack_in, "in_pixel_user_V_0_ack_in");
    sc_trace(mVcdFile, in_pixel_user_V_0_ack_out, "in_pixel_user_V_0_ack_out");
    sc_trace(mVcdFile, in_pixel_user_V_0_payload_A, "in_pixel_user_V_0_payload_A");
    sc_trace(mVcdFile, in_pixel_user_V_0_payload_B, "in_pixel_user_V_0_payload_B");
    sc_trace(mVcdFile, in_pixel_user_V_0_sel_rd, "in_pixel_user_V_0_sel_rd");
    sc_trace(mVcdFile, in_pixel_user_V_0_sel_wr, "in_pixel_user_V_0_sel_wr");
    sc_trace(mVcdFile, in_pixel_user_V_0_sel, "in_pixel_user_V_0_sel");
    sc_trace(mVcdFile, in_pixel_user_V_0_load_A, "in_pixel_user_V_0_load_A");
    sc_trace(mVcdFile, in_pixel_user_V_0_load_B, "in_pixel_user_V_0_load_B");
    sc_trace(mVcdFile, in_pixel_user_V_0_state, "in_pixel_user_V_0_state");
    sc_trace(mVcdFile, in_pixel_user_V_0_state_cmp_full, "in_pixel_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_pixel_last_V_0_data_out, "in_pixel_last_V_0_data_out");
    sc_trace(mVcdFile, in_pixel_last_V_0_vld_in, "in_pixel_last_V_0_vld_in");
    sc_trace(mVcdFile, in_pixel_last_V_0_vld_out, "in_pixel_last_V_0_vld_out");
    sc_trace(mVcdFile, in_pixel_last_V_0_ack_in, "in_pixel_last_V_0_ack_in");
    sc_trace(mVcdFile, in_pixel_last_V_0_ack_out, "in_pixel_last_V_0_ack_out");
    sc_trace(mVcdFile, in_pixel_last_V_0_payload_A, "in_pixel_last_V_0_payload_A");
    sc_trace(mVcdFile, in_pixel_last_V_0_payload_B, "in_pixel_last_V_0_payload_B");
    sc_trace(mVcdFile, in_pixel_last_V_0_sel_rd, "in_pixel_last_V_0_sel_rd");
    sc_trace(mVcdFile, in_pixel_last_V_0_sel_wr, "in_pixel_last_V_0_sel_wr");
    sc_trace(mVcdFile, in_pixel_last_V_0_sel, "in_pixel_last_V_0_sel");
    sc_trace(mVcdFile, in_pixel_last_V_0_load_A, "in_pixel_last_V_0_load_A");
    sc_trace(mVcdFile, in_pixel_last_V_0_load_B, "in_pixel_last_V_0_load_B");
    sc_trace(mVcdFile, in_pixel_last_V_0_state, "in_pixel_last_V_0_state");
    sc_trace(mVcdFile, in_pixel_last_V_0_state_cmp_full, "in_pixel_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, in_pixel_data_V_0_data_out, "in_pixel_data_V_0_data_out");
    sc_trace(mVcdFile, in_pixel_data_V_0_vld_in, "in_pixel_data_V_0_vld_in");
    sc_trace(mVcdFile, in_pixel_data_V_0_vld_out, "in_pixel_data_V_0_vld_out");
    sc_trace(mVcdFile, in_pixel_data_V_0_ack_in, "in_pixel_data_V_0_ack_in");
    sc_trace(mVcdFile, in_pixel_data_V_0_ack_out, "in_pixel_data_V_0_ack_out");
    sc_trace(mVcdFile, in_pixel_data_V_0_payload_A, "in_pixel_data_V_0_payload_A");
    sc_trace(mVcdFile, in_pixel_data_V_0_payload_B, "in_pixel_data_V_0_payload_B");
    sc_trace(mVcdFile, in_pixel_data_V_0_sel_rd, "in_pixel_data_V_0_sel_rd");
    sc_trace(mVcdFile, in_pixel_data_V_0_sel_wr, "in_pixel_data_V_0_sel_wr");
    sc_trace(mVcdFile, in_pixel_data_V_0_sel, "in_pixel_data_V_0_sel");
    sc_trace(mVcdFile, in_pixel_data_V_0_load_A, "in_pixel_data_V_0_load_A");
    sc_trace(mVcdFile, in_pixel_data_V_0_load_B, "in_pixel_data_V_0_load_B");
    sc_trace(mVcdFile, in_pixel_data_V_0_state, "in_pixel_data_V_0_state");
    sc_trace(mVcdFile, in_pixel_data_V_0_state_cmp_full, "in_pixel_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, out_pixel_user_V_1_data_out, "out_pixel_user_V_1_data_out");
    sc_trace(mVcdFile, out_pixel_user_V_1_vld_in, "out_pixel_user_V_1_vld_in");
    sc_trace(mVcdFile, out_pixel_user_V_1_vld_out, "out_pixel_user_V_1_vld_out");
    sc_trace(mVcdFile, out_pixel_user_V_1_ack_in, "out_pixel_user_V_1_ack_in");
    sc_trace(mVcdFile, out_pixel_user_V_1_ack_out, "out_pixel_user_V_1_ack_out");
    sc_trace(mVcdFile, out_pixel_user_V_1_payload_A, "out_pixel_user_V_1_payload_A");
    sc_trace(mVcdFile, out_pixel_user_V_1_payload_B, "out_pixel_user_V_1_payload_B");
    sc_trace(mVcdFile, out_pixel_user_V_1_sel_rd, "out_pixel_user_V_1_sel_rd");
    sc_trace(mVcdFile, out_pixel_user_V_1_sel_wr, "out_pixel_user_V_1_sel_wr");
    sc_trace(mVcdFile, out_pixel_user_V_1_sel, "out_pixel_user_V_1_sel");
    sc_trace(mVcdFile, out_pixel_user_V_1_load_A, "out_pixel_user_V_1_load_A");
    sc_trace(mVcdFile, out_pixel_user_V_1_load_B, "out_pixel_user_V_1_load_B");
    sc_trace(mVcdFile, out_pixel_user_V_1_state, "out_pixel_user_V_1_state");
    sc_trace(mVcdFile, out_pixel_user_V_1_state_cmp_full, "out_pixel_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_pixel_last_V_1_data_out, "out_pixel_last_V_1_data_out");
    sc_trace(mVcdFile, out_pixel_last_V_1_vld_in, "out_pixel_last_V_1_vld_in");
    sc_trace(mVcdFile, out_pixel_last_V_1_vld_out, "out_pixel_last_V_1_vld_out");
    sc_trace(mVcdFile, out_pixel_last_V_1_ack_in, "out_pixel_last_V_1_ack_in");
    sc_trace(mVcdFile, out_pixel_last_V_1_ack_out, "out_pixel_last_V_1_ack_out");
    sc_trace(mVcdFile, out_pixel_last_V_1_payload_A, "out_pixel_last_V_1_payload_A");
    sc_trace(mVcdFile, out_pixel_last_V_1_payload_B, "out_pixel_last_V_1_payload_B");
    sc_trace(mVcdFile, out_pixel_last_V_1_sel_rd, "out_pixel_last_V_1_sel_rd");
    sc_trace(mVcdFile, out_pixel_last_V_1_sel_wr, "out_pixel_last_V_1_sel_wr");
    sc_trace(mVcdFile, out_pixel_last_V_1_sel, "out_pixel_last_V_1_sel");
    sc_trace(mVcdFile, out_pixel_last_V_1_load_A, "out_pixel_last_V_1_load_A");
    sc_trace(mVcdFile, out_pixel_last_V_1_load_B, "out_pixel_last_V_1_load_B");
    sc_trace(mVcdFile, out_pixel_last_V_1_state, "out_pixel_last_V_1_state");
    sc_trace(mVcdFile, out_pixel_last_V_1_state_cmp_full, "out_pixel_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, out_pixel_data_V_1_data_out, "out_pixel_data_V_1_data_out");
    sc_trace(mVcdFile, out_pixel_data_V_1_vld_in, "out_pixel_data_V_1_vld_in");
    sc_trace(mVcdFile, out_pixel_data_V_1_vld_out, "out_pixel_data_V_1_vld_out");
    sc_trace(mVcdFile, out_pixel_data_V_1_ack_in, "out_pixel_data_V_1_ack_in");
    sc_trace(mVcdFile, out_pixel_data_V_1_ack_out, "out_pixel_data_V_1_ack_out");
    sc_trace(mVcdFile, out_pixel_data_V_1_payload_A, "out_pixel_data_V_1_payload_A");
    sc_trace(mVcdFile, out_pixel_data_V_1_payload_B, "out_pixel_data_V_1_payload_B");
    sc_trace(mVcdFile, out_pixel_data_V_1_sel_rd, "out_pixel_data_V_1_sel_rd");
    sc_trace(mVcdFile, out_pixel_data_V_1_sel_wr, "out_pixel_data_V_1_sel_wr");
    sc_trace(mVcdFile, out_pixel_data_V_1_sel, "out_pixel_data_V_1_sel");
    sc_trace(mVcdFile, out_pixel_data_V_1_load_A, "out_pixel_data_V_1_load_A");
    sc_trace(mVcdFile, out_pixel_data_V_1_load_B, "out_pixel_data_V_1_load_B");
    sc_trace(mVcdFile, out_pixel_data_V_1_state, "out_pixel_data_V_1_state");
    sc_trace(mVcdFile, out_pixel_data_V_1_state_cmp_full, "out_pixel_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, p_color_array_stream_s_address0, "p_color_array_stream_s_address0");
    sc_trace(mVcdFile, p_color_array_stream_s_ce0, "p_color_array_stream_s_ce0");
    sc_trace(mVcdFile, p_color_array_stream_s_q0, "p_color_array_stream_s_q0");
    sc_trace(mVcdFile, in_pixel_TDATA_blk_n, "in_pixel_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage23, "ap_CS_fsm_pp0_stage23");
    sc_trace(mVcdFile, ap_block_pp0_stage23, "ap_block_pp0_stage23");
    sc_trace(mVcdFile, exitcond_reg_2119, "exitcond_reg_2119");
    sc_trace(mVcdFile, tmp_reg_2123, "tmp_reg_2123");
    sc_trace(mVcdFile, tmp_3_reg_2127, "tmp_3_reg_2127");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, out_pixel_TDATA_blk_n, "out_pixel_TDATA_blk_n");
    sc_trace(mVcdFile, minimumDistanceIndex_9_reg_227, "minimumDistanceIndex_9_reg_227");
    sc_trace(mVcdFile, minimumDistance_reg_242, "minimumDistance_reg_242");
    sc_trace(mVcdFile, do_init_reg_257, "do_init_reg_257");
    sc_trace(mVcdFile, in_switch_V51_rewind_reg_274, "in_switch_V51_rewind_reg_274");
    sc_trace(mVcdFile, minimumDistanceIndex_reg_289, "minimumDistanceIndex_reg_289");
    sc_trace(mVcdFile, in_switch_V51_phi_reg_303, "in_switch_V51_phi_reg_303");
    sc_trace(mVcdFile, grp_fu_343_p4, "grp_fu_343_p4");
    sc_trace(mVcdFile, reg_369, "reg_369");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage1_iter1, "ap_block_state27_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state27_io, "ap_block_state27_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_predicate_op345_read_state25, "ap_predicate_op345_read_state25");
    sc_trace(mVcdFile, ap_predicate_op348_read_state25, "ap_predicate_op348_read_state25");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage23_iter0, "ap_block_state25_pp0_stage23_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage23_11001, "ap_block_pp0_stage23_11001");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage0_iter1, "ap_block_state26_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state26_io, "ap_block_state26_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, minimumDistanceIndex_3_fu_384_p1, "minimumDistanceIndex_3_fu_384_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_3_reg_1730, "minimumDistanceIndex_3_reg_1730");
    sc_trace(mVcdFile, pixelGreen_V_fu_398_p1, "pixelGreen_V_fu_398_p1");
    sc_trace(mVcdFile, pixelGreen_V_reg_1736, "pixelGreen_V_reg_1736");
    sc_trace(mVcdFile, pixelBlue_V_reg_1741, "pixelBlue_V_reg_1741");
    sc_trace(mVcdFile, colorGreen_V_fu_420_p1, "colorGreen_V_fu_420_p1");
    sc_trace(mVcdFile, colorGreen_V_reg_1746, "colorGreen_V_reg_1746");
    sc_trace(mVcdFile, lhs_V_1_fu_424_p1, "lhs_V_1_fu_424_p1");
    sc_trace(mVcdFile, lhs_V_1_reg_1751, "lhs_V_1_reg_1751");
    sc_trace(mVcdFile, r_V_fu_436_p2, "r_V_fu_436_p2");
    sc_trace(mVcdFile, r_V_reg_1757, "r_V_reg_1757");
    sc_trace(mVcdFile, i_fu_442_p2, "i_fu_442_p2");
    sc_trace(mVcdFile, i_reg_1762, "i_reg_1762");
    sc_trace(mVcdFile, tmp_2_i1_fu_482_p2, "tmp_2_i1_fu_482_p2");
    sc_trace(mVcdFile, tmp_2_i1_reg_1772, "tmp_2_i1_reg_1772");
    sc_trace(mVcdFile, lhs_V_2_fu_488_p1, "lhs_V_2_fu_488_p1");
    sc_trace(mVcdFile, lhs_V_2_reg_1779, "lhs_V_2_reg_1779");
    sc_trace(mVcdFile, result_s_fu_504_p2, "result_s_fu_504_p2");
    sc_trace(mVcdFile, result_s_reg_1785, "result_s_reg_1785");
    sc_trace(mVcdFile, tmp_34_reg_1790, "tmp_34_reg_1790");
    sc_trace(mVcdFile, lhs_V_3_fu_518_p1, "lhs_V_3_fu_518_p1");
    sc_trace(mVcdFile, lhs_V_3_reg_1796, "lhs_V_3_reg_1796");
    sc_trace(mVcdFile, r_V_2_fu_525_p2, "r_V_2_fu_525_p2");
    sc_trace(mVcdFile, r_V_2_reg_1802, "r_V_2_reg_1802");
    sc_trace(mVcdFile, tmp10_fu_535_p2, "tmp10_fu_535_p2");
    sc_trace(mVcdFile, tmp10_reg_1807, "tmp10_reg_1807");
    sc_trace(mVcdFile, colorGreen_V_1_fu_549_p1, "colorGreen_V_1_fu_549_p1");
    sc_trace(mVcdFile, colorGreen_V_1_reg_1812, "colorGreen_V_1_reg_1812");
    sc_trace(mVcdFile, r_V_3_fu_561_p2, "r_V_3_fu_561_p2");
    sc_trace(mVcdFile, r_V_3_reg_1817, "r_V_3_reg_1817");
    sc_trace(mVcdFile, i_1_fu_566_p2, "i_1_fu_566_p2");
    sc_trace(mVcdFile, i_1_reg_1822, "i_1_reg_1822");
    sc_trace(mVcdFile, tmp_9_i1_tr_fu_1704_p2, "tmp_9_i1_tr_fu_1704_p2");
    sc_trace(mVcdFile, tmp_9_i1_tr_reg_1832, "tmp_9_i1_tr_reg_1832");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, tmp_39_reg_1837, "tmp_39_reg_1837");
    sc_trace(mVcdFile, tmp_2_i_fu_618_p2, "tmp_2_i_fu_618_p2");
    sc_trace(mVcdFile, tmp_2_i_reg_1843, "tmp_2_i_reg_1843");
    sc_trace(mVcdFile, result_3_fu_636_p2, "result_3_fu_636_p2");
    sc_trace(mVcdFile, result_3_reg_1850, "result_3_reg_1850");
    sc_trace(mVcdFile, tmp_71_reg_1855, "tmp_71_reg_1855");
    sc_trace(mVcdFile, r_V_5_fu_654_p2, "r_V_5_fu_654_p2");
    sc_trace(mVcdFile, r_V_5_reg_1861, "r_V_5_reg_1861");
    sc_trace(mVcdFile, tmp12_fu_663_p2, "tmp12_fu_663_p2");
    sc_trace(mVcdFile, tmp12_reg_1866, "tmp12_reg_1866");
    sc_trace(mVcdFile, r_V_6_fu_689_p2, "r_V_6_fu_689_p2");
    sc_trace(mVcdFile, r_V_6_reg_1871, "r_V_6_reg_1871");
    sc_trace(mVcdFile, r_V_7_fu_698_p2, "r_V_7_fu_698_p2");
    sc_trace(mVcdFile, r_V_7_reg_1876, "r_V_7_reg_1876");
    sc_trace(mVcdFile, r_V_8_fu_707_p2, "r_V_8_fu_707_p2");
    sc_trace(mVcdFile, r_V_8_reg_1881, "r_V_8_reg_1881");
    sc_trace(mVcdFile, tmp_27_fu_729_p1, "tmp_27_fu_729_p1");
    sc_trace(mVcdFile, tmp_27_reg_1887, "tmp_27_reg_1887");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, tmp_37_reg_1892, "tmp_37_reg_1892");
    sc_trace(mVcdFile, tmp_9_i_tr_fu_1711_p2, "tmp_9_i_tr_fu_1711_p2");
    sc_trace(mVcdFile, tmp_9_i_tr_reg_1897, "tmp_9_i_tr_reg_1897");
    sc_trace(mVcdFile, tmp_74_reg_1902, "tmp_74_reg_1902");
    sc_trace(mVcdFile, result_6_fu_759_p2, "result_6_fu_759_p2");
    sc_trace(mVcdFile, result_6_reg_1908, "result_6_reg_1908");
    sc_trace(mVcdFile, tmp_85_reg_1913, "tmp_85_reg_1913");
    sc_trace(mVcdFile, tmp14_fu_776_p2, "tmp14_fu_776_p2");
    sc_trace(mVcdFile, tmp14_reg_1919, "tmp14_reg_1919");
    sc_trace(mVcdFile, tmp_11_fu_801_p1, "tmp_11_fu_801_p1");
    sc_trace(mVcdFile, tmp_11_reg_1924, "tmp_11_reg_1924");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, neg_ti1_fu_811_p2, "neg_ti1_fu_811_p2");
    sc_trace(mVcdFile, neg_ti1_reg_1929, "neg_ti1_reg_1929");
    sc_trace(mVcdFile, mul3_fu_820_p2, "mul3_fu_820_p2");
    sc_trace(mVcdFile, mul3_reg_1934, "mul3_reg_1934");
    sc_trace(mVcdFile, tmp_53_reg_1939, "tmp_53_reg_1939");
    sc_trace(mVcdFile, tmp_70_fu_853_p1, "tmp_70_fu_853_p1");
    sc_trace(mVcdFile, tmp_70_reg_1944, "tmp_70_reg_1944");
    sc_trace(mVcdFile, tmp_73_reg_1949, "tmp_73_reg_1949");
    sc_trace(mVcdFile, mul5_fu_870_p2, "mul5_fu_870_p2");
    sc_trace(mVcdFile, mul5_reg_1954, "mul5_reg_1954");
    sc_trace(mVcdFile, tmp_76_reg_1959, "tmp_76_reg_1959");
    sc_trace(mVcdFile, tmp_9_i2_tr_fu_1718_p2, "tmp_9_i2_tr_fu_1718_p2");
    sc_trace(mVcdFile, tmp_9_i2_tr_reg_1964, "tmp_9_i2_tr_reg_1964");
    sc_trace(mVcdFile, tmp_88_reg_1969, "tmp_88_reg_1969");
    sc_trace(mVcdFile, tmp_21_reg_1975, "tmp_21_reg_1975");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, tmp11_fu_985_p2, "tmp11_fu_985_p2");
    sc_trace(mVcdFile, tmp11_reg_1980, "tmp11_reg_1980");
    sc_trace(mVcdFile, tmp_67_reg_1985, "tmp_67_reg_1985");
    sc_trace(mVcdFile, tmp13_fu_1114_p2, "tmp13_fu_1114_p2");
    sc_trace(mVcdFile, tmp13_reg_1990, "tmp13_reg_1990");
    sc_trace(mVcdFile, tmp_2_i2_fu_1149_p2, "tmp_2_i2_fu_1149_p2");
    sc_trace(mVcdFile, tmp_2_i2_reg_1995, "tmp_2_i2_reg_1995");
    sc_trace(mVcdFile, tmp_84_fu_1172_p1, "tmp_84_fu_1172_p1");
    sc_trace(mVcdFile, tmp_84_reg_2002, "tmp_84_reg_2002");
    sc_trace(mVcdFile, tmp_87_reg_2007, "tmp_87_reg_2007");
    sc_trace(mVcdFile, mul_fu_1189_p2, "mul_fu_1189_p2");
    sc_trace(mVcdFile, mul_reg_2012, "mul_reg_2012");
    sc_trace(mVcdFile, tmp_90_reg_2017, "tmp_90_reg_2017");
    sc_trace(mVcdFile, powerSummation_V_fu_1257_p2, "powerSummation_V_fu_1257_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, tmp_81_reg_2032, "tmp_81_reg_2032");
    sc_trace(mVcdFile, tmp15_fu_1446_p2, "tmp15_fu_1446_p2");
    sc_trace(mVcdFile, tmp15_reg_2037, "tmp15_reg_2037");
    sc_trace(mVcdFile, powerSummation_V_2_fu_1504_p2, "powerSummation_V_2_fu_1504_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage8_iter0, "ap_block_state10_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage8_11001, "ap_block_pp0_stage8_11001");
    sc_trace(mVcdFile, tmp_14_i1_fu_1511_p1, "tmp_14_i1_fu_1511_p1");
    sc_trace(mVcdFile, tmp_14_i1_reg_2047, "tmp_14_i1_reg_2047");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage19, "ap_CS_fsm_pp0_stage19");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage19_iter0, "ap_block_state21_pp0_stage19_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage19_11001, "ap_block_pp0_stage19_11001");
    sc_trace(mVcdFile, tmp_2_fu_1515_p2, "tmp_2_fu_1515_p2");
    sc_trace(mVcdFile, tmp_2_reg_2052, "tmp_2_reg_2052");
    sc_trace(mVcdFile, grp_fu_363_p2, "grp_fu_363_p2");
    sc_trace(mVcdFile, tmp_4_reg_2058, "tmp_4_reg_2058");
    sc_trace(mVcdFile, tmp_33_reg_2064, "tmp_33_reg_2064");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage20, "ap_CS_fsm_pp0_stage20");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage20_iter0, "ap_block_state22_pp0_stage20_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage20_11001, "ap_block_pp0_stage20_11001");
    sc_trace(mVcdFile, ap_phi_mux_do_init_phi_fu_262_p6, "ap_phi_mux_do_init_phi_fu_262_p6");
    sc_trace(mVcdFile, minimumDistanceIndex_6_fu_1595_p3, "minimumDistanceIndex_6_fu_1595_p3");
    sc_trace(mVcdFile, minimumDistanceIndex_6_reg_2075, "minimumDistanceIndex_6_reg_2075");
    sc_trace(mVcdFile, minimumDistance_2_1_fu_1603_p3, "minimumDistance_2_1_fu_1603_p3");
    sc_trace(mVcdFile, minimumDistance_2_1_reg_2081, "minimumDistance_2_1_reg_2081");
    sc_trace(mVcdFile, tmp_14_i2_fu_1611_p1, "tmp_14_i2_fu_1611_p1");
    sc_trace(mVcdFile, tmp_14_i2_reg_2087, "tmp_14_i2_reg_2087");
    sc_trace(mVcdFile, tmp_2_2_fu_1615_p2, "tmp_2_2_fu_1615_p2");
    sc_trace(mVcdFile, tmp_2_2_reg_2092, "tmp_2_2_reg_2092");
    sc_trace(mVcdFile, tmp_4_2_reg_2098, "tmp_4_2_reg_2098");
    sc_trace(mVcdFile, minimumDistanceIndex_8_fu_1635_p3, "minimumDistanceIndex_8_fu_1635_p3");
    sc_trace(mVcdFile, minimumDistanceIndex_8_reg_2104, "minimumDistanceIndex_8_reg_2104");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage21, "ap_CS_fsm_pp0_stage21");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage21_iter0, "ap_block_state23_pp0_stage21_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage21_11001, "ap_block_pp0_stage21_11001");
    sc_trace(mVcdFile, minimumDistance_2_2_fu_1641_p3, "minimumDistance_2_2_fu_1641_p3");
    sc_trace(mVcdFile, minimumDistance_2_2_reg_2109, "minimumDistance_2_2_reg_2109");
    sc_trace(mVcdFile, tmp_91_fu_1652_p1, "tmp_91_fu_1652_p1");
    sc_trace(mVcdFile, tmp_91_reg_2114, "tmp_91_reg_2114");
    sc_trace(mVcdFile, exitcond_fu_1656_p2, "exitcond_fu_1656_p2");
    sc_trace(mVcdFile, tmp_fu_1662_p2, "tmp_fu_1662_p2");
    sc_trace(mVcdFile, tmp_3_fu_1678_p2, "tmp_3_fu_1678_p2");
    sc_trace(mVcdFile, p_color_array_stream_7_reg_2136, "p_color_array_stream_7_reg_2136");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage22, "ap_CS_fsm_pp0_stage22");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage22_iter0, "ap_block_state24_pp0_stage22_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage22_11001, "ap_block_pp0_stage22_11001");
    sc_trace(mVcdFile, p_color_array_stream_8_fu_1689_p1, "p_color_array_stream_8_fu_1689_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage23_subdone, "ap_block_pp0_stage23_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_329_in_val_V_read, "grp_fxp_sqrt_fu_329_in_val_V_read");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_329_ap_return, "grp_fxp_sqrt_fu_329_ap_return");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_329_ap_ce, "grp_fxp_sqrt_fu_329_ap_ce");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage9_iter0_ignore_call82, "ap_block_state11_pp0_stage9_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage9_11001, "ap_block_pp0_stage9_11001");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage10_iter0_ignore_call82, "ap_block_state12_pp0_stage10_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage10_11001, "ap_block_pp0_stage10_11001");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage11_iter0_ignore_call82, "ap_block_state13_pp0_stage11_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage11_11001, "ap_block_pp0_stage11_11001");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage12_iter0_ignore_call82, "ap_block_state14_pp0_stage12_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage12_11001, "ap_block_pp0_stage12_11001");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage13_iter0_ignore_call82, "ap_block_state15_pp0_stage13_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage13_11001, "ap_block_pp0_stage13_11001");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage14_iter0_ignore_call82, "ap_block_state16_pp0_stage14_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage14_11001, "ap_block_pp0_stage14_11001");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage15_iter0_ignore_call82, "ap_block_state17_pp0_stage15_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage15_11001, "ap_block_pp0_stage15_11001");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage16_iter0_ignore_call82, "ap_block_state18_pp0_stage16_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage16_11001, "ap_block_pp0_stage16_11001");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage17_iter0_ignore_call82, "ap_block_state19_pp0_stage17_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage17_11001, "ap_block_pp0_stage17_11001");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage18_iter0_ignore_call82, "ap_block_state20_pp0_stage18_iter0_ignore_call82");
    sc_trace(mVcdFile, ap_block_pp0_stage18_11001, "ap_block_pp0_stage18_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage11, "ap_CS_fsm_pp0_stage11");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage12, "ap_CS_fsm_pp0_stage12");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage13, "ap_CS_fsm_pp0_stage13");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage15, "ap_CS_fsm_pp0_stage15");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage16, "ap_CS_fsm_pp0_stage16");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage17, "ap_CS_fsm_pp0_stage17");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage18, "ap_CS_fsm_pp0_stage18");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_334_in_val_V_read, "grp_fxp_sqrt_fu_334_in_val_V_read");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_334_ap_return, "grp_fxp_sqrt_fu_334_ap_return");
    sc_trace(mVcdFile, grp_fxp_sqrt_fu_334_ap_ce, "grp_fxp_sqrt_fu_334_ap_ce");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6, "ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_in_switch_V51_phi_reg_303, "ap_phi_reg_pp0_iter0_in_switch_V51_phi_reg_303");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_out_pixel_data_V_tmp_reg_315, "ap_phi_reg_pp0_iter0_out_pixel_data_V_tmp_reg_315");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_out_pixel_data_V_tmp_reg_315, "ap_phi_reg_pp0_iter1_out_pixel_data_V_tmp_reg_315");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage8, "ap_block_pp0_stage8");
    sc_trace(mVcdFile, tmp_s_fu_379_p1, "tmp_s_fu_379_p1");
    sc_trace(mVcdFile, tmp_1_1_fu_448_p1, "tmp_1_1_fu_448_p1");
    sc_trace(mVcdFile, tmp_1_2_fu_571_p1, "tmp_1_2_fu_571_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_6_fu_1684_p1, "tmp_6_fu_1684_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage21, "ap_block_pp0_stage21");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage19, "ap_block_pp0_stage19");
    sc_trace(mVcdFile, ap_block_pp0_stage20, "ap_block_pp0_stage20");
    sc_trace(mVcdFile, grp_fu_353_p4, "grp_fu_353_p4");
    sc_trace(mVcdFile, pixelRed_V_fu_388_p4, "pixelRed_V_fu_388_p4");
    sc_trace(mVcdFile, rhs_V_fu_412_p3, "rhs_V_fu_412_p3");
    sc_trace(mVcdFile, rhs_V_cast_fu_428_p3, "rhs_V_cast_fu_428_p3");
    sc_trace(mVcdFile, result_fu_456_p0, "result_fu_456_p0");
    sc_trace(mVcdFile, number_assign_cast_fu_453_p1, "number_assign_cast_fu_453_p1");
    sc_trace(mVcdFile, result_fu_456_p1, "result_fu_456_p1");
    sc_trace(mVcdFile, result_fu_456_p2, "result_fu_456_p2");
    sc_trace(mVcdFile, tmp_9_fu_466_p1, "tmp_9_fu_466_p1");
    sc_trace(mVcdFile, p_shl_i1_fu_470_p3, "p_shl_i1_fu_470_p3");
    sc_trace(mVcdFile, p_shl_i1_cast_fu_478_p1, "p_shl_i1_cast_fu_478_p1");
    sc_trace(mVcdFile, result_cast_fu_462_p1, "result_cast_fu_462_p1");
    sc_trace(mVcdFile, rhs_V_1_fu_491_p1, "rhs_V_1_fu_491_p1");
    sc_trace(mVcdFile, r_V_1_fu_494_p2, "r_V_1_fu_494_p2");
    sc_trace(mVcdFile, result_s_fu_504_p0, "result_s_fu_504_p0");
    sc_trace(mVcdFile, tmp_7_fu_500_p1, "tmp_7_fu_500_p1");
    sc_trace(mVcdFile, result_s_fu_504_p1, "result_s_fu_504_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_521_p1, "rhs_V_2_fu_521_p1");
    sc_trace(mVcdFile, tmp10_fu_535_p1, "tmp10_fu_535_p1");
    sc_trace(mVcdFile, rhs_V_3_fu_541_p3, "rhs_V_3_fu_541_p3");
    sc_trace(mVcdFile, rhs_V_3_cast_fu_553_p3, "rhs_V_3_cast_fu_553_p3");
    sc_trace(mVcdFile, result_1_fu_592_p0, "result_1_fu_592_p0");
    sc_trace(mVcdFile, number_assign_3_cast_fu_589_p1, "number_assign_3_cast_fu_589_p1");
    sc_trace(mVcdFile, result_1_fu_592_p1, "result_1_fu_592_p1");
    sc_trace(mVcdFile, result_1_fu_592_p2, "result_1_fu_592_p2");
    sc_trace(mVcdFile, tmp_65_fu_602_p1, "tmp_65_fu_602_p1");
    sc_trace(mVcdFile, p_shl_i_fu_606_p3, "p_shl_i_fu_606_p3");
    sc_trace(mVcdFile, p_shl_i_cast_fu_614_p1, "p_shl_i_cast_fu_614_p1");
    sc_trace(mVcdFile, result_3_cast_fu_598_p1, "result_3_cast_fu_598_p1");
    sc_trace(mVcdFile, rhs_V_4_fu_624_p1, "rhs_V_4_fu_624_p1");
    sc_trace(mVcdFile, r_V_4_fu_627_p2, "r_V_4_fu_627_p2");
    sc_trace(mVcdFile, result_3_fu_636_p0, "result_3_fu_636_p0");
    sc_trace(mVcdFile, tmp_26_fu_632_p1, "tmp_26_fu_632_p1");
    sc_trace(mVcdFile, result_3_fu_636_p1, "result_3_fu_636_p1");
    sc_trace(mVcdFile, rhs_V_5_fu_650_p1, "rhs_V_5_fu_650_p1");
    sc_trace(mVcdFile, tmp12_fu_663_p1, "tmp12_fu_663_p1");
    sc_trace(mVcdFile, rhs_V_6_fu_669_p3, "rhs_V_6_fu_669_p3");
    sc_trace(mVcdFile, rhs_V_6_cast_fu_681_p3, "rhs_V_6_cast_fu_681_p3");
    sc_trace(mVcdFile, colorGreen_V_2_fu_677_p1, "colorGreen_V_2_fu_677_p1");
    sc_trace(mVcdFile, rhs_V_7_fu_694_p1, "rhs_V_7_fu_694_p1");
    sc_trace(mVcdFile, rhs_V_8_fu_703_p1, "rhs_V_8_fu_703_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, tmp_5_i1_fu_712_p3, "tmp_5_i1_fu_712_p3");
    sc_trace(mVcdFile, mul1_fu_723_p1, "mul1_fu_723_p1");
    sc_trace(mVcdFile, mul1_fu_723_p2, "mul1_fu_723_p2");
    sc_trace(mVcdFile, result_6_fu_759_p0, "result_6_fu_759_p0");
    sc_trace(mVcdFile, tmp_42_fu_756_p1, "tmp_42_fu_756_p1");
    sc_trace(mVcdFile, result_6_fu_759_p1, "result_6_fu_759_p1");
    sc_trace(mVcdFile, tmp14_fu_776_p1, "tmp14_fu_776_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, neg_mul1_fu_782_p2, "neg_mul1_fu_782_p2");
    sc_trace(mVcdFile, tmp_35_fu_787_p4, "tmp_35_fu_787_p4");
    sc_trace(mVcdFile, tmp_8_fu_797_p1, "tmp_8_fu_797_p1");
    sc_trace(mVcdFile, tmp_12_fu_804_p3, "tmp_12_fu_804_p3");
    sc_trace(mVcdFile, mul3_fu_820_p1, "mul3_fu_820_p1");
    sc_trace(mVcdFile, tmp_5_i_fu_836_p3, "tmp_5_i_fu_836_p3");
    sc_trace(mVcdFile, mul4_fu_847_p1, "mul4_fu_847_p1");
    sc_trace(mVcdFile, mul4_fu_847_p2, "mul4_fu_847_p2");
    sc_trace(mVcdFile, mul5_fu_870_p1, "mul5_fu_870_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, p_neg_i1_fu_899_p2, "p_neg_i1_fu_899_p2");
    sc_trace(mVcdFile, tmp_13_fu_914_p3, "tmp_13_fu_914_p3");
    sc_trace(mVcdFile, tmp_14_fu_919_p3, "tmp_14_fu_919_p3");
    sc_trace(mVcdFile, neg_mul2_fu_931_p2, "neg_mul2_fu_931_p2");
    sc_trace(mVcdFile, tmp_41_fu_936_p4, "tmp_41_fu_936_p4");
    sc_trace(mVcdFile, tmp_16_fu_946_p1, "tmp_16_fu_946_p1");
    sc_trace(mVcdFile, tmp_17_fu_950_p1, "tmp_17_fu_950_p1");
    sc_trace(mVcdFile, tmp_20_fu_953_p3, "tmp_20_fu_953_p3");
    sc_trace(mVcdFile, neg_ti2_fu_960_p2, "neg_ti2_fu_960_p2");
    sc_trace(mVcdFile, tmp_18_fu_966_p3, "tmp_18_fu_966_p3");
    sc_trace(mVcdFile, tmp_22_fu_973_p3, "tmp_22_fu_973_p3");
    sc_trace(mVcdFile, p_Val2_1_cast_fu_927_p1, "p_Val2_1_cast_fu_927_p1");
    sc_trace(mVcdFile, p_Val2_2_cast_fu_981_p1, "p_Val2_2_cast_fu_981_p1");
    sc_trace(mVcdFile, p_neg_i_fu_991_p2, "p_neg_i_fu_991_p2");
    sc_trace(mVcdFile, neg_mul4_fu_1006_p2, "neg_mul4_fu_1006_p2");
    sc_trace(mVcdFile, tmp_72_fu_1011_p4, "tmp_72_fu_1011_p4");
    sc_trace(mVcdFile, tmp_28_fu_1021_p1, "tmp_28_fu_1021_p1");
    sc_trace(mVcdFile, tmp_29_fu_1025_p1, "tmp_29_fu_1025_p1");
    sc_trace(mVcdFile, tmp_36_fu_1028_p3, "tmp_36_fu_1028_p3");
    sc_trace(mVcdFile, neg_ti3_fu_1035_p2, "neg_ti3_fu_1035_p2");
    sc_trace(mVcdFile, tmp_30_fu_1041_p3, "tmp_30_fu_1041_p3");
    sc_trace(mVcdFile, tmp_38_fu_1048_p3, "tmp_38_fu_1048_p3");
    sc_trace(mVcdFile, neg_mul5_fu_1060_p2, "neg_mul5_fu_1060_p2");
    sc_trace(mVcdFile, tmp_75_fu_1065_p4, "tmp_75_fu_1065_p4");
    sc_trace(mVcdFile, tmp_40_fu_1075_p1, "tmp_40_fu_1075_p1");
    sc_trace(mVcdFile, tmp_43_fu_1079_p1, "tmp_43_fu_1079_p1");
    sc_trace(mVcdFile, tmp_48_fu_1082_p3, "tmp_48_fu_1082_p3");
    sc_trace(mVcdFile, neg_ti4_fu_1089_p2, "neg_ti4_fu_1089_p2");
    sc_trace(mVcdFile, tmp_32_fu_1095_p3, "tmp_32_fu_1095_p3");
    sc_trace(mVcdFile, tmp_49_fu_1102_p3, "tmp_49_fu_1102_p3");
    sc_trace(mVcdFile, p_Val2_4_cast_fu_1056_p1, "p_Val2_4_cast_fu_1056_p1");
    sc_trace(mVcdFile, p_Val2_5_cast_fu_1110_p1, "p_Val2_5_cast_fu_1110_p1");
    sc_trace(mVcdFile, result_2_fu_1123_p0, "result_2_fu_1123_p0");
    sc_trace(mVcdFile, number_assign_6_cast_fu_1120_p1, "number_assign_6_cast_fu_1120_p1");
    sc_trace(mVcdFile, result_2_fu_1123_p1, "result_2_fu_1123_p1");
    sc_trace(mVcdFile, result_2_fu_1123_p2, "result_2_fu_1123_p2");
    sc_trace(mVcdFile, tmp_79_fu_1133_p1, "tmp_79_fu_1133_p1");
    sc_trace(mVcdFile, p_shl_i2_fu_1137_p3, "p_shl_i2_fu_1137_p3");
    sc_trace(mVcdFile, p_shl_i2_cast_fu_1145_p1, "p_shl_i2_cast_fu_1145_p1");
    sc_trace(mVcdFile, result_6_cast_fu_1129_p1, "result_6_cast_fu_1129_p1");
    sc_trace(mVcdFile, tmp_5_i2_fu_1155_p3, "tmp_5_i2_fu_1155_p3");
    sc_trace(mVcdFile, mul2_fu_1166_p1, "mul2_fu_1166_p1");
    sc_trace(mVcdFile, mul2_fu_1166_p2, "mul2_fu_1166_p2");
    sc_trace(mVcdFile, mul_fu_1189_p1, "mul_fu_1189_p1");
    sc_trace(mVcdFile, tmp_10_i1_cast_fu_1212_p1, "tmp_10_i1_cast_fu_1212_p1");
    sc_trace(mVcdFile, tmp_23_fu_1221_p4, "tmp_23_fu_1221_p4");
    sc_trace(mVcdFile, tmp_10_fu_1205_p3, "tmp_10_fu_1205_p3");
    sc_trace(mVcdFile, tmp_11_i1_fu_1215_p2, "tmp_11_i1_fu_1215_p2");
    sc_trace(mVcdFile, tmp_12_i1_cast_fu_1230_p1, "tmp_12_i1_cast_fu_1230_p1");
    sc_trace(mVcdFile, tmp_5_fu_1234_p3, "tmp_5_fu_1234_p3");
    sc_trace(mVcdFile, tmp_25_fu_1242_p3, "tmp_25_fu_1242_p3");
    sc_trace(mVcdFile, tmp11_cast_fu_1254_p1, "tmp11_cast_fu_1254_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_1250_p1, "p_Val2_s_fu_1250_p1");
    sc_trace(mVcdFile, tmp_10_i_cast_fu_1271_p1, "tmp_10_i_cast_fu_1271_p1");
    sc_trace(mVcdFile, tmp_68_fu_1280_p4, "tmp_68_fu_1280_p4");
    sc_trace(mVcdFile, tmp_66_fu_1264_p3, "tmp_66_fu_1264_p3");
    sc_trace(mVcdFile, tmp_11_i_fu_1274_p2, "tmp_11_i_fu_1274_p2");
    sc_trace(mVcdFile, tmp_12_i_cast_fu_1289_p1, "tmp_12_i_cast_fu_1289_p1");
    sc_trace(mVcdFile, tmp_24_fu_1293_p3, "tmp_24_fu_1293_p3");
    sc_trace(mVcdFile, tmp_69_fu_1301_p3, "tmp_69_fu_1301_p3");
    sc_trace(mVcdFile, tmp13_cast_fu_1313_p1, "tmp13_cast_fu_1313_p1");
    sc_trace(mVcdFile, p_Val2_1_fu_1309_p1, "p_Val2_1_fu_1309_p1");
    sc_trace(mVcdFile, p_neg_i2_fu_1323_p2, "p_neg_i2_fu_1323_p2");
    sc_trace(mVcdFile, neg_mul3_fu_1338_p2, "neg_mul3_fu_1338_p2");
    sc_trace(mVcdFile, tmp_86_fu_1343_p4, "tmp_86_fu_1343_p4");
    sc_trace(mVcdFile, tmp_51_fu_1353_p1, "tmp_51_fu_1353_p1");
    sc_trace(mVcdFile, tmp_52_fu_1357_p1, "tmp_52_fu_1357_p1");
    sc_trace(mVcdFile, tmp_54_fu_1360_p3, "tmp_54_fu_1360_p3");
    sc_trace(mVcdFile, neg_ti8_fu_1367_p2, "neg_ti8_fu_1367_p2");
    sc_trace(mVcdFile, tmp_44_fu_1373_p3, "tmp_44_fu_1373_p3");
    sc_trace(mVcdFile, tmp_55_fu_1380_p3, "tmp_55_fu_1380_p3");
    sc_trace(mVcdFile, neg_mul_fu_1392_p2, "neg_mul_fu_1392_p2");
    sc_trace(mVcdFile, tmp_89_fu_1397_p4, "tmp_89_fu_1397_p4");
    sc_trace(mVcdFile, tmp_56_fu_1407_p1, "tmp_56_fu_1407_p1");
    sc_trace(mVcdFile, tmp_57_fu_1411_p1, "tmp_57_fu_1411_p1");
    sc_trace(mVcdFile, tmp_58_fu_1414_p3, "tmp_58_fu_1414_p3");
    sc_trace(mVcdFile, neg_ti_fu_1421_p2, "neg_ti_fu_1421_p2");
    sc_trace(mVcdFile, tmp_46_fu_1427_p3, "tmp_46_fu_1427_p3");
    sc_trace(mVcdFile, tmp_59_fu_1434_p3, "tmp_59_fu_1434_p3");
    sc_trace(mVcdFile, p_Val2_6_cast_fu_1388_p1, "p_Val2_6_cast_fu_1388_p1");
    sc_trace(mVcdFile, p_Val2_7_cast_fu_1442_p1, "p_Val2_7_cast_fu_1442_p1");
    sc_trace(mVcdFile, tmp_10_i2_cast_fu_1459_p1, "tmp_10_i2_cast_fu_1459_p1");
    sc_trace(mVcdFile, tmp_82_fu_1468_p4, "tmp_82_fu_1468_p4");
    sc_trace(mVcdFile, tmp_80_fu_1452_p3, "tmp_80_fu_1452_p3");
    sc_trace(mVcdFile, tmp_11_i2_fu_1462_p2, "tmp_11_i2_fu_1462_p2");
    sc_trace(mVcdFile, tmp_12_i2_cast_fu_1477_p1, "tmp_12_i2_cast_fu_1477_p1");
    sc_trace(mVcdFile, tmp_50_fu_1481_p3, "tmp_50_fu_1481_p3");
    sc_trace(mVcdFile, tmp_83_fu_1489_p3, "tmp_83_fu_1489_p3");
    sc_trace(mVcdFile, tmp15_cast_fu_1501_p1, "tmp15_cast_fu_1501_p1");
    sc_trace(mVcdFile, p_Val2_2_fu_1497_p1, "p_Val2_2_fu_1497_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_4_fu_1531_p1, "minimumDistanceIndex_4_fu_1531_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_1_fu_1535_p3, "minimumDistanceIndex_1_fu_1535_p3");
    sc_trace(mVcdFile, minimumDistance_1_fu_1542_p3, "minimumDistance_1_fu_1542_p3");
    sc_trace(mVcdFile, tmp_14_i_fu_1565_p1, "tmp_14_i_fu_1565_p1");
    sc_trace(mVcdFile, minimumDistance_2_fu_1555_p3, "minimumDistance_2_fu_1555_p3");
    sc_trace(mVcdFile, tmp_4_1_fu_1574_p2, "tmp_4_1_fu_1574_p2");
    sc_trace(mVcdFile, i_cast_fu_1562_p1, "i_cast_fu_1562_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_2_fu_1548_p3, "minimumDistanceIndex_2_fu_1548_p3");
    sc_trace(mVcdFile, tmp_2_1_fu_1568_p2, "tmp_2_1_fu_1568_p2");
    sc_trace(mVcdFile, minimumDistanceIndex_5_fu_1579_p3, "minimumDistanceIndex_5_fu_1579_p3");
    sc_trace(mVcdFile, minimumDistance_1_1_fu_1587_p3, "minimumDistance_1_1_fu_1587_p3");
    sc_trace(mVcdFile, i_1_cast_fu_1621_p1, "i_1_cast_fu_1621_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_7_fu_1624_p3, "minimumDistanceIndex_7_fu_1624_p3");
    sc_trace(mVcdFile, minimumDistance_1_2_fu_1630_p3, "minimumDistance_1_2_fu_1630_p3");
    sc_trace(mVcdFile, i_2_fu_1647_p2, "i_2_fu_1647_p2");
    sc_trace(mVcdFile, lhs_V_fu_1674_p1, "lhs_V_fu_1674_p1");
    sc_trace(mVcdFile, rhs_V_9_fu_1668_p2, "rhs_V_9_fu_1668_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage8_subdone, "ap_block_pp0_stage8_subdone");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage9_iter0, "ap_block_state11_pp0_stage9_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage9_subdone, "ap_block_pp0_stage9_subdone");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage10_iter0, "ap_block_state12_pp0_stage10_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage10_subdone, "ap_block_pp0_stage10_subdone");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage11_iter0, "ap_block_state13_pp0_stage11_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage11_subdone, "ap_block_pp0_stage11_subdone");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage12_iter0, "ap_block_state14_pp0_stage12_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage12_subdone, "ap_block_pp0_stage12_subdone");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage13_iter0, "ap_block_state15_pp0_stage13_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage13_subdone, "ap_block_pp0_stage13_subdone");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage14_iter0, "ap_block_state16_pp0_stage14_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage14_subdone, "ap_block_pp0_stage14_subdone");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage15_iter0, "ap_block_state17_pp0_stage15_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage15_subdone, "ap_block_pp0_stage15_subdone");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage16_iter0, "ap_block_state18_pp0_stage16_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage16_subdone, "ap_block_pp0_stage16_subdone");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage17_iter0, "ap_block_state19_pp0_stage17_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage17_subdone, "ap_block_pp0_stage17_subdone");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage18_iter0, "ap_block_state20_pp0_stage18_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage18_subdone, "ap_block_pp0_stage18_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage19_subdone, "ap_block_pp0_stage19_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage20_subdone, "ap_block_pp0_stage20_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage21_subdone, "ap_block_pp0_stage21_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage22_subdone, "ap_block_pp0_stage22_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_445, "ap_condition_445");
    sc_trace(mVcdFile, ap_condition_765, "ap_condition_765");
#endif

    }
    mHdltvinHandle.open("getPixelClassification_Stream.hdltvin.dat");
    mHdltvoutHandle.open("getPixelClassification_Stream.hdltvout.dat");
}

getPixelClassification_Stream::~getPixelClassification_Stream() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete p_color_array_stream_s_U;
    delete grp_fxp_sqrt_fu_329;
    delete grp_fxp_sqrt_fu_334;
    delete getPixelClassificcud_U2;
    delete getPixelClassificcud_U3;
    delete getPixelClassificcud_U4;
}

void getPixelClassification_Stream::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage23_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_765.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, ap_phi_mux_do_init_phi_fu_262_p6.read())) {
            ap_phi_reg_pp0_iter0_in_switch_V51_phi_reg_303 = in_switch_V51_rewind_reg_274.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_do_init_phi_fu_262_p6.read())) {
            ap_phi_reg_pp0_iter0_in_switch_V51_phi_reg_303 = in_switch_V.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_2123.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_2127.read()))) {
        ap_phi_reg_pp0_iter1_out_pixel_data_V_tmp_reg_315 = p_color_array_stream_8_fu_1689_p1.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_2123.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_2123.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_2127.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)))) {
        ap_phi_reg_pp0_iter1_out_pixel_data_V_tmp_reg_315 = in_pixel_data_V_0_data_out.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_out_pixel_data_V_tmp_reg_315 = ap_phi_reg_pp0_iter0_out_pixel_data_V_tmp_reg_315.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_2119.read()))) {
        do_init_reg_257 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        do_init_reg_257 = ap_const_lv1_1;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_vld_out.read()))) {
            in_pixel_data_V_0_sel_rd =  (sc_logic) (~in_pixel_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_ack_in.read()))) {
            in_pixel_data_V_0_sel_wr =  (sc_logic) (~in_pixel_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_pixel_data_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_pixel_data_V_0_state.read())))) {
            in_pixel_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_pixel_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_pixel_data_V_0_state.read())))) {
            in_pixel_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_pixel_data_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_pixel_data_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_pixel_data_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_ack_out.read()))))) {
            in_pixel_data_V_0_state = ap_const_lv2_3;
        } else {
            in_pixel_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_vld_out.read()))) {
            in_pixel_last_V_0_sel_rd =  (sc_logic) (~in_pixel_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_ack_in.read()))) {
            in_pixel_last_V_0_sel_wr =  (sc_logic) (~in_pixel_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, in_pixel_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, in_pixel_last_V_0_state.read())))) {
            in_pixel_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, in_pixel_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_pixel_last_V_0_state.read())))) {
            in_pixel_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, in_pixel_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, in_pixel_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, in_pixel_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_ack_out.read()))))) {
            in_pixel_last_V_0_state = ap_const_lv2_3;
        } else {
            in_pixel_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_vld_out.read()))) {
            in_pixel_user_V_0_sel_rd =  (sc_logic) (~in_pixel_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_ack_in.read()))) {
            in_pixel_user_V_0_sel_wr =  (sc_logic) (~in_pixel_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_pixel_user_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_pixel_user_V_0_state.read(), ap_const_lv2_2)))) {
            in_pixel_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_user_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_user_V_0_state.read(), ap_const_lv2_1)))) {
            in_pixel_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_pixel_user_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_user_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_pixel_user_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_ack_out.read()))))) {
            in_pixel_user_V_0_state = ap_const_lv2_3;
        } else {
            in_pixel_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_2119.read()))) {
        minimumDistanceIndex_9_reg_227 = tmp_91_reg_2114.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        minimumDistanceIndex_9_reg_227 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_2119.read()))) {
        minimumDistanceIndex_reg_289 = minimumDistanceIndex_8_reg_2104.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        minimumDistanceIndex_reg_289 = ap_const_lv32_7;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_2119.read()))) {
        minimumDistance_reg_242 = minimumDistance_2_2_reg_2109.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)))) {
        minimumDistance_reg_242 = ap_const_lv32_7FFFFFFF;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_vld_out.read()))) {
            out_pixel_data_V_1_sel_rd =  (sc_logic) (~out_pixel_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_ack_in.read()))) {
            out_pixel_data_V_1_sel_wr =  (sc_logic) (~out_pixel_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_data_V_1_state.read())))) {
            out_pixel_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_data_V_1_state.read())))) {
            out_pixel_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_ack_out.read()))))) {
            out_pixel_data_V_1_state = ap_const_lv2_3;
        } else {
            out_pixel_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_vld_out.read()))) {
            out_pixel_last_V_1_sel_rd =  (sc_logic) (~out_pixel_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_ack_in.read()))) {
            out_pixel_last_V_1_sel_wr =  (sc_logic) (~out_pixel_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_last_V_1_state.read())))) {
            out_pixel_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_last_V_1_state.read())))) {
            out_pixel_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_ack_out.read()))))) {
            out_pixel_last_V_1_state = ap_const_lv2_3;
        } else {
            out_pixel_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_vld_out.read()))) {
            out_pixel_user_V_1_sel_rd =  (sc_logic) (~out_pixel_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_ack_in.read()))) {
            out_pixel_user_V_1_sel_wr =  (sc_logic) (~out_pixel_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_user_V_1_state.read())))) {
            out_pixel_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_user_V_1_state.read())))) {
            out_pixel_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_ack_out.read()))))) {
            out_pixel_user_V_1_state = ap_const_lv2_3;
        } else {
            out_pixel_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        colorGreen_V_1_reg_1812 = colorGreen_V_1_fu_549_p1.read();
        i_1_reg_1822 = i_1_fu_566_p2.read();
        lhs_V_2_reg_1779 = lhs_V_2_fu_488_p1.read();
        lhs_V_3_reg_1796 = lhs_V_3_fu_518_p1.read();
        r_V_2_reg_1802 = r_V_2_fu_525_p2.read();
        r_V_3_reg_1817 = r_V_3_fu_561_p2.read();
        result_s_reg_1785 = result_s_fu_504_p2.read();
        tmp10_reg_1807 = tmp10_fu_535_p2.read();
        tmp_2_i1_reg_1772 = tmp_2_i1_fu_482_p2.read();
        tmp_34_reg_1790 = result_s_fu_504_p2.read().range(16, 16);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        colorGreen_V_reg_1746 = colorGreen_V_fu_420_p1.read();
        i_reg_1762 = i_fu_442_p2.read();
        lhs_V_1_reg_1751 = lhs_V_1_fu_424_p1.read();
        minimumDistanceIndex_3_reg_1730 = minimumDistanceIndex_3_fu_384_p1.read();
        pixelBlue_V_reg_1741 = in_pixel_data_V_0_data_out.read().range(15, 8);
        pixelGreen_V_reg_1736 = pixelGreen_V_fu_398_p1.read();
        r_V_reg_1757 = r_V_fu_436_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage21.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage21_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_2119 = exitcond_fu_1656_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_load_A.read())) {
        in_pixel_data_V_0_payload_A = in_pixel_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_load_B.read())) {
        in_pixel_data_V_0_payload_B = in_pixel_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_load_A.read())) {
        in_pixel_last_V_0_payload_A = in_pixel_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_load_B.read())) {
        in_pixel_last_V_0_payload_B = in_pixel_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_load_A.read())) {
        in_pixel_user_V_0_payload_A = in_pixel_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_load_B.read())) {
        in_pixel_user_V_0_payload_B = in_pixel_TUSER.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage21.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage21_11001.read(), ap_const_boolean_0))) {
        in_switch_V51_phi_reg_303 = ap_phi_reg_pp0_iter0_in_switch_V51_phi_reg_303.read();
        minimumDistanceIndex_8_reg_2104 = minimumDistanceIndex_8_fu_1635_p3.read();
        minimumDistance_2_2_reg_2109 = minimumDistance_2_2_fu_1641_p3.read();
        tmp_91_reg_2114 = tmp_91_fu_1652_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_2119.read()))) {
        in_switch_V51_rewind_reg_274 = in_switch_V51_phi_reg_303.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage20.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage20_11001.read(), ap_const_boolean_0))) {
        minimumDistanceIndex_6_reg_2075 = minimumDistanceIndex_6_fu_1595_p3.read();
        minimumDistance_2_1_reg_2081 = minimumDistance_2_1_fu_1603_p3.read();
        tmp_14_i2_reg_2087 = tmp_14_i2_fu_1611_p1.read();
        tmp_2_2_reg_2092 = tmp_2_2_fu_1615_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        mul3_reg_1934 = mul3_fu_820_p2.read();
        mul5_reg_1954 = mul5_fu_870_p2.read();
        tmp_11_reg_1924 = tmp_11_fu_801_p1.read();
        tmp_53_reg_1939 = mul3_fu_820_p2.read().range(44, 27);
        tmp_73_reg_1949 = mul4_fu_847_p2.read().range(41, 23);
        tmp_76_reg_1959 = mul5_fu_870_p2.read().range(44, 27);
        tmp_88_reg_1969 = tmp_9_i2_tr_fu_1718_p2.read().range(21, 21);
        tmp_9_i2_tr_reg_1964 = tmp_9_i2_tr_fu_1718_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        mul_reg_2012 = mul_fu_1189_p2.read();
        tmp11_reg_1980 = tmp11_fu_985_p2.read();
        tmp13_reg_1990 = tmp13_fu_1114_p2.read();
        tmp_21_reg_1975 = p_neg_i1_fu_899_p2.read().range(20, 1);
        tmp_2_i2_reg_1995 = tmp_2_i2_fu_1149_p2.read();
        tmp_67_reg_1985 = p_neg_i_fu_991_p2.read().range(20, 1);
        tmp_87_reg_2007 = mul2_fu_1166_p2.read().range(41, 23);
        tmp_90_reg_2017 = mul_fu_1189_p2.read().range(44, 27);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_34_reg_1790.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        neg_ti1_reg_1929 = neg_ti1_fu_811_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_load_A.read())) {
        out_pixel_data_V_1_payload_A = ap_phi_reg_pp0_iter1_out_pixel_data_V_tmp_reg_315.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_load_B.read())) {
        out_pixel_data_V_1_payload_B = ap_phi_reg_pp0_iter1_out_pixel_data_V_tmp_reg_315.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_load_A.read())) {
        out_pixel_last_V_1_payload_A = in_pixel_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_load_B.read())) {
        out_pixel_last_V_1_payload_B = in_pixel_last_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_load_A.read())) {
        out_pixel_user_V_1_payload_A = in_pixel_user_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_load_B.read())) {
        out_pixel_user_V_1_payload_B = in_pixel_user_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_2123.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage22.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage22_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_reg_2127.read()))) {
        p_color_array_stream_7_reg_2136 = p_color_array_stream_s_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        r_V_5_reg_1861 = r_V_5_fu_654_p2.read();
        r_V_6_reg_1871 = r_V_6_fu_689_p2.read();
        r_V_7_reg_1876 = r_V_7_fu_698_p2.read();
        r_V_8_reg_1881 = r_V_8_fu_707_p2.read();
        result_3_reg_1850 = result_3_fu_636_p2.read();
        tmp12_reg_1866 = tmp12_fu_663_p2.read();
        tmp_2_i_reg_1843 = tmp_2_i_fu_618_p2.read();
        tmp_39_reg_1837 = tmp_9_i1_tr_fu_1704_p2.read().range(21, 21);
        tmp_71_reg_1855 = result_3_fu_636_p2.read().range(16, 16);
        tmp_9_i1_tr_reg_1832 = tmp_9_i1_tr_fu_1704_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        reg_369 = p_color_array_stream_s_q0.read().range(15, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        result_6_reg_1908 = result_6_fu_759_p2.read();
        tmp14_reg_1919 = tmp14_fu_776_p2.read();
        tmp_37_reg_1892 = mul1_fu_723_p2.read().range(41, 23);
        tmp_74_reg_1902 = tmp_9_i_tr_fu_1711_p2.read().range(21, 21);
        tmp_85_reg_1913 = result_6_fu_759_p2.read().range(16, 16);
        tmp_9_i_tr_reg_1897 = tmp_9_i_tr_fu_1711_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        tmp15_reg_2037 = tmp15_fu_1446_p2.read();
        tmp_81_reg_2032 = p_neg_i2_fu_1323_p2.read().range(20, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage19.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage19_11001.read(), ap_const_boolean_0))) {
        tmp_14_i1_reg_2047 = tmp_14_i1_fu_1511_p1.read();
        tmp_2_reg_2052 = tmp_2_fu_1515_p2.read();
        tmp_33_reg_2064 = grp_fxp_sqrt_fu_334_ap_return.read().range(19, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_34_reg_1790.read()))) {
        tmp_27_reg_1887 = tmp_27_fu_729_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage21.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage21_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1656_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_1662_p2.read()))) {
        tmp_3_reg_2127 = tmp_3_fu_1678_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage20.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage20_11001.read(), ap_const_boolean_0))) {
        tmp_4_2_reg_2098 = grp_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage19.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage19_11001.read(), ap_const_boolean_0))) {
        tmp_4_reg_2058 = grp_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_71_reg_1855.read()))) {
        tmp_70_reg_1944 = tmp_70_fu_853_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_85_reg_1913.read()))) {
        tmp_84_reg_2002 = tmp_84_fu_1172_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage21.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage21_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1656_p2.read()))) {
        tmp_reg_2123 = tmp_fu_1662_p2.read();
    }
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read()[11];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage11() {
    ap_CS_fsm_pp0_stage11 = ap_CS_fsm.read()[12];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage12() {
    ap_CS_fsm_pp0_stage12 = ap_CS_fsm.read()[13];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage13() {
    ap_CS_fsm_pp0_stage13 = ap_CS_fsm.read()[14];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read()[15];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage15() {
    ap_CS_fsm_pp0_stage15 = ap_CS_fsm.read()[16];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage16() {
    ap_CS_fsm_pp0_stage16 = ap_CS_fsm.read()[17];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage17() {
    ap_CS_fsm_pp0_stage17 = ap_CS_fsm.read()[18];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage18() {
    ap_CS_fsm_pp0_stage18 = ap_CS_fsm.read()[19];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage19() {
    ap_CS_fsm_pp0_stage19 = ap_CS_fsm.read()[20];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage20() {
    ap_CS_fsm_pp0_stage20 = ap_CS_fsm.read()[21];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage21() {
    ap_CS_fsm_pp0_stage21 = ap_CS_fsm.read()[22];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage22() {
    ap_CS_fsm_pp0_stage22 = ap_CS_fsm.read()[23];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage23() {
    ap_CS_fsm_pp0_stage23 = ap_CS_fsm.read()[24];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[9];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read()[10];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read())) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state26_io.read())));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
   esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read())) || 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state26_io.read())));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage10_11001() {
    ap_block_pp0_stage10_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage10_subdone() {
    ap_block_pp0_stage10_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage11_11001() {
    ap_block_pp0_stage11_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage11_subdone() {
    ap_block_pp0_stage11_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage12_11001() {
    ap_block_pp0_stage12_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage12_subdone() {
    ap_block_pp0_stage12_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage13_11001() {
    ap_block_pp0_stage13_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage13_subdone() {
    ap_block_pp0_stage13_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage14_11001() {
    ap_block_pp0_stage14_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage14_subdone() {
    ap_block_pp0_stage14_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage15_11001() {
    ap_block_pp0_stage15_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage15_subdone() {
    ap_block_pp0_stage15_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage16_11001() {
    ap_block_pp0_stage16_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage16_subdone() {
    ap_block_pp0_stage16_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage17_11001() {
    ap_block_pp0_stage17_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage17_subdone() {
    ap_block_pp0_stage17_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage18_11001() {
    ap_block_pp0_stage18_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage18_subdone() {
    ap_block_pp0_stage18_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage19() {
    ap_block_pp0_stage19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage19_11001() {
    ap_block_pp0_stage19_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage19_subdone() {
    ap_block_pp0_stage19_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_ack_in.read()))));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state27_io.read()))));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state27_io.read()))));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage20() {
    ap_block_pp0_stage20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage20_11001() {
    ap_block_pp0_stage20_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage20_subdone() {
    ap_block_pp0_stage20_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage21() {
    ap_block_pp0_stage21 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage21_11001() {
    ap_block_pp0_stage21_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage21_subdone() {
    ap_block_pp0_stage21_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage22_11001() {
    ap_block_pp0_stage22_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage22_subdone() {
    ap_block_pp0_stage22_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage23() {
    ap_block_pp0_stage23 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage23_11001() {
    ap_block_pp0_stage23_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op345_read_state25.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op348_read_state25.read()))));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage23_subdone() {
    ap_block_pp0_stage23_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && ((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op345_read_state25.read())) || 
  (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()) && 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op348_read_state25.read()))));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage8() {
    ap_block_pp0_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage8_11001() {
    ap_block_pp0_stage8_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage8_subdone() {
    ap_block_pp0_stage8_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage9_11001() {
    ap_block_pp0_stage9_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage9_subdone() {
    ap_block_pp0_stage9_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state10_pp0_stage8_iter0() {
    ap_block_state10_pp0_stage8_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state11_pp0_stage9_iter0() {
    ap_block_state11_pp0_stage9_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state11_pp0_stage9_iter0_ignore_call82() {
    ap_block_state11_pp0_stage9_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state12_pp0_stage10_iter0() {
    ap_block_state12_pp0_stage10_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state12_pp0_stage10_iter0_ignore_call82() {
    ap_block_state12_pp0_stage10_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state13_pp0_stage11_iter0() {
    ap_block_state13_pp0_stage11_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state13_pp0_stage11_iter0_ignore_call82() {
    ap_block_state13_pp0_stage11_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state14_pp0_stage12_iter0() {
    ap_block_state14_pp0_stage12_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state14_pp0_stage12_iter0_ignore_call82() {
    ap_block_state14_pp0_stage12_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state15_pp0_stage13_iter0() {
    ap_block_state15_pp0_stage13_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state15_pp0_stage13_iter0_ignore_call82() {
    ap_block_state15_pp0_stage13_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state16_pp0_stage14_iter0() {
    ap_block_state16_pp0_stage14_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state16_pp0_stage14_iter0_ignore_call82() {
    ap_block_state16_pp0_stage14_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state17_pp0_stage15_iter0() {
    ap_block_state17_pp0_stage15_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state17_pp0_stage15_iter0_ignore_call82() {
    ap_block_state17_pp0_stage15_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state18_pp0_stage16_iter0() {
    ap_block_state18_pp0_stage16_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state18_pp0_stage16_iter0_ignore_call82() {
    ap_block_state18_pp0_stage16_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state19_pp0_stage17_iter0() {
    ap_block_state19_pp0_stage17_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state19_pp0_stage17_iter0_ignore_call82() {
    ap_block_state19_pp0_stage17_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state20_pp0_stage18_iter0() {
    ap_block_state20_pp0_stage18_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state20_pp0_stage18_iter0_ignore_call82() {
    ap_block_state20_pp0_stage18_iter0_ignore_call82 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state21_pp0_stage19_iter0() {
    ap_block_state21_pp0_stage19_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state22_pp0_stage20_iter0() {
    ap_block_state22_pp0_stage20_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state23_pp0_stage21_iter0() {
    ap_block_state23_pp0_stage21_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state24_pp0_stage22_iter0() {
    ap_block_state24_pp0_stage22_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state25_pp0_stage23_iter0() {
    ap_block_state25_pp0_stage23_iter0 = ((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op345_read_state25.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op348_read_state25.read())));
}

void getPixelClassification_Stream::thread_ap_block_state26_io() {
    ap_block_state26_io = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_in.read()));
}

void getPixelClassification_Stream::thread_ap_block_state26_pp0_stage0_iter1() {
    ap_block_state26_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read()));
}

void getPixelClassification_Stream::thread_ap_block_state27_io() {
    ap_block_state27_io = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_in.read()));
}

void getPixelClassification_Stream::thread_ap_block_state27_pp0_stage1_iter1() {
    ap_block_state27_pp0_stage1_iter1 = (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_data_V_1_ack_in.read()));
}

void getPixelClassification_Stream::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_user_V_0_vld_out.read());
}

void getPixelClassification_Stream::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_condition_445() {
    ap_condition_445 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void getPixelClassification_Stream::thread_ap_condition_765() {
    ap_condition_765 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage20.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage20_11001.read(), ap_const_boolean_0));
}

void getPixelClassification_Stream::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getPixelClassification_Stream::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_do_init_phi_fu_262_p6() {
    ap_phi_mux_do_init_phi_fu_262_p6 = do_init_reg_257.read();
}

void getPixelClassification_Stream::thread_ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6() {
    if (esl_seteq<1,1,1>(ap_condition_445.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read())) {
            ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6 = ap_const_lv2_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_2119.read())) {
            ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6 = tmp_91_reg_2114.read();
        } else {
            ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6 = minimumDistanceIndex_9_reg_227.read();
        }
    } else {
        ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6 = minimumDistanceIndex_9_reg_227.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_reg_pp0_iter0_out_pixel_data_V_tmp_reg_315() {
    ap_phi_reg_pp0_iter0_out_pixel_data_V_tmp_reg_315 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
}

void getPixelClassification_Stream::thread_ap_predicate_op345_read_state25() {
    ap_predicate_op345_read_state25 = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_2123.read()));
}

void getPixelClassification_Stream::thread_ap_predicate_op348_read_state25() {
    ap_predicate_op348_read_state25 = (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_2123.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_2127.read()));
}

void getPixelClassification_Stream::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void getPixelClassification_Stream::thread_colorGreen_V_1_fu_549_p1() {
    colorGreen_V_1_fu_549_p1 = p_color_array_stream_s_q0.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_colorGreen_V_2_fu_677_p1() {
    colorGreen_V_2_fu_677_p1 = p_color_array_stream_s_q0.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_colorGreen_V_fu_420_p1() {
    colorGreen_V_fu_420_p1 = p_color_array_stream_s_q0.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_exitcond_fu_1656_p2() {
    exitcond_fu_1656_p2 = (!i_2_fu_1647_p2.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_2_fu_1647_p2.read() == ap_const_lv3_6);
}

void getPixelClassification_Stream::thread_grp_fu_343_p4() {
    grp_fu_343_p4 = p_color_array_stream_s_q0.read().range(15, 8);
}

void getPixelClassification_Stream::thread_grp_fu_353_p4() {
    grp_fu_353_p4 = grp_fxp_sqrt_fu_329_ap_return.read().range(19, 8);
}

void getPixelClassification_Stream::thread_grp_fu_363_p2() {
    grp_fu_363_p2 = (!grp_fu_353_p4.read().is_01() || !ap_const_lv12_13B.is_01())? sc_lv<1>(): (sc_biguint<12>(grp_fu_353_p4.read()) < sc_biguint<12>(ap_const_lv12_13B));
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_329_ap_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage19.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage19_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage20.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage20_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage16.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage16_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage17.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage17_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage18.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage18_11001.read(), ap_const_boolean_0)))) {
        grp_fxp_sqrt_fu_329_ap_ce = ap_const_logic_1;
    } else {
        grp_fxp_sqrt_fu_329_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_329_in_val_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
            grp_fxp_sqrt_fu_329_in_val_V_read = powerSummation_V_2_fu_1504_p2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            grp_fxp_sqrt_fu_329_in_val_V_read = powerSummation_V_fu_1257_p2.read();
        } else {
            grp_fxp_sqrt_fu_329_in_val_V_read = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        grp_fxp_sqrt_fu_329_in_val_V_read = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_334_ap_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage19.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage19_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage16.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage16_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage17.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage17_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage18.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage18_11001.read(), ap_const_boolean_0)))) {
        grp_fxp_sqrt_fu_334_ap_ce = ap_const_logic_1;
    } else {
        grp_fxp_sqrt_fu_334_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_grp_fxp_sqrt_fu_334_in_val_V_read() {
    grp_fxp_sqrt_fu_334_in_val_V_read = (!tmp13_cast_fu_1313_p1.read().is_01() || !p_Val2_1_fu_1309_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp13_cast_fu_1313_p1.read()) + sc_bigint<32>(p_Val2_1_fu_1309_p1.read()));
}

void getPixelClassification_Stream::thread_i_1_cast_fu_1621_p1() {
    i_1_cast_fu_1621_p1 = esl_zext<32,3>(i_1_reg_1822.read());
}

void getPixelClassification_Stream::thread_i_1_fu_566_p2() {
    i_1_fu_566_p2 = (!ap_const_lv3_2.is_01() || !minimumDistanceIndex_3_reg_1730.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(minimumDistanceIndex_3_reg_1730.read()));
}

void getPixelClassification_Stream::thread_i_2_fu_1647_p2() {
    i_2_fu_1647_p2 = (!ap_const_lv3_3.is_01() || !minimumDistanceIndex_3_reg_1730.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) + sc_biguint<3>(minimumDistanceIndex_3_reg_1730.read()));
}

void getPixelClassification_Stream::thread_i_cast_fu_1562_p1() {
    i_cast_fu_1562_p1 = esl_zext<32,3>(i_reg_1762.read());
}

void getPixelClassification_Stream::thread_i_fu_442_p2() {
    i_fu_442_p2 = (!ap_const_lv3_1.is_01() || !minimumDistanceIndex_3_fu_384_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(minimumDistanceIndex_3_fu_384_p1.read()));
}

void getPixelClassification_Stream::thread_in_pixel_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_reg_2123.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_2127.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_2123.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        in_pixel_TDATA_blk_n = in_pixel_data_V_0_state.read()[0];
    } else {
        in_pixel_TDATA_blk_n = ap_const_logic_1;
    }
}

void getPixelClassification_Stream::thread_in_pixel_TREADY() {
    in_pixel_TREADY = in_pixel_data_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_ack_in() {
    in_pixel_data_V_0_ack_in = in_pixel_data_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op345_read_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op348_read_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_pixel_data_V_0_ack_out = ap_const_logic_1;
    } else {
        in_pixel_data_V_0_ack_out = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_data_V_0_sel.read())) {
        in_pixel_data_V_0_data_out = in_pixel_data_V_0_payload_B.read();
    } else {
        in_pixel_data_V_0_data_out = in_pixel_data_V_0_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_load_A() {
    in_pixel_data_V_0_load_A = (in_pixel_data_V_0_state_cmp_full.read() & ~in_pixel_data_V_0_sel_wr.read());
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_load_B() {
    in_pixel_data_V_0_load_B = (in_pixel_data_V_0_sel_wr.read() & in_pixel_data_V_0_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_sel() {
    in_pixel_data_V_0_sel = in_pixel_data_V_0_sel_rd.read();
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_state_cmp_full() {
    in_pixel_data_V_0_state_cmp_full =  (sc_logic) ((!in_pixel_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_pixel_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_vld_in() {
    in_pixel_data_V_0_vld_in = in_pixel_TVALID.read();
}

void getPixelClassification_Stream::thread_in_pixel_data_V_0_vld_out() {
    in_pixel_data_V_0_vld_out = in_pixel_data_V_0_state.read()[0];
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_ack_in() {
    in_pixel_last_V_0_ack_in = in_pixel_last_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op345_read_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op348_read_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_pixel_last_V_0_ack_out = ap_const_logic_1;
    } else {
        in_pixel_last_V_0_ack_out = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_last_V_0_sel.read())) {
        in_pixel_last_V_0_data_out = in_pixel_last_V_0_payload_B.read();
    } else {
        in_pixel_last_V_0_data_out = in_pixel_last_V_0_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_load_A() {
    in_pixel_last_V_0_load_A = (in_pixel_last_V_0_state_cmp_full.read() & ~in_pixel_last_V_0_sel_wr.read());
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_load_B() {
    in_pixel_last_V_0_load_B = (in_pixel_last_V_0_sel_wr.read() & in_pixel_last_V_0_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_sel() {
    in_pixel_last_V_0_sel = in_pixel_last_V_0_sel_rd.read();
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_state_cmp_full() {
    in_pixel_last_V_0_state_cmp_full =  (sc_logic) ((!in_pixel_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_pixel_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_vld_in() {
    in_pixel_last_V_0_vld_in = in_pixel_TVALID.read();
}

void getPixelClassification_Stream::thread_in_pixel_last_V_0_vld_out() {
    in_pixel_last_V_0_vld_out = in_pixel_last_V_0_state.read()[0];
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_ack_in() {
    in_pixel_user_V_0_ack_in = in_pixel_user_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_ack_out() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op345_read_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage23.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op348_read_state25.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage23_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        in_pixel_user_V_0_ack_out = ap_const_logic_1;
    } else {
        in_pixel_user_V_0_ack_out = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_user_V_0_sel.read())) {
        in_pixel_user_V_0_data_out = in_pixel_user_V_0_payload_B.read();
    } else {
        in_pixel_user_V_0_data_out = in_pixel_user_V_0_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_load_A() {
    in_pixel_user_V_0_load_A = (in_pixel_user_V_0_state_cmp_full.read() & ~in_pixel_user_V_0_sel_wr.read());
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_load_B() {
    in_pixel_user_V_0_load_B = (in_pixel_user_V_0_sel_wr.read() & in_pixel_user_V_0_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_sel() {
    in_pixel_user_V_0_sel = in_pixel_user_V_0_sel_rd.read();
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_state_cmp_full() {
    in_pixel_user_V_0_state_cmp_full =  (sc_logic) ((!in_pixel_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_pixel_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_vld_in() {
    in_pixel_user_V_0_vld_in = in_pixel_TVALID.read();
}

void getPixelClassification_Stream::thread_in_pixel_user_V_0_vld_out() {
    in_pixel_user_V_0_vld_out = in_pixel_user_V_0_state.read()[0];
}

void getPixelClassification_Stream::thread_lhs_V_1_fu_424_p1() {
    lhs_V_1_fu_424_p1 = esl_zext<9,8>(pixelRed_V_fu_388_p4.read());
}

void getPixelClassification_Stream::thread_lhs_V_2_fu_488_p1() {
    lhs_V_2_fu_488_p1 = esl_zext<9,8>(pixelGreen_V_reg_1736.read());
}

void getPixelClassification_Stream::thread_lhs_V_3_fu_518_p1() {
    lhs_V_3_fu_518_p1 = esl_zext<9,8>(pixelBlue_V_reg_1741.read());
}

void getPixelClassification_Stream::thread_lhs_V_fu_1674_p1() {
    lhs_V_fu_1674_p1 = esl_zext<32,4>(ap_phi_reg_pp0_iter0_in_switch_V51_phi_reg_303.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_1_fu_1535_p3() {
    minimumDistanceIndex_1_fu_1535_p3 = (!tmp_4_reg_2058.read()[0].is_01())? sc_lv<32>(): ((tmp_4_reg_2058.read()[0].to_bool())? minimumDistanceIndex_4_fu_1531_p1.read(): minimumDistanceIndex_reg_289.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_2_fu_1548_p3() {
    minimumDistanceIndex_2_fu_1548_p3 = (!tmp_2_reg_2052.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_2052.read()[0].to_bool())? minimumDistanceIndex_1_fu_1535_p3.read(): minimumDistanceIndex_reg_289.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_3_fu_384_p1() {
    minimumDistanceIndex_3_fu_384_p1 = esl_zext<3,2>(minimumDistanceIndex_9_reg_227.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_4_fu_1531_p1() {
    minimumDistanceIndex_4_fu_1531_p1 = esl_zext<32,2>(minimumDistanceIndex_9_reg_227.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_5_fu_1579_p3() {
    minimumDistanceIndex_5_fu_1579_p3 = (!tmp_4_1_fu_1574_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_4_1_fu_1574_p2.read()[0].to_bool())? i_cast_fu_1562_p1.read(): minimumDistanceIndex_2_fu_1548_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_6_fu_1595_p3() {
    minimumDistanceIndex_6_fu_1595_p3 = (!tmp_2_1_fu_1568_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_1_fu_1568_p2.read()[0].to_bool())? minimumDistanceIndex_5_fu_1579_p3.read(): minimumDistanceIndex_2_fu_1548_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_7_fu_1624_p3() {
    minimumDistanceIndex_7_fu_1624_p3 = (!tmp_4_2_reg_2098.read()[0].is_01())? sc_lv<32>(): ((tmp_4_2_reg_2098.read()[0].to_bool())? i_1_cast_fu_1621_p1.read(): minimumDistanceIndex_6_reg_2075.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_8_fu_1635_p3() {
    minimumDistanceIndex_8_fu_1635_p3 = (!tmp_2_2_reg_2092.read()[0].is_01())? sc_lv<32>(): ((tmp_2_2_reg_2092.read()[0].to_bool())? minimumDistanceIndex_7_fu_1624_p3.read(): minimumDistanceIndex_6_reg_2075.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_1_fu_1587_p3() {
    minimumDistance_1_1_fu_1587_p3 = (!tmp_4_1_fu_1574_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_4_1_fu_1574_p2.read()[0].to_bool())? tmp_14_i_fu_1565_p1.read(): minimumDistance_2_fu_1555_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_2_fu_1630_p3() {
    minimumDistance_1_2_fu_1630_p3 = (!tmp_4_2_reg_2098.read()[0].is_01())? sc_lv<32>(): ((tmp_4_2_reg_2098.read()[0].to_bool())? tmp_14_i2_reg_2087.read(): minimumDistance_2_1_reg_2081.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_fu_1542_p3() {
    minimumDistance_1_fu_1542_p3 = (!tmp_4_reg_2058.read()[0].is_01())? sc_lv<32>(): ((tmp_4_reg_2058.read()[0].to_bool())? tmp_14_i1_reg_2047.read(): minimumDistance_reg_242.read());
}

void getPixelClassification_Stream::thread_minimumDistance_2_1_fu_1603_p3() {
    minimumDistance_2_1_fu_1603_p3 = (!tmp_2_1_fu_1568_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_1_fu_1568_p2.read()[0].to_bool())? minimumDistance_1_1_fu_1587_p3.read(): minimumDistance_2_fu_1555_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistance_2_2_fu_1641_p3() {
    minimumDistance_2_2_fu_1641_p3 = (!tmp_2_2_reg_2092.read()[0].is_01())? sc_lv<32>(): ((tmp_2_2_reg_2092.read()[0].to_bool())? minimumDistance_1_2_fu_1630_p3.read(): minimumDistance_2_1_reg_2081.read());
}

void getPixelClassification_Stream::thread_minimumDistance_2_fu_1555_p3() {
    minimumDistance_2_fu_1555_p3 = (!tmp_2_reg_2052.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_2052.read()[0].to_bool())? minimumDistance_1_fu_1542_p3.read(): minimumDistance_reg_242.read());
}

void getPixelClassification_Stream::thread_mul1_fu_723_p1() {
    mul1_fu_723_p1 = tmp_5_i1_fu_712_p3.read();
}

void getPixelClassification_Stream::thread_mul1_fu_723_p2() {
    mul1_fu_723_p2 = (!ap_const_lv42_19999A.is_01() || !mul1_fu_723_p1.read().is_01())? sc_lv<42>(): sc_biguint<42>(ap_const_lv42_19999A) * sc_bigint<20>(mul1_fu_723_p1.read());
}

void getPixelClassification_Stream::thread_mul2_fu_1166_p1() {
    mul2_fu_1166_p1 = tmp_5_i2_fu_1155_p3.read();
}

void getPixelClassification_Stream::thread_mul2_fu_1166_p2() {
    mul2_fu_1166_p2 = (!ap_const_lv42_19999A.is_01() || !mul2_fu_1166_p1.read().is_01())? sc_lv<42>(): sc_biguint<42>(ap_const_lv42_19999A) * sc_bigint<20>(mul2_fu_1166_p1.read());
}

void getPixelClassification_Stream::thread_mul3_fu_820_p1() {
    mul3_fu_820_p1 = tmp_9_i1_tr_reg_1832.read();
}

void getPixelClassification_Stream::thread_mul3_fu_820_p2() {
    mul3_fu_820_p2 = (!ap_const_lv45_666667.is_01() || !mul3_fu_820_p1.read().is_01())? sc_lv<45>(): sc_biguint<45>(ap_const_lv45_666667) * sc_bigint<22>(mul3_fu_820_p1.read());
}

void getPixelClassification_Stream::thread_mul4_fu_847_p1() {
    mul4_fu_847_p1 = tmp_5_i_fu_836_p3.read();
}

void getPixelClassification_Stream::thread_mul4_fu_847_p2() {
    mul4_fu_847_p2 = (!ap_const_lv42_19999A.is_01() || !mul4_fu_847_p1.read().is_01())? sc_lv<42>(): sc_biguint<42>(ap_const_lv42_19999A) * sc_bigint<20>(mul4_fu_847_p1.read());
}

void getPixelClassification_Stream::thread_mul5_fu_870_p1() {
    mul5_fu_870_p1 = tmp_9_i_tr_reg_1897.read();
}

void getPixelClassification_Stream::thread_mul5_fu_870_p2() {
    mul5_fu_870_p2 = (!ap_const_lv45_666667.is_01() || !mul5_fu_870_p1.read().is_01())? sc_lv<45>(): sc_biguint<45>(ap_const_lv45_666667) * sc_bigint<22>(mul5_fu_870_p1.read());
}

void getPixelClassification_Stream::thread_mul_fu_1189_p1() {
    mul_fu_1189_p1 = tmp_9_i2_tr_reg_1964.read();
}

void getPixelClassification_Stream::thread_mul_fu_1189_p2() {
    mul_fu_1189_p2 = (!ap_const_lv45_666667.is_01() || !mul_fu_1189_p1.read().is_01())? sc_lv<45>(): sc_biguint<45>(ap_const_lv45_666667) * sc_bigint<22>(mul_fu_1189_p1.read());
}

void getPixelClassification_Stream::thread_neg_mul1_fu_782_p2() {
    neg_mul1_fu_782_p2 = (!ap_const_lv41_0.is_01() || !tmp_27_reg_1887.read().is_01())? sc_lv<41>(): (sc_biguint<41>(ap_const_lv41_0) - sc_biguint<41>(tmp_27_reg_1887.read()));
}

void getPixelClassification_Stream::thread_neg_mul2_fu_931_p2() {
    neg_mul2_fu_931_p2 = (!ap_const_lv45_0.is_01() || !mul3_reg_1934.read().is_01())? sc_lv<45>(): (sc_biguint<45>(ap_const_lv45_0) - sc_biguint<45>(mul3_reg_1934.read()));
}

void getPixelClassification_Stream::thread_neg_mul3_fu_1338_p2() {
    neg_mul3_fu_1338_p2 = (!ap_const_lv41_0.is_01() || !tmp_84_reg_2002.read().is_01())? sc_lv<41>(): (sc_biguint<41>(ap_const_lv41_0) - sc_biguint<41>(tmp_84_reg_2002.read()));
}

void getPixelClassification_Stream::thread_neg_mul4_fu_1006_p2() {
    neg_mul4_fu_1006_p2 = (!ap_const_lv41_0.is_01() || !tmp_70_reg_1944.read().is_01())? sc_lv<41>(): (sc_biguint<41>(ap_const_lv41_0) - sc_biguint<41>(tmp_70_reg_1944.read()));
}

void getPixelClassification_Stream::thread_neg_mul5_fu_1060_p2() {
    neg_mul5_fu_1060_p2 = (!ap_const_lv45_0.is_01() || !mul5_reg_1954.read().is_01())? sc_lv<45>(): (sc_biguint<45>(ap_const_lv45_0) - sc_biguint<45>(mul5_reg_1954.read()));
}

void getPixelClassification_Stream::thread_neg_mul_fu_1392_p2() {
    neg_mul_fu_1392_p2 = (!ap_const_lv45_0.is_01() || !mul_reg_2012.read().is_01())? sc_lv<45>(): (sc_biguint<45>(ap_const_lv45_0) - sc_biguint<45>(mul_reg_2012.read()));
}

void getPixelClassification_Stream::thread_neg_ti1_fu_811_p2() {
    neg_ti1_fu_811_p2 = (!ap_const_lv20_0.is_01() || !tmp_12_fu_804_p3.read().is_01())? sc_lv<20>(): (sc_biguint<20>(ap_const_lv20_0) - sc_biguint<20>(tmp_12_fu_804_p3.read()));
}

void getPixelClassification_Stream::thread_neg_ti2_fu_960_p2() {
    neg_ti2_fu_960_p2 = (!ap_const_lv22_0.is_01() || !tmp_20_fu_953_p3.read().is_01())? sc_lv<22>(): (sc_biguint<22>(ap_const_lv22_0) - sc_biguint<22>(tmp_20_fu_953_p3.read()));
}

void getPixelClassification_Stream::thread_neg_ti3_fu_1035_p2() {
    neg_ti3_fu_1035_p2 = (!ap_const_lv20_0.is_01() || !tmp_36_fu_1028_p3.read().is_01())? sc_lv<20>(): (sc_biguint<20>(ap_const_lv20_0) - sc_biguint<20>(tmp_36_fu_1028_p3.read()));
}

void getPixelClassification_Stream::thread_neg_ti4_fu_1089_p2() {
    neg_ti4_fu_1089_p2 = (!ap_const_lv22_0.is_01() || !tmp_48_fu_1082_p3.read().is_01())? sc_lv<22>(): (sc_biguint<22>(ap_const_lv22_0) - sc_biguint<22>(tmp_48_fu_1082_p3.read()));
}

void getPixelClassification_Stream::thread_neg_ti8_fu_1367_p2() {
    neg_ti8_fu_1367_p2 = (!ap_const_lv20_0.is_01() || !tmp_54_fu_1360_p3.read().is_01())? sc_lv<20>(): (sc_biguint<20>(ap_const_lv20_0) - sc_biguint<20>(tmp_54_fu_1360_p3.read()));
}

void getPixelClassification_Stream::thread_neg_ti_fu_1421_p2() {
    neg_ti_fu_1421_p2 = (!ap_const_lv22_0.is_01() || !tmp_58_fu_1414_p3.read().is_01())? sc_lv<22>(): (sc_biguint<22>(ap_const_lv22_0) - sc_biguint<22>(tmp_58_fu_1414_p3.read()));
}

void getPixelClassification_Stream::thread_number_assign_3_cast_fu_589_p1() {
    number_assign_3_cast_fu_589_p1 = esl_sext<18,9>(r_V_3_reg_1817.read());
}

void getPixelClassification_Stream::thread_number_assign_6_cast_fu_1120_p1() {
    number_assign_6_cast_fu_1120_p1 = esl_sext<18,9>(r_V_6_reg_1871.read());
}

void getPixelClassification_Stream::thread_number_assign_cast_fu_453_p1() {
    number_assign_cast_fu_453_p1 = esl_sext<18,9>(r_V_reg_1757.read());
}

void getPixelClassification_Stream::thread_out_pixel_TDATA() {
    out_pixel_TDATA = out_pixel_data_V_1_data_out.read();
}

void getPixelClassification_Stream::thread_out_pixel_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        out_pixel_TDATA_blk_n = out_pixel_data_V_1_state.read()[1];
    } else {
        out_pixel_TDATA_blk_n = ap_const_logic_1;
    }
}

void getPixelClassification_Stream::thread_out_pixel_TLAST() {
    out_pixel_TLAST = out_pixel_last_V_1_data_out.read();
}

void getPixelClassification_Stream::thread_out_pixel_TUSER() {
    out_pixel_TUSER = out_pixel_user_V_1_data_out.read();
}

void getPixelClassification_Stream::thread_out_pixel_TVALID() {
    out_pixel_TVALID = out_pixel_data_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_ack_in() {
    out_pixel_data_V_1_ack_in = out_pixel_data_V_1_state.read()[1];
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_ack_out() {
    out_pixel_data_V_1_ack_out = out_pixel_TREADY.read();
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_data_V_1_sel.read())) {
        out_pixel_data_V_1_data_out = out_pixel_data_V_1_payload_B.read();
    } else {
        out_pixel_data_V_1_data_out = out_pixel_data_V_1_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_load_A() {
    out_pixel_data_V_1_load_A = (out_pixel_data_V_1_state_cmp_full.read() & ~out_pixel_data_V_1_sel_wr.read());
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_load_B() {
    out_pixel_data_V_1_load_B = (out_pixel_data_V_1_sel_wr.read() & out_pixel_data_V_1_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_sel() {
    out_pixel_data_V_1_sel = out_pixel_data_V_1_sel_rd.read();
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_state_cmp_full() {
    out_pixel_data_V_1_state_cmp_full =  (sc_logic) ((!out_pixel_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_pixel_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_pixel_data_V_1_vld_in = ap_const_logic_1;
    } else {
        out_pixel_data_V_1_vld_in = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_out_pixel_data_V_1_vld_out() {
    out_pixel_data_V_1_vld_out = out_pixel_data_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_ack_in() {
    out_pixel_last_V_1_ack_in = out_pixel_last_V_1_state.read()[1];
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_ack_out() {
    out_pixel_last_V_1_ack_out = out_pixel_TREADY.read();
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_last_V_1_sel.read())) {
        out_pixel_last_V_1_data_out = out_pixel_last_V_1_payload_B.read();
    } else {
        out_pixel_last_V_1_data_out = out_pixel_last_V_1_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_load_A() {
    out_pixel_last_V_1_load_A = (out_pixel_last_V_1_state_cmp_full.read() & ~out_pixel_last_V_1_sel_wr.read());
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_load_B() {
    out_pixel_last_V_1_load_B = (out_pixel_last_V_1_sel_wr.read() & out_pixel_last_V_1_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_sel() {
    out_pixel_last_V_1_sel = out_pixel_last_V_1_sel_rd.read();
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_state_cmp_full() {
    out_pixel_last_V_1_state_cmp_full =  (sc_logic) ((!out_pixel_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_pixel_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_pixel_last_V_1_vld_in = ap_const_logic_1;
    } else {
        out_pixel_last_V_1_vld_in = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_out_pixel_last_V_1_vld_out() {
    out_pixel_last_V_1_vld_out = out_pixel_last_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_ack_in() {
    out_pixel_user_V_1_ack_in = out_pixel_user_V_1_state.read()[1];
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_ack_out() {
    out_pixel_user_V_1_ack_out = out_pixel_TREADY.read();
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_user_V_1_sel.read())) {
        out_pixel_user_V_1_data_out = out_pixel_user_V_1_payload_B.read();
    } else {
        out_pixel_user_V_1_data_out = out_pixel_user_V_1_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_load_A() {
    out_pixel_user_V_1_load_A = (out_pixel_user_V_1_state_cmp_full.read() & ~out_pixel_user_V_1_sel_wr.read());
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_load_B() {
    out_pixel_user_V_1_load_B = (out_pixel_user_V_1_sel_wr.read() & out_pixel_user_V_1_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_sel() {
    out_pixel_user_V_1_sel = out_pixel_user_V_1_sel_rd.read();
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_state_cmp_full() {
    out_pixel_user_V_1_state_cmp_full =  (sc_logic) ((!out_pixel_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_pixel_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_2119.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_pixel_user_V_1_vld_in = ap_const_logic_1;
    } else {
        out_pixel_user_V_1_vld_in = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_out_pixel_user_V_1_vld_out() {
    out_pixel_user_V_1_vld_out = out_pixel_user_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_p_Val2_1_cast_fu_927_p1() {
    p_Val2_1_cast_fu_927_p1 = esl_sext<31,28>(tmp_14_fu_919_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_1_fu_1309_p1() {
    p_Val2_1_fu_1309_p1 = esl_sext<32,29>(tmp_69_fu_1301_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_2_cast_fu_981_p1() {
    p_Val2_2_cast_fu_981_p1 = esl_sext<31,30>(tmp_22_fu_973_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_2_fu_1497_p1() {
    p_Val2_2_fu_1497_p1 = esl_sext<32,29>(tmp_83_fu_1489_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_4_cast_fu_1056_p1() {
    p_Val2_4_cast_fu_1056_p1 = esl_sext<31,28>(tmp_38_fu_1048_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_5_cast_fu_1110_p1() {
    p_Val2_5_cast_fu_1110_p1 = esl_sext<31,30>(tmp_49_fu_1102_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_6_cast_fu_1388_p1() {
    p_Val2_6_cast_fu_1388_p1 = esl_sext<31,28>(tmp_55_fu_1380_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_7_cast_fu_1442_p1() {
    p_Val2_7_cast_fu_1442_p1 = esl_sext<31,30>(tmp_59_fu_1434_p3.read());
}

void getPixelClassification_Stream::thread_p_Val2_s_fu_1250_p1() {
    p_Val2_s_fu_1250_p1 = esl_sext<32,29>(tmp_25_fu_1242_p3.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_8_fu_1689_p1() {
    p_color_array_stream_8_fu_1689_p1 = esl_sext<24,17>(p_color_array_stream_7_reg_2136.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage21.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage21.read(), ap_const_boolean_0))) {
            p_color_array_stream_s_address0 =  (sc_lv<3>) (tmp_6_fu_1684_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            p_color_array_stream_s_address0 =  (sc_lv<3>) (tmp_1_2_fu_571_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            p_color_array_stream_s_address0 =  (sc_lv<3>) (tmp_1_1_fu_448_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            p_color_array_stream_s_address0 =  (sc_lv<3>) (tmp_s_fu_379_p1.read());
        } else {
            p_color_array_stream_s_address0 =  (sc_lv<3>) ("XXX");
        }
    } else {
        p_color_array_stream_s_address0 =  (sc_lv<3>) ("XXX");
    }
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage21.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage21_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        p_color_array_stream_s_ce0 = ap_const_logic_1;
    } else {
        p_color_array_stream_s_ce0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_p_neg_i1_fu_899_p2() {
    p_neg_i1_fu_899_p2 = (!ap_const_lv21_0.is_01() || !tmp_2_i1_reg_1772.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_0) - sc_biguint<21>(tmp_2_i1_reg_1772.read()));
}

void getPixelClassification_Stream::thread_p_neg_i2_fu_1323_p2() {
    p_neg_i2_fu_1323_p2 = (!ap_const_lv21_0.is_01() || !tmp_2_i2_reg_1995.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_0) - sc_biguint<21>(tmp_2_i2_reg_1995.read()));
}

void getPixelClassification_Stream::thread_p_neg_i_fu_991_p2() {
    p_neg_i_fu_991_p2 = (!ap_const_lv21_0.is_01() || !tmp_2_i_reg_1843.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_0) - sc_biguint<21>(tmp_2_i_reg_1843.read()));
}

void getPixelClassification_Stream::thread_p_shl_i1_cast_fu_478_p1() {
    p_shl_i1_cast_fu_478_p1 = esl_sext<21,20>(p_shl_i1_fu_470_p3.read());
}

void getPixelClassification_Stream::thread_p_shl_i1_fu_470_p3() {
    p_shl_i1_fu_470_p3 = esl_concat<17,3>(tmp_9_fu_466_p1.read(), ap_const_lv3_0);
}

void getPixelClassification_Stream::thread_p_shl_i2_cast_fu_1145_p1() {
    p_shl_i2_cast_fu_1145_p1 = esl_sext<21,20>(p_shl_i2_fu_1137_p3.read());
}

void getPixelClassification_Stream::thread_p_shl_i2_fu_1137_p3() {
    p_shl_i2_fu_1137_p3 = esl_concat<17,3>(tmp_79_fu_1133_p1.read(), ap_const_lv3_0);
}

void getPixelClassification_Stream::thread_p_shl_i_cast_fu_614_p1() {
    p_shl_i_cast_fu_614_p1 = esl_sext<21,20>(p_shl_i_fu_606_p3.read());
}

void getPixelClassification_Stream::thread_p_shl_i_fu_606_p3() {
    p_shl_i_fu_606_p3 = esl_concat<17,3>(tmp_65_fu_602_p1.read(), ap_const_lv3_0);
}

void getPixelClassification_Stream::thread_pixelGreen_V_fu_398_p1() {
    pixelGreen_V_fu_398_p1 = in_pixel_data_V_0_data_out.read().range(8-1, 0);
}

void getPixelClassification_Stream::thread_pixelRed_V_fu_388_p4() {
    pixelRed_V_fu_388_p4 = in_pixel_data_V_0_data_out.read().range(23, 16);
}

void getPixelClassification_Stream::thread_powerSummation_V_2_fu_1504_p2() {
    powerSummation_V_2_fu_1504_p2 = (!tmp15_cast_fu_1501_p1.read().is_01() || !p_Val2_2_fu_1497_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp15_cast_fu_1501_p1.read()) + sc_bigint<32>(p_Val2_2_fu_1497_p1.read()));
}

void getPixelClassification_Stream::thread_powerSummation_V_fu_1257_p2() {
    powerSummation_V_fu_1257_p2 = (!tmp11_cast_fu_1254_p1.read().is_01() || !p_Val2_s_fu_1250_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp11_cast_fu_1254_p1.read()) + sc_bigint<32>(p_Val2_s_fu_1250_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_1_fu_494_p2() {
    r_V_1_fu_494_p2 = (!lhs_V_2_fu_488_p1.read().is_01() || !rhs_V_1_fu_491_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_2_fu_488_p1.read()) - sc_biguint<9>(rhs_V_1_fu_491_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_2_fu_525_p2() {
    r_V_2_fu_525_p2 = (!lhs_V_3_fu_518_p1.read().is_01() || !rhs_V_2_fu_521_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_3_fu_518_p1.read()) - sc_biguint<9>(rhs_V_2_fu_521_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_3_fu_561_p2() {
    r_V_3_fu_561_p2 = (!lhs_V_1_reg_1751.read().is_01() || !rhs_V_3_cast_fu_553_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_1_reg_1751.read()) - sc_biguint<9>(rhs_V_3_cast_fu_553_p3.read()));
}

void getPixelClassification_Stream::thread_r_V_4_fu_627_p2() {
    r_V_4_fu_627_p2 = (!lhs_V_2_reg_1779.read().is_01() || !rhs_V_4_fu_624_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_2_reg_1779.read()) - sc_biguint<9>(rhs_V_4_fu_624_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_5_fu_654_p2() {
    r_V_5_fu_654_p2 = (!lhs_V_3_reg_1796.read().is_01() || !rhs_V_5_fu_650_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_3_reg_1796.read()) - sc_biguint<9>(rhs_V_5_fu_650_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_6_fu_689_p2() {
    r_V_6_fu_689_p2 = (!lhs_V_1_reg_1751.read().is_01() || !rhs_V_6_cast_fu_681_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_1_reg_1751.read()) - sc_biguint<9>(rhs_V_6_cast_fu_681_p3.read()));
}

void getPixelClassification_Stream::thread_r_V_7_fu_698_p2() {
    r_V_7_fu_698_p2 = (!lhs_V_2_reg_1779.read().is_01() || !rhs_V_7_fu_694_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_2_reg_1779.read()) - sc_biguint<9>(rhs_V_7_fu_694_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_8_fu_707_p2() {
    r_V_8_fu_707_p2 = (!lhs_V_3_reg_1796.read().is_01() || !rhs_V_8_fu_703_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_3_reg_1796.read()) - sc_biguint<9>(rhs_V_8_fu_703_p1.read()));
}

void getPixelClassification_Stream::thread_r_V_fu_436_p2() {
    r_V_fu_436_p2 = (!lhs_V_1_fu_424_p1.read().is_01() || !rhs_V_cast_fu_428_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_1_fu_424_p1.read()) - sc_biguint<9>(rhs_V_cast_fu_428_p3.read()));
}

void getPixelClassification_Stream::thread_result_1_fu_592_p0() {
    result_1_fu_592_p0 =  (sc_lv<9>) (number_assign_3_cast_fu_589_p1.read());
}

void getPixelClassification_Stream::thread_result_1_fu_592_p1() {
    result_1_fu_592_p1 =  (sc_lv<9>) (number_assign_3_cast_fu_589_p1.read());
}

void getPixelClassification_Stream::thread_result_1_fu_592_p2() {
    result_1_fu_592_p2 = (!result_1_fu_592_p0.read().is_01() || !result_1_fu_592_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_1_fu_592_p0.read()) * sc_bigint<9>(result_1_fu_592_p1.read());
}

void getPixelClassification_Stream::thread_result_2_fu_1123_p0() {
    result_2_fu_1123_p0 =  (sc_lv<9>) (number_assign_6_cast_fu_1120_p1.read());
}

void getPixelClassification_Stream::thread_result_2_fu_1123_p1() {
    result_2_fu_1123_p1 =  (sc_lv<9>) (number_assign_6_cast_fu_1120_p1.read());
}

void getPixelClassification_Stream::thread_result_2_fu_1123_p2() {
    result_2_fu_1123_p2 = (!result_2_fu_1123_p0.read().is_01() || !result_2_fu_1123_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_2_fu_1123_p0.read()) * sc_bigint<9>(result_2_fu_1123_p1.read());
}

void getPixelClassification_Stream::thread_result_3_cast_fu_598_p1() {
    result_3_cast_fu_598_p1 = esl_sext<21,18>(result_1_fu_592_p2.read());
}

void getPixelClassification_Stream::thread_result_3_fu_636_p0() {
    result_3_fu_636_p0 =  (sc_lv<9>) (tmp_26_fu_632_p1.read());
}

void getPixelClassification_Stream::thread_result_3_fu_636_p1() {
    result_3_fu_636_p1 =  (sc_lv<9>) (tmp_26_fu_632_p1.read());
}

void getPixelClassification_Stream::thread_result_3_fu_636_p2() {
    result_3_fu_636_p2 = (!result_3_fu_636_p0.read().is_01() || !result_3_fu_636_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(result_3_fu_636_p0.read()) * sc_bigint<9>(result_3_fu_636_p1.read());
}

void getPixelClassification_Stream::thread_result_6_cast_fu_1129_p1() {
    result_6_cast_fu_1129_p1 = esl_sext<21,18>(result_2_fu_1123_p2.read());
}

void getPixelClassification_Stream::thread_result_6_fu_759_p0() {
    result_6_fu_759_p0 =  (sc_lv<9>) (tmp_42_fu_756_p1.read());
}

void getPixelClassification_Stream::thread_result_6_fu_759_p1() {
    result_6_fu_759_p1 =  (sc_lv<9>) (tmp_42_fu_756_p1.read());
}

void getPixelClassification_Stream::thread_result_6_fu_759_p2() {
    result_6_fu_759_p2 = (!result_6_fu_759_p0.read().is_01() || !result_6_fu_759_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(result_6_fu_759_p0.read()) * sc_bigint<9>(result_6_fu_759_p1.read());
}

void getPixelClassification_Stream::thread_result_cast_fu_462_p1() {
    result_cast_fu_462_p1 = esl_sext<21,18>(result_fu_456_p2.read());
}

void getPixelClassification_Stream::thread_result_fu_456_p0() {
    result_fu_456_p0 =  (sc_lv<9>) (number_assign_cast_fu_453_p1.read());
}

void getPixelClassification_Stream::thread_result_fu_456_p1() {
    result_fu_456_p1 =  (sc_lv<9>) (number_assign_cast_fu_453_p1.read());
}

void getPixelClassification_Stream::thread_result_fu_456_p2() {
    result_fu_456_p2 = (!result_fu_456_p0.read().is_01() || !result_fu_456_p1.read().is_01())? sc_lv<18>(): sc_bigint<9>(result_fu_456_p0.read()) * sc_bigint<9>(result_fu_456_p1.read());
}

void getPixelClassification_Stream::thread_result_s_fu_504_p0() {
    result_s_fu_504_p0 =  (sc_lv<9>) (tmp_7_fu_500_p1.read());
}

void getPixelClassification_Stream::thread_result_s_fu_504_p1() {
    result_s_fu_504_p1 =  (sc_lv<9>) (tmp_7_fu_500_p1.read());
}

void getPixelClassification_Stream::thread_result_s_fu_504_p2() {
    result_s_fu_504_p2 = (!result_s_fu_504_p0.read().is_01() || !result_s_fu_504_p1.read().is_01())? sc_lv<17>(): sc_bigint<9>(result_s_fu_504_p0.read()) * sc_bigint<9>(result_s_fu_504_p1.read());
}

void getPixelClassification_Stream::thread_rhs_V_1_fu_491_p1() {
    rhs_V_1_fu_491_p1 = esl_zext<9,8>(colorGreen_V_reg_1746.read());
}

void getPixelClassification_Stream::thread_rhs_V_2_fu_521_p1() {
    rhs_V_2_fu_521_p1 = esl_zext<9,8>(reg_369.read());
}

void getPixelClassification_Stream::thread_rhs_V_3_cast_fu_553_p3() {
    rhs_V_3_cast_fu_553_p3 = (!rhs_V_3_fu_541_p3.read()[0].is_01())? sc_lv<9>(): ((rhs_V_3_fu_541_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_rhs_V_3_fu_541_p3() {
    rhs_V_3_fu_541_p3 = p_color_array_stream_s_q0.read().range(16, 16);
}

void getPixelClassification_Stream::thread_rhs_V_4_fu_624_p1() {
    rhs_V_4_fu_624_p1 = esl_zext<9,8>(colorGreen_V_1_reg_1812.read());
}

void getPixelClassification_Stream::thread_rhs_V_5_fu_650_p1() {
    rhs_V_5_fu_650_p1 = esl_zext<9,8>(reg_369.read());
}

void getPixelClassification_Stream::thread_rhs_V_6_cast_fu_681_p3() {
    rhs_V_6_cast_fu_681_p3 = (!rhs_V_6_fu_669_p3.read()[0].is_01())? sc_lv<9>(): ((rhs_V_6_fu_669_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_rhs_V_6_fu_669_p3() {
    rhs_V_6_fu_669_p3 = p_color_array_stream_s_q0.read().range(16, 16);
}

void getPixelClassification_Stream::thread_rhs_V_7_fu_694_p1() {
    rhs_V_7_fu_694_p1 = esl_zext<9,8>(colorGreen_V_2_fu_677_p1.read());
}

void getPixelClassification_Stream::thread_rhs_V_8_fu_703_p1() {
    rhs_V_8_fu_703_p1 = esl_zext<9,8>(grp_fu_343_p4.read());
}

void getPixelClassification_Stream::thread_rhs_V_9_fu_1668_p2() {
    rhs_V_9_fu_1668_p2 = (!minimumDistanceIndex_8_fu_1635_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(minimumDistanceIndex_8_fu_1635_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void getPixelClassification_Stream::thread_rhs_V_cast_fu_428_p3() {
    rhs_V_cast_fu_428_p3 = (!rhs_V_fu_412_p3.read()[0].is_01())? sc_lv<9>(): ((rhs_V_fu_412_p3.read()[0].to_bool())? ap_const_lv9_FF: ap_const_lv9_0);
}

void getPixelClassification_Stream::thread_rhs_V_fu_412_p3() {
    rhs_V_fu_412_p3 = p_color_array_stream_s_q0.read().range(16, 16);
}

void getPixelClassification_Stream::thread_tmp10_fu_535_p1() {
    tmp10_fu_535_p1 = r_V_2_fu_525_p2.read();
}

void getPixelClassification_Stream::thread_tmp10_fu_535_p2() {
    tmp10_fu_535_p2 = (!ap_const_lv15_1D.is_01() || !tmp10_fu_535_p1.read().is_01())? sc_lv<15>(): sc_biguint<15>(ap_const_lv15_1D) * sc_bigint<9>(tmp10_fu_535_p1.read());
}

void getPixelClassification_Stream::thread_tmp11_cast_fu_1254_p1() {
    tmp11_cast_fu_1254_p1 = esl_sext<32,31>(tmp11_reg_1980.read());
}

void getPixelClassification_Stream::thread_tmp11_fu_985_p2() {
    tmp11_fu_985_p2 = (!p_Val2_1_cast_fu_927_p1.read().is_01() || !p_Val2_2_cast_fu_981_p1.read().is_01())? sc_lv<31>(): (sc_bigint<31>(p_Val2_1_cast_fu_927_p1.read()) + sc_bigint<31>(p_Val2_2_cast_fu_981_p1.read()));
}

void getPixelClassification_Stream::thread_tmp12_fu_663_p1() {
    tmp12_fu_663_p1 = r_V_5_fu_654_p2.read();
}

void getPixelClassification_Stream::thread_tmp12_fu_663_p2() {
    tmp12_fu_663_p2 = (!ap_const_lv15_1D.is_01() || !tmp12_fu_663_p1.read().is_01())? sc_lv<15>(): sc_biguint<15>(ap_const_lv15_1D) * sc_bigint<9>(tmp12_fu_663_p1.read());
}

void getPixelClassification_Stream::thread_tmp13_cast_fu_1313_p1() {
    tmp13_cast_fu_1313_p1 = esl_sext<32,31>(tmp13_reg_1990.read());
}

void getPixelClassification_Stream::thread_tmp13_fu_1114_p2() {
    tmp13_fu_1114_p2 = (!p_Val2_4_cast_fu_1056_p1.read().is_01() || !p_Val2_5_cast_fu_1110_p1.read().is_01())? sc_lv<31>(): (sc_bigint<31>(p_Val2_4_cast_fu_1056_p1.read()) + sc_bigint<31>(p_Val2_5_cast_fu_1110_p1.read()));
}

void getPixelClassification_Stream::thread_tmp14_fu_776_p1() {
    tmp14_fu_776_p1 = r_V_8_reg_1881.read();
}

void getPixelClassification_Stream::thread_tmp14_fu_776_p2() {
    tmp14_fu_776_p2 = (!ap_const_lv15_1D.is_01() || !tmp14_fu_776_p1.read().is_01())? sc_lv<15>(): sc_biguint<15>(ap_const_lv15_1D) * sc_bigint<9>(tmp14_fu_776_p1.read());
}

void getPixelClassification_Stream::thread_tmp15_cast_fu_1501_p1() {
    tmp15_cast_fu_1501_p1 = esl_sext<32,31>(tmp15_reg_2037.read());
}

void getPixelClassification_Stream::thread_tmp15_fu_1446_p2() {
    tmp15_fu_1446_p2 = (!p_Val2_6_cast_fu_1388_p1.read().is_01() || !p_Val2_7_cast_fu_1442_p1.read().is_01())? sc_lv<31>(): (sc_bigint<31>(p_Val2_6_cast_fu_1388_p1.read()) + sc_bigint<31>(p_Val2_7_cast_fu_1442_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_10_fu_1205_p3() {
    tmp_10_fu_1205_p3 = tmp_2_i1_reg_1772.read().range(20, 20);
}

void getPixelClassification_Stream::thread_tmp_10_i1_cast_fu_1212_p1() {
    tmp_10_i1_cast_fu_1212_p1 = esl_sext<21,20>(tmp_21_reg_1975.read());
}

void getPixelClassification_Stream::thread_tmp_10_i2_cast_fu_1459_p1() {
    tmp_10_i2_cast_fu_1459_p1 = esl_sext<21,20>(tmp_81_reg_2032.read());
}

void getPixelClassification_Stream::thread_tmp_10_i_cast_fu_1271_p1() {
    tmp_10_i_cast_fu_1271_p1 = esl_sext<21,20>(tmp_67_reg_1985.read());
}

void getPixelClassification_Stream::thread_tmp_11_fu_801_p1() {
    tmp_11_fu_801_p1 = esl_sext<20,19>(tmp_37_reg_1892.read());
}

void getPixelClassification_Stream::thread_tmp_11_i1_fu_1215_p2() {
    tmp_11_i1_fu_1215_p2 = (!ap_const_lv21_0.is_01() || !tmp_10_i1_cast_fu_1212_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_0) - sc_bigint<21>(tmp_10_i1_cast_fu_1212_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_11_i2_fu_1462_p2() {
    tmp_11_i2_fu_1462_p2 = (!ap_const_lv21_0.is_01() || !tmp_10_i2_cast_fu_1459_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_0) - sc_bigint<21>(tmp_10_i2_cast_fu_1459_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_11_i_fu_1274_p2() {
    tmp_11_i_fu_1274_p2 = (!ap_const_lv21_0.is_01() || !tmp_10_i_cast_fu_1271_p1.read().is_01())? sc_lv<21>(): (sc_biguint<21>(ap_const_lv21_0) - sc_bigint<21>(tmp_10_i_cast_fu_1271_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_12_fu_804_p3() {
    tmp_12_fu_804_p3 = (!tmp_34_reg_1790.read()[0].is_01())? sc_lv<20>(): ((tmp_34_reg_1790.read()[0].to_bool())? tmp_8_fu_797_p1.read(): tmp_11_fu_801_p1.read());
}

void getPixelClassification_Stream::thread_tmp_12_i1_cast_fu_1230_p1() {
    tmp_12_i1_cast_fu_1230_p1 = esl_sext<21,20>(tmp_23_fu_1221_p4.read());
}

void getPixelClassification_Stream::thread_tmp_12_i2_cast_fu_1477_p1() {
    tmp_12_i2_cast_fu_1477_p1 = esl_sext<21,20>(tmp_82_fu_1468_p4.read());
}

void getPixelClassification_Stream::thread_tmp_12_i_cast_fu_1289_p1() {
    tmp_12_i_cast_fu_1289_p1 = esl_sext<21,20>(tmp_68_fu_1280_p4.read());
}

void getPixelClassification_Stream::thread_tmp_13_fu_914_p3() {
    tmp_13_fu_914_p3 = (!tmp_34_reg_1790.read()[0].is_01())? sc_lv<20>(): ((tmp_34_reg_1790.read()[0].to_bool())? neg_ti1_reg_1929.read(): tmp_11_reg_1924.read());
}

void getPixelClassification_Stream::thread_tmp_14_fu_919_p3() {
    tmp_14_fu_919_p3 = esl_concat<20,8>(tmp_13_fu_914_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_14_i1_fu_1511_p1() {
    tmp_14_i1_fu_1511_p1 = esl_zext<32,12>(grp_fu_353_p4.read());
}

void getPixelClassification_Stream::thread_tmp_14_i2_fu_1611_p1() {
    tmp_14_i2_fu_1611_p1 = esl_zext<32,12>(grp_fu_353_p4.read());
}

void getPixelClassification_Stream::thread_tmp_14_i_fu_1565_p1() {
    tmp_14_i_fu_1565_p1 = esl_zext<32,12>(tmp_33_reg_2064.read());
}

void getPixelClassification_Stream::thread_tmp_16_fu_946_p1() {
    tmp_16_fu_946_p1 = esl_sext<22,18>(tmp_41_fu_936_p4.read());
}

void getPixelClassification_Stream::thread_tmp_17_fu_950_p1() {
    tmp_17_fu_950_p1 = esl_sext<22,18>(tmp_53_reg_1939.read());
}

void getPixelClassification_Stream::thread_tmp_18_fu_966_p3() {
    tmp_18_fu_966_p3 = (!tmp_39_reg_1837.read()[0].is_01())? sc_lv<22>(): ((tmp_39_reg_1837.read()[0].to_bool())? neg_ti2_fu_960_p2.read(): tmp_17_fu_950_p1.read());
}

void getPixelClassification_Stream::thread_tmp_1_1_fu_448_p1() {
    tmp_1_1_fu_448_p1 = esl_zext<64,3>(i_fu_442_p2.read());
}

void getPixelClassification_Stream::thread_tmp_1_2_fu_571_p1() {
    tmp_1_2_fu_571_p1 = esl_zext<64,3>(i_1_fu_566_p2.read());
}

void getPixelClassification_Stream::thread_tmp_20_fu_953_p3() {
    tmp_20_fu_953_p3 = (!tmp_39_reg_1837.read()[0].is_01())? sc_lv<22>(): ((tmp_39_reg_1837.read()[0].to_bool())? tmp_16_fu_946_p1.read(): tmp_17_fu_950_p1.read());
}

void getPixelClassification_Stream::thread_tmp_22_fu_973_p3() {
    tmp_22_fu_973_p3 = esl_concat<22,8>(tmp_18_fu_966_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_23_fu_1221_p4() {
    tmp_23_fu_1221_p4 = tmp_2_i1_reg_1772.read().range(20, 1);
}

void getPixelClassification_Stream::thread_tmp_24_fu_1293_p3() {
    tmp_24_fu_1293_p3 = (!tmp_66_fu_1264_p3.read()[0].is_01())? sc_lv<21>(): ((tmp_66_fu_1264_p3.read()[0].to_bool())? tmp_11_i_fu_1274_p2.read(): tmp_12_i_cast_fu_1289_p1.read());
}

void getPixelClassification_Stream::thread_tmp_25_fu_1242_p3() {
    tmp_25_fu_1242_p3 = esl_concat<21,8>(tmp_5_fu_1234_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_26_fu_632_p1() {
    tmp_26_fu_632_p1 = esl_sext<17,9>(r_V_4_fu_627_p2.read());
}

void getPixelClassification_Stream::thread_tmp_27_fu_729_p1() {
    tmp_27_fu_729_p1 = mul1_fu_723_p2.read().range(41-1, 0);
}

void getPixelClassification_Stream::thread_tmp_28_fu_1021_p1() {
    tmp_28_fu_1021_p1 = esl_sext<20,18>(tmp_72_fu_1011_p4.read());
}

void getPixelClassification_Stream::thread_tmp_29_fu_1025_p1() {
    tmp_29_fu_1025_p1 = esl_sext<20,19>(tmp_73_reg_1949.read());
}

void getPixelClassification_Stream::thread_tmp_2_1_fu_1568_p2() {
    tmp_2_1_fu_1568_p2 = (!tmp_14_i_fu_1565_p1.read().is_01() || !minimumDistance_2_fu_1555_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_14_i_fu_1565_p1.read()) < sc_bigint<32>(minimumDistance_2_fu_1555_p3.read()));
}

void getPixelClassification_Stream::thread_tmp_2_2_fu_1615_p2() {
    tmp_2_2_fu_1615_p2 = (!tmp_14_i2_fu_1611_p1.read().is_01() || !minimumDistance_2_1_fu_1603_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_14_i2_fu_1611_p1.read()) < sc_bigint<32>(minimumDistance_2_1_fu_1603_p3.read()));
}

void getPixelClassification_Stream::thread_tmp_2_fu_1515_p2() {
    tmp_2_fu_1515_p2 = (!tmp_14_i1_fu_1511_p1.read().is_01() || !minimumDistance_reg_242.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_14_i1_fu_1511_p1.read()) < sc_bigint<32>(minimumDistance_reg_242.read()));
}

void getPixelClassification_Stream::thread_tmp_2_i1_fu_482_p2() {
    tmp_2_i1_fu_482_p2 = (!p_shl_i1_cast_fu_478_p1.read().is_01() || !result_cast_fu_462_p1.read().is_01())? sc_lv<21>(): (sc_bigint<21>(p_shl_i1_cast_fu_478_p1.read()) - sc_bigint<21>(result_cast_fu_462_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_2_i2_fu_1149_p2() {
    tmp_2_i2_fu_1149_p2 = (!p_shl_i2_cast_fu_1145_p1.read().is_01() || !result_6_cast_fu_1129_p1.read().is_01())? sc_lv<21>(): (sc_bigint<21>(p_shl_i2_cast_fu_1145_p1.read()) - sc_bigint<21>(result_6_cast_fu_1129_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_2_i_fu_618_p2() {
    tmp_2_i_fu_618_p2 = (!p_shl_i_cast_fu_614_p1.read().is_01() || !result_3_cast_fu_598_p1.read().is_01())? sc_lv<21>(): (sc_bigint<21>(p_shl_i_cast_fu_614_p1.read()) - sc_bigint<21>(result_3_cast_fu_598_p1.read()));
}

void getPixelClassification_Stream::thread_tmp_30_fu_1041_p3() {
    tmp_30_fu_1041_p3 = (!tmp_71_reg_1855.read()[0].is_01())? sc_lv<20>(): ((tmp_71_reg_1855.read()[0].to_bool())? neg_ti3_fu_1035_p2.read(): tmp_29_fu_1025_p1.read());
}

void getPixelClassification_Stream::thread_tmp_32_fu_1095_p3() {
    tmp_32_fu_1095_p3 = (!tmp_74_reg_1902.read()[0].is_01())? sc_lv<22>(): ((tmp_74_reg_1902.read()[0].to_bool())? neg_ti4_fu_1089_p2.read(): tmp_43_fu_1079_p1.read());
}

void getPixelClassification_Stream::thread_tmp_35_fu_787_p4() {
    tmp_35_fu_787_p4 = neg_mul1_fu_782_p2.read().range(40, 23);
}

void getPixelClassification_Stream::thread_tmp_36_fu_1028_p3() {
    tmp_36_fu_1028_p3 = (!tmp_71_reg_1855.read()[0].is_01())? sc_lv<20>(): ((tmp_71_reg_1855.read()[0].to_bool())? tmp_28_fu_1021_p1.read(): tmp_29_fu_1025_p1.read());
}

void getPixelClassification_Stream::thread_tmp_38_fu_1048_p3() {
    tmp_38_fu_1048_p3 = esl_concat<20,8>(tmp_30_fu_1041_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_3_fu_1678_p2() {
    tmp_3_fu_1678_p2 = (!lhs_V_fu_1674_p1.read().is_01() || !rhs_V_9_fu_1668_p2.read().is_01())? sc_lv<1>(): sc_lv<1>(lhs_V_fu_1674_p1.read() == rhs_V_9_fu_1668_p2.read());
}

void getPixelClassification_Stream::thread_tmp_40_fu_1075_p1() {
    tmp_40_fu_1075_p1 = esl_sext<22,18>(tmp_75_fu_1065_p4.read());
}

void getPixelClassification_Stream::thread_tmp_41_fu_936_p4() {
    tmp_41_fu_936_p4 = neg_mul2_fu_931_p2.read().range(44, 27);
}

void getPixelClassification_Stream::thread_tmp_42_fu_756_p1() {
    tmp_42_fu_756_p1 = esl_sext<17,9>(r_V_7_reg_1876.read());
}

void getPixelClassification_Stream::thread_tmp_43_fu_1079_p1() {
    tmp_43_fu_1079_p1 = esl_sext<22,18>(tmp_76_reg_1959.read());
}

void getPixelClassification_Stream::thread_tmp_44_fu_1373_p3() {
    tmp_44_fu_1373_p3 = (!tmp_85_reg_1913.read()[0].is_01())? sc_lv<20>(): ((tmp_85_reg_1913.read()[0].to_bool())? neg_ti8_fu_1367_p2.read(): tmp_52_fu_1357_p1.read());
}

void getPixelClassification_Stream::thread_tmp_46_fu_1427_p3() {
    tmp_46_fu_1427_p3 = (!tmp_88_reg_1969.read()[0].is_01())? sc_lv<22>(): ((tmp_88_reg_1969.read()[0].to_bool())? neg_ti_fu_1421_p2.read(): tmp_57_fu_1411_p1.read());
}

void getPixelClassification_Stream::thread_tmp_48_fu_1082_p3() {
    tmp_48_fu_1082_p3 = (!tmp_74_reg_1902.read()[0].is_01())? sc_lv<22>(): ((tmp_74_reg_1902.read()[0].to_bool())? tmp_40_fu_1075_p1.read(): tmp_43_fu_1079_p1.read());
}

void getPixelClassification_Stream::thread_tmp_49_fu_1102_p3() {
    tmp_49_fu_1102_p3 = esl_concat<22,8>(tmp_32_fu_1095_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_4_1_fu_1574_p2() {
    tmp_4_1_fu_1574_p2 = (!tmp_33_reg_2064.read().is_01() || !ap_const_lv12_13B.is_01())? sc_lv<1>(): (sc_biguint<12>(tmp_33_reg_2064.read()) < sc_biguint<12>(ap_const_lv12_13B));
}

void getPixelClassification_Stream::thread_tmp_50_fu_1481_p3() {
    tmp_50_fu_1481_p3 = (!tmp_80_fu_1452_p3.read()[0].is_01())? sc_lv<21>(): ((tmp_80_fu_1452_p3.read()[0].to_bool())? tmp_11_i2_fu_1462_p2.read(): tmp_12_i2_cast_fu_1477_p1.read());
}

void getPixelClassification_Stream::thread_tmp_51_fu_1353_p1() {
    tmp_51_fu_1353_p1 = esl_sext<20,18>(tmp_86_fu_1343_p4.read());
}

void getPixelClassification_Stream::thread_tmp_52_fu_1357_p1() {
    tmp_52_fu_1357_p1 = esl_sext<20,19>(tmp_87_reg_2007.read());
}

void getPixelClassification_Stream::thread_tmp_54_fu_1360_p3() {
    tmp_54_fu_1360_p3 = (!tmp_85_reg_1913.read()[0].is_01())? sc_lv<20>(): ((tmp_85_reg_1913.read()[0].to_bool())? tmp_51_fu_1353_p1.read(): tmp_52_fu_1357_p1.read());
}

void getPixelClassification_Stream::thread_tmp_55_fu_1380_p3() {
    tmp_55_fu_1380_p3 = esl_concat<20,8>(tmp_44_fu_1373_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_56_fu_1407_p1() {
    tmp_56_fu_1407_p1 = esl_sext<22,18>(tmp_89_fu_1397_p4.read());
}

void getPixelClassification_Stream::thread_tmp_57_fu_1411_p1() {
    tmp_57_fu_1411_p1 = esl_sext<22,18>(tmp_90_reg_2017.read());
}

void getPixelClassification_Stream::thread_tmp_58_fu_1414_p3() {
    tmp_58_fu_1414_p3 = (!tmp_88_reg_1969.read()[0].is_01())? sc_lv<22>(): ((tmp_88_reg_1969.read()[0].to_bool())? tmp_56_fu_1407_p1.read(): tmp_57_fu_1411_p1.read());
}

void getPixelClassification_Stream::thread_tmp_59_fu_1434_p3() {
    tmp_59_fu_1434_p3 = esl_concat<22,8>(tmp_46_fu_1427_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_5_fu_1234_p3() {
    tmp_5_fu_1234_p3 = (!tmp_10_fu_1205_p3.read()[0].is_01())? sc_lv<21>(): ((tmp_10_fu_1205_p3.read()[0].to_bool())? tmp_11_i1_fu_1215_p2.read(): tmp_12_i1_cast_fu_1230_p1.read());
}

void getPixelClassification_Stream::thread_tmp_5_i1_fu_712_p3() {
    tmp_5_i1_fu_712_p3 = esl_concat<17,3>(result_s_reg_1785.read(), ap_const_lv3_0);
}

void getPixelClassification_Stream::thread_tmp_5_i2_fu_1155_p3() {
    tmp_5_i2_fu_1155_p3 = esl_concat<17,3>(result_6_reg_1908.read(), ap_const_lv3_0);
}

void getPixelClassification_Stream::thread_tmp_5_i_fu_836_p3() {
    tmp_5_i_fu_836_p3 = esl_concat<17,3>(result_3_reg_1850.read(), ap_const_lv3_0);
}

void getPixelClassification_Stream::thread_tmp_65_fu_602_p1() {
    tmp_65_fu_602_p1 = result_1_fu_592_p2.read().range(17-1, 0);
}

void getPixelClassification_Stream::thread_tmp_66_fu_1264_p3() {
    tmp_66_fu_1264_p3 = tmp_2_i_reg_1843.read().range(20, 20);
}

void getPixelClassification_Stream::thread_tmp_68_fu_1280_p4() {
    tmp_68_fu_1280_p4 = tmp_2_i_reg_1843.read().range(20, 1);
}

void getPixelClassification_Stream::thread_tmp_69_fu_1301_p3() {
    tmp_69_fu_1301_p3 = esl_concat<21,8>(tmp_24_fu_1293_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_6_fu_1684_p1() {
    tmp_6_fu_1684_p1 = esl_sext<64,32>(minimumDistanceIndex_8_fu_1635_p3.read());
}

void getPixelClassification_Stream::thread_tmp_70_fu_853_p1() {
    tmp_70_fu_853_p1 = mul4_fu_847_p2.read().range(41-1, 0);
}

void getPixelClassification_Stream::thread_tmp_72_fu_1011_p4() {
    tmp_72_fu_1011_p4 = neg_mul4_fu_1006_p2.read().range(40, 23);
}

void getPixelClassification_Stream::thread_tmp_75_fu_1065_p4() {
    tmp_75_fu_1065_p4 = neg_mul5_fu_1060_p2.read().range(44, 27);
}

void getPixelClassification_Stream::thread_tmp_79_fu_1133_p1() {
    tmp_79_fu_1133_p1 = result_2_fu_1123_p2.read().range(17-1, 0);
}

void getPixelClassification_Stream::thread_tmp_7_fu_500_p1() {
    tmp_7_fu_500_p1 = esl_sext<17,9>(r_V_1_fu_494_p2.read());
}

void getPixelClassification_Stream::thread_tmp_80_fu_1452_p3() {
    tmp_80_fu_1452_p3 = tmp_2_i2_reg_1995.read().range(20, 20);
}

void getPixelClassification_Stream::thread_tmp_82_fu_1468_p4() {
    tmp_82_fu_1468_p4 = tmp_2_i2_reg_1995.read().range(20, 1);
}

void getPixelClassification_Stream::thread_tmp_83_fu_1489_p3() {
    tmp_83_fu_1489_p3 = esl_concat<21,8>(tmp_50_fu_1481_p3.read(), ap_const_lv8_0);
}

void getPixelClassification_Stream::thread_tmp_84_fu_1172_p1() {
    tmp_84_fu_1172_p1 = mul2_fu_1166_p2.read().range(41-1, 0);
}

void getPixelClassification_Stream::thread_tmp_86_fu_1343_p4() {
    tmp_86_fu_1343_p4 = neg_mul3_fu_1338_p2.read().range(40, 23);
}

void getPixelClassification_Stream::thread_tmp_89_fu_1397_p4() {
    tmp_89_fu_1397_p4 = neg_mul_fu_1392_p2.read().range(44, 27);
}

void getPixelClassification_Stream::thread_tmp_8_fu_797_p1() {
    tmp_8_fu_797_p1 = esl_sext<20,18>(tmp_35_fu_787_p4.read());
}

void getPixelClassification_Stream::thread_tmp_91_fu_1652_p1() {
    tmp_91_fu_1652_p1 = i_2_fu_1647_p2.read().range(2-1, 0);
}

void getPixelClassification_Stream::thread_tmp_9_fu_466_p1() {
    tmp_9_fu_466_p1 = result_fu_456_p2.read().range(17-1, 0);
}

void getPixelClassification_Stream::thread_tmp_fu_1662_p2() {
    tmp_fu_1662_p2 = (!minimumDistanceIndex_8_fu_1635_p3.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<1>(): (sc_bigint<32>(minimumDistanceIndex_8_fu_1635_p3.read()) < sc_bigint<32>(ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_tmp_s_fu_379_p1() {
    tmp_s_fu_379_p1 = esl_zext<64,2>(ap_phi_mux_minimumDistanceIndex_9_phi_fu_231_p6.read());
}

void getPixelClassification_Stream::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reset_idle_pp0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            }
            break;
        case 2048 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage10_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            }
            break;
        case 4096 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage11_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            }
            break;
        case 8192 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage12_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            }
            break;
        case 16384 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage13_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage14_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            }
            break;
        case 65536 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage15_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            }
            break;
        case 131072 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage16_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            }
            break;
        case 262144 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage17_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            }
            break;
        case 524288 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage18_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            }
            break;
        case 1048576 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage19_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            }
            break;
        case 2097152 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage20_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            }
            break;
        case 4194304 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage21_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            }
            break;
        case 8388608 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage22_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            }
            break;
        case 16777216 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage23_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void getPixelClassification_Stream::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_TUSER\" :  \"" << in_pixel_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_TVALID\" :  \"" << in_pixel_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_pixel_TREADY\" :  \"" << in_pixel_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_TLAST\" :  \"" << in_pixel_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_TDATA\" :  \"" << in_pixel_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_TUSER\" :  \"" << out_pixel_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_TVALID\" :  \"" << out_pixel_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_pixel_TREADY\" :  \"" << out_pixel_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_TLAST\" :  \"" << out_pixel_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_TDATA\" :  \"" << out_pixel_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_switch_V\" :  \"" << in_switch_V.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

