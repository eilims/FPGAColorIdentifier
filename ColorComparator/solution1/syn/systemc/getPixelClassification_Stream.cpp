// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getPixelClassification_Stream.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getPixelClassification_Stream::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getPixelClassification_Stream::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> getPixelClassification_Stream::ap_ST_fsm_state1 = "1";
const sc_lv<2> getPixelClassification_Stream::ap_ST_fsm_pp0_stage0 = "10";
const bool getPixelClassification_Stream::ap_const_boolean_1 = true;
const sc_lv<1> getPixelClassification_Stream::ap_const_lv1_0 = "0";
const sc_lv<1> getPixelClassification_Stream::ap_const_lv1_1 = "1";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_0 = "00";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_2 = "10";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_3 = "11";
const sc_lv<2> getPixelClassification_Stream::ap_const_lv2_1 = "1";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_1 = "1";
const bool getPixelClassification_Stream::ap_const_boolean_0 = false;
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_2 = "10";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_3 = "11";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_4 = "100";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_5 = "101";
const sc_lv<32> getPixelClassification_Stream::ap_const_lv32_7FFFFFFF = "1111111111111111111111111111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FFFF = "1111111111111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF00FF = "111111110000000011111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FFFF00 = "111111111111111100000000";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF00 = "1111111100000000";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF = "11111111";
const sc_lv<24> getPixelClassification_Stream::ap_const_lv24_FF0000 = "111111110000000000000000";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_1 = "1";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_3 = "11";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_6 = "110";
const sc_lv<3> getPixelClassification_Stream::ap_const_lv3_2 = "10";
const sc_lv<12> getPixelClassification_Stream::ap_const_lv12_109 = "100001001";

getPixelClassification_Stream::getPixelClassification_Stream(sc_module_name name) : sc_module(name), mVcdFile(0) {
    p_color_array_stream_s_U = new getPixelClassificcud("p_color_array_stream_s_U");
    p_color_array_stream_s_U->clk(ap_clk);
    p_color_array_stream_s_U->reset(ap_rst_n_inv);
    p_color_array_stream_s_U->address0(p_color_array_stream_s_address0);
    p_color_array_stream_s_U->ce0(p_color_array_stream_s_ce0);
    p_color_array_stream_s_U->q0(p_color_array_stream_s_q0);
    p_color_array_stream_s_U->address1(p_color_array_stream_s_address1);
    p_color_array_stream_s_U->ce1(p_color_array_stream_s_ce1);
    p_color_array_stream_s_U->q1(p_color_array_stream_s_q1);
    p_color_array_stream_s_U->address2(p_color_array_stream_s_address2);
    p_color_array_stream_s_U->ce2(p_color_array_stream_s_ce2);
    p_color_array_stream_s_U->q2(p_color_array_stream_s_q2);
    grp_getColorDistance_Str_fu_229 = new getColorDistance_Str("grp_getColorDistance_Str_fu_229");
    grp_getColorDistance_Str_fu_229->ap_clk(ap_clk);
    grp_getColorDistance_Str_fu_229->ap_rst(ap_rst_n_inv);
    grp_getColorDistance_Str_fu_229->ap_start(grp_getColorDistance_Str_fu_229_ap_start);
    grp_getColorDistance_Str_fu_229->ap_done(grp_getColorDistance_Str_fu_229_ap_done);
    grp_getColorDistance_Str_fu_229->ap_idle(grp_getColorDistance_Str_fu_229_ap_idle);
    grp_getColorDistance_Str_fu_229->ap_ready(grp_getColorDistance_Str_fu_229_ap_ready);
    grp_getColorDistance_Str_fu_229->pixel_V_TVALID(ap_var_for_const0);
    grp_getColorDistance_Str_fu_229->ap_ce(grp_getColorDistance_Str_fu_229_ap_ce);
    grp_getColorDistance_Str_fu_229->pixel_V_TDATA(ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4);
    grp_getColorDistance_Str_fu_229->pixel_V_TREADY(grp_getColorDistance_Str_fu_229_pixel_V_TREADY);
    grp_getColorDistance_Str_fu_229->color_V(p_color_array_stream_1_reg_473);
    grp_getColorDistance_Str_fu_229->ap_return(grp_getColorDistance_Str_fu_229_ap_return);
    grp_getColorDistance_Str_fu_229->pixel_V_TDATA_blk_n(grp_getColorDistance_Str_fu_229_pixel_V_TDATA_blk_n);
    grp_getColorDistance_Str_fu_236 = new getColorDistance_Str("grp_getColorDistance_Str_fu_236");
    grp_getColorDistance_Str_fu_236->ap_clk(ap_clk);
    grp_getColorDistance_Str_fu_236->ap_rst(ap_rst_n_inv);
    grp_getColorDistance_Str_fu_236->ap_start(grp_getColorDistance_Str_fu_236_ap_start);
    grp_getColorDistance_Str_fu_236->ap_done(grp_getColorDistance_Str_fu_236_ap_done);
    grp_getColorDistance_Str_fu_236->ap_idle(grp_getColorDistance_Str_fu_236_ap_idle);
    grp_getColorDistance_Str_fu_236->ap_ready(grp_getColorDistance_Str_fu_236_ap_ready);
    grp_getColorDistance_Str_fu_236->pixel_V_TVALID(ap_var_for_const0);
    grp_getColorDistance_Str_fu_236->ap_ce(grp_getColorDistance_Str_fu_236_ap_ce);
    grp_getColorDistance_Str_fu_236->pixel_V_TDATA(ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4);
    grp_getColorDistance_Str_fu_236->pixel_V_TREADY(grp_getColorDistance_Str_fu_236_pixel_V_TREADY);
    grp_getColorDistance_Str_fu_236->color_V(p_color_array_stream_3_reg_478);
    grp_getColorDistance_Str_fu_236->ap_return(grp_getColorDistance_Str_fu_236_ap_return);
    grp_getColorDistance_Str_fu_236->pixel_V_TDATA_blk_n(grp_getColorDistance_Str_fu_236_pixel_V_TDATA_blk_n);
    grp_getColorDistance_Str_fu_243 = new getColorDistance_Str("grp_getColorDistance_Str_fu_243");
    grp_getColorDistance_Str_fu_243->ap_clk(ap_clk);
    grp_getColorDistance_Str_fu_243->ap_rst(ap_rst_n_inv);
    grp_getColorDistance_Str_fu_243->ap_start(grp_getColorDistance_Str_fu_243_ap_start);
    grp_getColorDistance_Str_fu_243->ap_done(grp_getColorDistance_Str_fu_243_ap_done);
    grp_getColorDistance_Str_fu_243->ap_idle(grp_getColorDistance_Str_fu_243_ap_idle);
    grp_getColorDistance_Str_fu_243->ap_ready(grp_getColorDistance_Str_fu_243_ap_ready);
    grp_getColorDistance_Str_fu_243->pixel_V_TVALID(ap_var_for_const0);
    grp_getColorDistance_Str_fu_243->ap_ce(grp_getColorDistance_Str_fu_243_ap_ce);
    grp_getColorDistance_Str_fu_243->pixel_V_TDATA(in_pixel_V5_phi_reg_188);
    grp_getColorDistance_Str_fu_243->pixel_V_TREADY(grp_getColorDistance_Str_fu_243_pixel_V_TREADY);
    grp_getColorDistance_Str_fu_243->color_V(p_color_array_stream_5_reg_493);
    grp_getColorDistance_Str_fu_243->ap_return(grp_getColorDistance_Str_fu_243_ap_return);
    grp_getColorDistance_Str_fu_243->pixel_V_TDATA_blk_n(grp_getColorDistance_Str_fu_243_pixel_V_TDATA_blk_n);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_143 );
    sensitive << ( ap_enable_reg_pp0_iter21 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_143 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_block_state22_io );
    sensitive << ( ap_block_state23_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_143 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_block_state22_io );
    sensitive << ( ap_block_state23_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter14);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter15);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter16);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter17);

    SC_METHOD(thread_ap_block_state20_pp0_stage0_iter18);

    SC_METHOD(thread_ap_block_state21_pp0_stage0_iter19);

    SC_METHOD(thread_ap_block_state22_io);
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_predicate_op131_write_state22 );
    sensitive << ( ap_predicate_op132_write_state22 );
    sensitive << ( ap_predicate_op133_write_state22 );
    sensitive << ( ap_predicate_op134_write_state22 );
    sensitive << ( ap_predicate_op135_write_state22 );
    sensitive << ( ap_predicate_op136_write_state22 );
    sensitive << ( ap_predicate_op137_write_state22 );
    sensitive << ( ap_predicate_op138_write_state22 );

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter20);

    SC_METHOD(thread_ap_block_state23_io);
    sensitive << ( out_pixel_V_1_ack_in );
    sensitive << ( ap_predicate_op147_write_state23 );
    sensitive << ( ap_predicate_op149_write_state23 );
    sensitive << ( ap_predicate_op151_write_state23 );
    sensitive << ( ap_predicate_op153_write_state23 );
    sensitive << ( ap_predicate_op155_write_state23 );
    sensitive << ( ap_predicate_op157_write_state23 );
    sensitive << ( ap_predicate_op159_write_state23 );
    sensitive << ( ap_predicate_op161_write_state23 );

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter21);
    sensitive << ( out_pixel_V_1_ack_in );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);
    sensitive << ( in_pixel_V_0_vld_out );
    sensitive << ( do_init_reg_143 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_165);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_condition_501);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter14 );
    sensitive << ( ap_enable_reg_pp0_iter15 );
    sensitive << ( ap_enable_reg_pp0_iter16 );
    sensitive << ( ap_enable_reg_pp0_iter17 );
    sensitive << ( ap_enable_reg_pp0_iter18 );

    SC_METHOD(thread_ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_reg_pp0_iter1_do_init_reg_143 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6 );
    sensitive << ( ap_phi_reg_pp0_iter2_in_pixel_V5_phi_reg_188 );

    SC_METHOD(thread_ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( in_pixel_V5_rewind_reg_174 );
    sensitive << ( in_pixel_V5_phi_reg_188 );
    sensitive << ( ap_reg_pp0_iter2_exitcond_reg_464 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_phi_mux_minimumDistance4_phi_fu_205_p6);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( minimumDistance4_reg_201 );
    sensitive << ( ap_reg_pp0_iter18_exitcond_reg_464 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( minimumDistance_2_2_fu_430_p3 );

    SC_METHOD(thread_ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );
    sensitive << ( minimumDistanceIndex_3_reg_215 );

    SC_METHOD(thread_ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6);
    sensitive << ( exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_9_reg_159 );
    sensitive << ( tmp_4_reg_459 );
    sensitive << ( ap_condition_165 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_in_pixel_V5_phi_reg_188);

    SC_METHOD(thread_ap_predicate_op131_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op132_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op133_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op134_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op135_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op136_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op137_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op138_write_state22);
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op147_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op149_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op151_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op153_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op155_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op157_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op159_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_predicate_op161_write_state23);
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_ap_reset_idle_pp0);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_exitcond_fu_280_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( i_2_fu_270_p2 );

    SC_METHOD(thread_grp_getColorDistance_Str_fu_229_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_getColorDistance_Str_fu_229_ap_start);
    sensitive << ( ap_reg_grp_getColorDistance_Str_fu_229_ap_start );

    SC_METHOD(thread_grp_getColorDistance_Str_fu_236_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_getColorDistance_Str_fu_236_ap_start);
    sensitive << ( ap_reg_grp_getColorDistance_Str_fu_236_ap_start );

    SC_METHOD(thread_grp_getColorDistance_Str_fu_243_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_getColorDistance_Str_fu_243_ap_start);
    sensitive << ( ap_reg_grp_getColorDistance_Str_fu_243_ap_start );

    SC_METHOD(thread_i_1_cast_fu_391_p1);
    sensitive << ( ap_reg_pp0_iter18_i_1_reg_483 );

    SC_METHOD(thread_i_1_fu_286_p2);
    sensitive << ( minimumDistanceIndex_reg_439 );

    SC_METHOD(thread_i_2_fu_270_p2);
    sensitive << ( minimumDistanceIndex_fu_250_p1 );

    SC_METHOD(thread_i_cast_fu_374_p1);
    sensitive << ( ap_reg_pp0_iter18_i_reg_449 );

    SC_METHOD(thread_i_fu_259_p2);
    sensitive << ( minimumDistanceIndex_fu_250_p1 );

    SC_METHOD(thread_in_pixel_V_0_ack_in);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_in_pixel_V_0_ack_out);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( do_init_reg_143 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_in_pixel_V_0_data_out);
    sensitive << ( in_pixel_V_0_payload_A );
    sensitive << ( in_pixel_V_0_payload_B );
    sensitive << ( in_pixel_V_0_sel );

    SC_METHOD(thread_in_pixel_V_0_load_A);
    sensitive << ( in_pixel_V_0_sel_wr );
    sensitive << ( in_pixel_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_V_0_load_B);
    sensitive << ( in_pixel_V_0_sel_wr );
    sensitive << ( in_pixel_V_0_state_cmp_full );

    SC_METHOD(thread_in_pixel_V_0_sel);
    sensitive << ( in_pixel_V_0_sel_rd );

    SC_METHOD(thread_in_pixel_V_0_state_cmp_full);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_in_pixel_V_0_vld_in);
    sensitive << ( in_pixel_V_TVALID );

    SC_METHOD(thread_in_pixel_V_0_vld_out);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_in_pixel_V_TDATA_blk_n);
    sensitive << ( in_pixel_V_0_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( do_init_reg_143 );

    SC_METHOD(thread_in_pixel_V_TREADY);
    sensitive << ( in_pixel_V_0_state );

    SC_METHOD(thread_minimumDistanceIndex_1_fu_360_p3);
    sensitive << ( tmp_2_reg_515 );
    sensitive << ( ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6 );
    sensitive << ( minimumDistanceIndex_4_fu_356_p1 );

    SC_METHOD(thread_minimumDistanceIndex_2_fu_367_p3);
    sensitive << ( tmp_1_reg_510 );
    sensitive << ( ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6 );
    sensitive << ( minimumDistanceIndex_1_fu_360_p3 );

    SC_METHOD(thread_minimumDistanceIndex_4_fu_356_p1);
    sensitive << ( ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_159 );

    SC_METHOD(thread_minimumDistanceIndex_5_fu_377_p3);
    sensitive << ( tmp_2_1_reg_525 );
    sensitive << ( i_cast_fu_374_p1 );
    sensitive << ( minimumDistanceIndex_2_fu_367_p3 );

    SC_METHOD(thread_minimumDistanceIndex_6_fu_384_p3);
    sensitive << ( tmp_1_1_reg_520 );
    sensitive << ( minimumDistanceIndex_2_fu_367_p3 );
    sensitive << ( minimumDistanceIndex_5_fu_377_p3 );

    SC_METHOD(thread_minimumDistanceIndex_7_fu_407_p3);
    sensitive << ( tmp_2_2_fu_402_p2 );
    sensitive << ( i_1_cast_fu_391_p1 );
    sensitive << ( minimumDistanceIndex_6_fu_384_p3 );

    SC_METHOD(thread_minimumDistanceIndex_8_fu_422_p3);
    sensitive << ( minimumDistanceIndex_6_fu_384_p3 );
    sensitive << ( tmp_1_2_fu_397_p2 );
    sensitive << ( minimumDistanceIndex_7_fu_407_p3 );

    SC_METHOD(thread_minimumDistanceIndex_fu_250_p1);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6 );

    SC_METHOD(thread_minimumDistance_1_1_fu_340_p3);
    sensitive << ( tmp_2_1_fu_335_p2 );
    sensitive << ( minimumDistance_4_1_s_fu_326_p1 );
    sensitive << ( minimumDistance_2_fu_318_p3 );

    SC_METHOD(thread_minimumDistance_1_2_fu_415_p3);
    sensitive << ( minimumDistance_2_1_reg_530 );
    sensitive << ( minimumDistance_4_2_s_fu_394_p1 );
    sensitive << ( tmp_2_2_fu_402_p2 );

    SC_METHOD(thread_minimumDistance_1_fu_310_p3);
    sensitive << ( tmp_2_fu_305_p2 );
    sensitive << ( ap_phi_mux_minimumDistance4_phi_fu_205_p6 );
    sensitive << ( minimumDistance_4_ex_fu_296_p1 );

    SC_METHOD(thread_minimumDistance_2_1_fu_348_p3);
    sensitive << ( tmp_1_1_fu_329_p2 );
    sensitive << ( minimumDistance_2_fu_318_p3 );
    sensitive << ( minimumDistance_1_1_fu_340_p3 );

    SC_METHOD(thread_minimumDistance_2_2_fu_430_p3);
    sensitive << ( minimumDistance_2_1_reg_530 );
    sensitive << ( tmp_1_2_fu_397_p2 );
    sensitive << ( minimumDistance_1_2_fu_415_p3 );

    SC_METHOD(thread_minimumDistance_2_fu_318_p3);
    sensitive << ( tmp_1_fu_299_p2 );
    sensitive << ( ap_phi_mux_minimumDistance4_phi_fu_205_p6 );
    sensitive << ( minimumDistance_1_fu_310_p3 );

    SC_METHOD(thread_minimumDistance_4_1_s_fu_326_p1);
    sensitive << ( minimumDistance_4_1_reg_504 );

    SC_METHOD(thread_minimumDistance_4_2_s_fu_394_p1);
    sensitive << ( minimumDistance_4_2_reg_537 );

    SC_METHOD(thread_minimumDistance_4_ex_fu_296_p1);
    sensitive << ( minimumDistance_4_reg_498 );

    SC_METHOD(thread_out_pixel_V_1_ack_in);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_out_pixel_V_1_ack_out);
    sensitive << ( out_pixel_V_TREADY );

    SC_METHOD(thread_out_pixel_V_1_data_in);
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_predicate_op131_write_state22 );
    sensitive << ( ap_predicate_op132_write_state22 );
    sensitive << ( ap_predicate_op133_write_state22 );
    sensitive << ( ap_predicate_op134_write_state22 );
    sensitive << ( ap_predicate_op135_write_state22 );
    sensitive << ( ap_predicate_op136_write_state22 );
    sensitive << ( ap_predicate_op137_write_state22 );
    sensitive << ( ap_predicate_op138_write_state22 );
    sensitive << ( ap_reg_pp0_iter19_in_pixel_V5_phi_reg_188 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_pixel_V_1_data_out);
    sensitive << ( out_pixel_V_1_payload_A );
    sensitive << ( out_pixel_V_1_payload_B );
    sensitive << ( out_pixel_V_1_sel );

    SC_METHOD(thread_out_pixel_V_1_load_A);
    sensitive << ( out_pixel_V_1_sel_wr );
    sensitive << ( out_pixel_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_V_1_load_B);
    sensitive << ( out_pixel_V_1_sel_wr );
    sensitive << ( out_pixel_V_1_state_cmp_full );

    SC_METHOD(thread_out_pixel_V_1_sel);
    sensitive << ( out_pixel_V_1_sel_rd );

    SC_METHOD(thread_out_pixel_V_1_state_cmp_full);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_out_pixel_V_1_vld_in);
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_predicate_op131_write_state22 );
    sensitive << ( ap_predicate_op132_write_state22 );
    sensitive << ( ap_predicate_op133_write_state22 );
    sensitive << ( ap_predicate_op134_write_state22 );
    sensitive << ( ap_predicate_op135_write_state22 );
    sensitive << ( ap_predicate_op136_write_state22 );
    sensitive << ( ap_predicate_op137_write_state22 );
    sensitive << ( ap_predicate_op138_write_state22 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_out_pixel_V_1_vld_out);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_out_pixel_V_TDATA);
    sensitive << ( out_pixel_V_1_data_out );

    SC_METHOD(thread_out_pixel_V_TDATA_blk_n);
    sensitive << ( out_pixel_V_1_state );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter20 );
    sensitive << ( ap_reg_pp0_iter19_exitcond_reg_464 );
    sensitive << ( minimumDistanceIndex_8_reg_543 );
    sensitive << ( ap_enable_reg_pp0_iter21 );
    sensitive << ( ap_reg_pp0_iter20_exitcond_reg_464 );
    sensitive << ( ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 );

    SC_METHOD(thread_out_pixel_V_TVALID);
    sensitive << ( out_pixel_V_1_state );

    SC_METHOD(thread_p_color_array_stream_s_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp1_fu_254_p1 );

    SC_METHOD(thread_p_color_array_stream_s_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_s_fu_265_p1 );

    SC_METHOD(thread_p_color_array_stream_s_address2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_291_p1 );

    SC_METHOD(thread_p_color_array_stream_s_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_color_array_stream_s_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_color_array_stream_s_ce2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_tmp1_fu_254_p1);
    sensitive << ( ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6 );

    SC_METHOD(thread_tmp_1_1_fu_329_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( minimumDistance_4_1_s_fu_326_p1 );
    sensitive << ( minimumDistance_2_fu_318_p3 );

    SC_METHOD(thread_tmp_1_2_fu_397_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( minimumDistance_2_1_reg_530 );
    sensitive << ( ap_enable_reg_pp0_iter19 );
    sensitive << ( minimumDistance_4_2_s_fu_394_p1 );

    SC_METHOD(thread_tmp_1_fu_299_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter18 );
    sensitive << ( ap_phi_mux_minimumDistance4_phi_fu_205_p6 );
    sensitive << ( minimumDistance_4_ex_fu_296_p1 );

    SC_METHOD(thread_tmp_2_1_fu_335_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( minimumDistance_4_1_reg_504 );
    sensitive << ( ap_enable_reg_pp0_iter18 );

    SC_METHOD(thread_tmp_2_2_fu_402_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( minimumDistance_4_2_reg_537 );
    sensitive << ( ap_enable_reg_pp0_iter19 );

    SC_METHOD(thread_tmp_2_fu_305_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( minimumDistance_4_reg_498 );
    sensitive << ( ap_enable_reg_pp0_iter18 );

    SC_METHOD(thread_tmp_3_fu_291_p1);
    sensitive << ( i_1_fu_286_p2 );

    SC_METHOD(thread_tmp_4_fu_276_p1);
    sensitive << ( i_2_fu_270_p2 );

    SC_METHOD(thread_tmp_s_fu_265_p1);
    sensitive << ( i_fu_259_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    in_pixel_V_0_sel_rd = SC_LOGIC_0;
    in_pixel_V_0_sel_wr = SC_LOGIC_0;
    in_pixel_V_0_state = "00";
    out_pixel_V_1_sel_rd = SC_LOGIC_0;
    out_pixel_V_1_sel_wr = SC_LOGIC_0;
    out_pixel_V_1_state = "00";
    ap_CS_fsm = "01";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter20 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter21 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter19 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter18 = SC_LOGIC_0;
    ap_reg_grp_getColorDistance_Str_fu_229_ap_start = SC_LOGIC_0;
    ap_reg_grp_getColorDistance_Str_fu_236_ap_start = SC_LOGIC_0;
    ap_reg_grp_getColorDistance_Str_fu_243_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getPixelClassification_Stream_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_pixel_V_TDATA, "(port)in_pixel_V_TDATA");
    sc_trace(mVcdFile, in_pixel_V_TVALID, "(port)in_pixel_V_TVALID");
    sc_trace(mVcdFile, in_pixel_V_TREADY, "(port)in_pixel_V_TREADY");
    sc_trace(mVcdFile, out_pixel_V_TDATA, "(port)out_pixel_V_TDATA");
    sc_trace(mVcdFile, out_pixel_V_TVALID, "(port)out_pixel_V_TVALID");
    sc_trace(mVcdFile, out_pixel_V_TREADY, "(port)out_pixel_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, in_pixel_V_0_data_out, "in_pixel_V_0_data_out");
    sc_trace(mVcdFile, in_pixel_V_0_vld_in, "in_pixel_V_0_vld_in");
    sc_trace(mVcdFile, in_pixel_V_0_vld_out, "in_pixel_V_0_vld_out");
    sc_trace(mVcdFile, in_pixel_V_0_ack_in, "in_pixel_V_0_ack_in");
    sc_trace(mVcdFile, in_pixel_V_0_ack_out, "in_pixel_V_0_ack_out");
    sc_trace(mVcdFile, in_pixel_V_0_payload_A, "in_pixel_V_0_payload_A");
    sc_trace(mVcdFile, in_pixel_V_0_payload_B, "in_pixel_V_0_payload_B");
    sc_trace(mVcdFile, in_pixel_V_0_sel_rd, "in_pixel_V_0_sel_rd");
    sc_trace(mVcdFile, in_pixel_V_0_sel_wr, "in_pixel_V_0_sel_wr");
    sc_trace(mVcdFile, in_pixel_V_0_sel, "in_pixel_V_0_sel");
    sc_trace(mVcdFile, in_pixel_V_0_load_A, "in_pixel_V_0_load_A");
    sc_trace(mVcdFile, in_pixel_V_0_load_B, "in_pixel_V_0_load_B");
    sc_trace(mVcdFile, in_pixel_V_0_state, "in_pixel_V_0_state");
    sc_trace(mVcdFile, in_pixel_V_0_state_cmp_full, "in_pixel_V_0_state_cmp_full");
    sc_trace(mVcdFile, out_pixel_V_1_data_in, "out_pixel_V_1_data_in");
    sc_trace(mVcdFile, out_pixel_V_1_data_out, "out_pixel_V_1_data_out");
    sc_trace(mVcdFile, out_pixel_V_1_vld_in, "out_pixel_V_1_vld_in");
    sc_trace(mVcdFile, out_pixel_V_1_vld_out, "out_pixel_V_1_vld_out");
    sc_trace(mVcdFile, out_pixel_V_1_ack_in, "out_pixel_V_1_ack_in");
    sc_trace(mVcdFile, out_pixel_V_1_ack_out, "out_pixel_V_1_ack_out");
    sc_trace(mVcdFile, out_pixel_V_1_payload_A, "out_pixel_V_1_payload_A");
    sc_trace(mVcdFile, out_pixel_V_1_payload_B, "out_pixel_V_1_payload_B");
    sc_trace(mVcdFile, out_pixel_V_1_sel_rd, "out_pixel_V_1_sel_rd");
    sc_trace(mVcdFile, out_pixel_V_1_sel_wr, "out_pixel_V_1_sel_wr");
    sc_trace(mVcdFile, out_pixel_V_1_sel, "out_pixel_V_1_sel");
    sc_trace(mVcdFile, out_pixel_V_1_load_A, "out_pixel_V_1_load_A");
    sc_trace(mVcdFile, out_pixel_V_1_load_B, "out_pixel_V_1_load_B");
    sc_trace(mVcdFile, out_pixel_V_1_state, "out_pixel_V_1_state");
    sc_trace(mVcdFile, out_pixel_V_1_state_cmp_full, "out_pixel_V_1_state_cmp_full");
    sc_trace(mVcdFile, p_color_array_stream_s_address0, "p_color_array_stream_s_address0");
    sc_trace(mVcdFile, p_color_array_stream_s_ce0, "p_color_array_stream_s_ce0");
    sc_trace(mVcdFile, p_color_array_stream_s_q0, "p_color_array_stream_s_q0");
    sc_trace(mVcdFile, p_color_array_stream_s_address1, "p_color_array_stream_s_address1");
    sc_trace(mVcdFile, p_color_array_stream_s_ce1, "p_color_array_stream_s_ce1");
    sc_trace(mVcdFile, p_color_array_stream_s_q1, "p_color_array_stream_s_q1");
    sc_trace(mVcdFile, p_color_array_stream_s_address2, "p_color_array_stream_s_address2");
    sc_trace(mVcdFile, p_color_array_stream_s_ce2, "p_color_array_stream_s_ce2");
    sc_trace(mVcdFile, p_color_array_stream_s_q2, "p_color_array_stream_s_q2");
    sc_trace(mVcdFile, in_pixel_V_TDATA_blk_n, "in_pixel_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, do_init_reg_143, "do_init_reg_143");
    sc_trace(mVcdFile, out_pixel_V_TDATA_blk_n, "out_pixel_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter20, "ap_enable_reg_pp0_iter20");
    sc_trace(mVcdFile, exitcond_reg_464, "exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter19_exitcond_reg_464, "ap_reg_pp0_iter19_exitcond_reg_464");
    sc_trace(mVcdFile, minimumDistanceIndex_8_reg_543, "minimumDistanceIndex_8_reg_543");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter21, "ap_enable_reg_pp0_iter21");
    sc_trace(mVcdFile, ap_reg_pp0_iter20_exitcond_reg_464, "ap_reg_pp0_iter20_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543, "ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_do_init_reg_143, "ap_reg_pp0_iter1_do_init_reg_143");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter11, "ap_block_state13_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter12, "ap_block_state14_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter13, "ap_block_state15_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter14, "ap_block_state16_pp0_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter15, "ap_block_state17_pp0_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter16, "ap_block_state18_pp0_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter17, "ap_block_state19_pp0_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage0_iter18, "ap_block_state20_pp0_stage0_iter18");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage0_iter19, "ap_block_state21_pp0_stage0_iter19");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter20, "ap_block_state22_pp0_stage0_iter20");
    sc_trace(mVcdFile, ap_predicate_op131_write_state22, "ap_predicate_op131_write_state22");
    sc_trace(mVcdFile, ap_predicate_op132_write_state22, "ap_predicate_op132_write_state22");
    sc_trace(mVcdFile, ap_predicate_op133_write_state22, "ap_predicate_op133_write_state22");
    sc_trace(mVcdFile, ap_predicate_op134_write_state22, "ap_predicate_op134_write_state22");
    sc_trace(mVcdFile, ap_predicate_op135_write_state22, "ap_predicate_op135_write_state22");
    sc_trace(mVcdFile, ap_predicate_op136_write_state22, "ap_predicate_op136_write_state22");
    sc_trace(mVcdFile, ap_predicate_op137_write_state22, "ap_predicate_op137_write_state22");
    sc_trace(mVcdFile, ap_predicate_op138_write_state22, "ap_predicate_op138_write_state22");
    sc_trace(mVcdFile, ap_block_state22_io, "ap_block_state22_io");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter21, "ap_block_state23_pp0_stage0_iter21");
    sc_trace(mVcdFile, ap_predicate_op147_write_state23, "ap_predicate_op147_write_state23");
    sc_trace(mVcdFile, ap_predicate_op149_write_state23, "ap_predicate_op149_write_state23");
    sc_trace(mVcdFile, ap_predicate_op151_write_state23, "ap_predicate_op151_write_state23");
    sc_trace(mVcdFile, ap_predicate_op153_write_state23, "ap_predicate_op153_write_state23");
    sc_trace(mVcdFile, ap_predicate_op155_write_state23, "ap_predicate_op155_write_state23");
    sc_trace(mVcdFile, ap_predicate_op157_write_state23, "ap_predicate_op157_write_state23");
    sc_trace(mVcdFile, ap_predicate_op159_write_state23, "ap_predicate_op159_write_state23");
    sc_trace(mVcdFile, ap_predicate_op161_write_state23, "ap_predicate_op161_write_state23");
    sc_trace(mVcdFile, ap_block_state23_io, "ap_block_state23_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, minimumDistanceIndex_9_reg_159, "minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter1_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter2_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter3_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter4_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter5_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter6_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter7_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter8_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter9_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter10_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter11_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter12_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter13_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter14_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter15_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter16_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter17_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_159, "ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_159");
    sc_trace(mVcdFile, in_pixel_V5_rewind_reg_174, "in_pixel_V5_rewind_reg_174");
    sc_trace(mVcdFile, in_pixel_V5_phi_reg_188, "in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter3_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter4_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter5_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter6_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter7_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter8_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter9_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter10_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter11_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter12_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter13_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter14_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter15_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter16_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter17_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter18_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_reg_pp0_iter19_in_pixel_V5_phi_reg_188, "ap_reg_pp0_iter19_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, minimumDistance4_reg_201, "minimumDistance4_reg_201");
    sc_trace(mVcdFile, minimumDistanceIndex_3_reg_215, "minimumDistanceIndex_3_reg_215");
    sc_trace(mVcdFile, minimumDistanceIndex_fu_250_p1, "minimumDistanceIndex_fu_250_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_reg_439, "minimumDistanceIndex_reg_439");
    sc_trace(mVcdFile, i_fu_259_p2, "i_fu_259_p2");
    sc_trace(mVcdFile, i_reg_449, "i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_i_reg_449, "ap_reg_pp0_iter1_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_i_reg_449, "ap_reg_pp0_iter2_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_i_reg_449, "ap_reg_pp0_iter3_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_i_reg_449, "ap_reg_pp0_iter4_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_i_reg_449, "ap_reg_pp0_iter5_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_i_reg_449, "ap_reg_pp0_iter6_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_i_reg_449, "ap_reg_pp0_iter7_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_i_reg_449, "ap_reg_pp0_iter8_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_i_reg_449, "ap_reg_pp0_iter9_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_i_reg_449, "ap_reg_pp0_iter10_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_i_reg_449, "ap_reg_pp0_iter11_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_i_reg_449, "ap_reg_pp0_iter12_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_i_reg_449, "ap_reg_pp0_iter13_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_i_reg_449, "ap_reg_pp0_iter14_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_i_reg_449, "ap_reg_pp0_iter15_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_i_reg_449, "ap_reg_pp0_iter16_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_i_reg_449, "ap_reg_pp0_iter17_i_reg_449");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_i_reg_449, "ap_reg_pp0_iter18_i_reg_449");
    sc_trace(mVcdFile, tmp_4_fu_276_p1, "tmp_4_fu_276_p1");
    sc_trace(mVcdFile, tmp_4_reg_459, "tmp_4_reg_459");
    sc_trace(mVcdFile, exitcond_fu_280_p2, "exitcond_fu_280_p2");
    sc_trace(mVcdFile, ap_reg_pp0_iter1_exitcond_reg_464, "ap_reg_pp0_iter1_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_exitcond_reg_464, "ap_reg_pp0_iter2_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_exitcond_reg_464, "ap_reg_pp0_iter3_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_exitcond_reg_464, "ap_reg_pp0_iter4_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_exitcond_reg_464, "ap_reg_pp0_iter5_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_exitcond_reg_464, "ap_reg_pp0_iter6_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_exitcond_reg_464, "ap_reg_pp0_iter7_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_exitcond_reg_464, "ap_reg_pp0_iter8_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_exitcond_reg_464, "ap_reg_pp0_iter9_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_exitcond_reg_464, "ap_reg_pp0_iter10_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_exitcond_reg_464, "ap_reg_pp0_iter11_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_exitcond_reg_464, "ap_reg_pp0_iter12_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_exitcond_reg_464, "ap_reg_pp0_iter13_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_exitcond_reg_464, "ap_reg_pp0_iter14_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_exitcond_reg_464, "ap_reg_pp0_iter15_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_exitcond_reg_464, "ap_reg_pp0_iter16_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_exitcond_reg_464, "ap_reg_pp0_iter17_exitcond_reg_464");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_exitcond_reg_464, "ap_reg_pp0_iter18_exitcond_reg_464");
    sc_trace(mVcdFile, p_color_array_stream_1_reg_473, "p_color_array_stream_1_reg_473");
    sc_trace(mVcdFile, p_color_array_stream_3_reg_478, "p_color_array_stream_3_reg_478");
    sc_trace(mVcdFile, i_1_fu_286_p2, "i_1_fu_286_p2");
    sc_trace(mVcdFile, i_1_reg_483, "i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter2_i_1_reg_483, "ap_reg_pp0_iter2_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter3_i_1_reg_483, "ap_reg_pp0_iter3_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter4_i_1_reg_483, "ap_reg_pp0_iter4_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter5_i_1_reg_483, "ap_reg_pp0_iter5_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter6_i_1_reg_483, "ap_reg_pp0_iter6_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter7_i_1_reg_483, "ap_reg_pp0_iter7_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter8_i_1_reg_483, "ap_reg_pp0_iter8_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter9_i_1_reg_483, "ap_reg_pp0_iter9_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter10_i_1_reg_483, "ap_reg_pp0_iter10_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter11_i_1_reg_483, "ap_reg_pp0_iter11_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter12_i_1_reg_483, "ap_reg_pp0_iter12_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter13_i_1_reg_483, "ap_reg_pp0_iter13_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter14_i_1_reg_483, "ap_reg_pp0_iter14_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter15_i_1_reg_483, "ap_reg_pp0_iter15_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter16_i_1_reg_483, "ap_reg_pp0_iter16_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter17_i_1_reg_483, "ap_reg_pp0_iter17_i_1_reg_483");
    sc_trace(mVcdFile, ap_reg_pp0_iter18_i_1_reg_483, "ap_reg_pp0_iter18_i_1_reg_483");
    sc_trace(mVcdFile, p_color_array_stream_5_reg_493, "p_color_array_stream_5_reg_493");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_ap_return, "grp_getColorDistance_Str_fu_229_ap_return");
    sc_trace(mVcdFile, minimumDistance_4_reg_498, "minimumDistance_4_reg_498");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_ap_return, "grp_getColorDistance_Str_fu_236_ap_return");
    sc_trace(mVcdFile, minimumDistance_4_1_reg_504, "minimumDistance_4_1_reg_504");
    sc_trace(mVcdFile, tmp_1_fu_299_p2, "tmp_1_fu_299_p2");
    sc_trace(mVcdFile, tmp_1_reg_510, "tmp_1_reg_510");
    sc_trace(mVcdFile, tmp_2_fu_305_p2, "tmp_2_fu_305_p2");
    sc_trace(mVcdFile, tmp_2_reg_515, "tmp_2_reg_515");
    sc_trace(mVcdFile, tmp_1_1_fu_329_p2, "tmp_1_1_fu_329_p2");
    sc_trace(mVcdFile, tmp_1_1_reg_520, "tmp_1_1_reg_520");
    sc_trace(mVcdFile, tmp_2_1_fu_335_p2, "tmp_2_1_fu_335_p2");
    sc_trace(mVcdFile, tmp_2_1_reg_525, "tmp_2_1_reg_525");
    sc_trace(mVcdFile, minimumDistance_2_1_fu_348_p3, "minimumDistance_2_1_fu_348_p3");
    sc_trace(mVcdFile, minimumDistance_2_1_reg_530, "minimumDistance_2_1_reg_530");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_ap_return, "grp_getColorDistance_Str_fu_243_ap_return");
    sc_trace(mVcdFile, minimumDistance_4_2_reg_537, "minimumDistance_4_2_reg_537");
    sc_trace(mVcdFile, minimumDistanceIndex_8_fu_422_p3, "minimumDistanceIndex_8_fu_422_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter19, "ap_enable_reg_pp0_iter19");
    sc_trace(mVcdFile, minimumDistance_2_2_fu_430_p3, "minimumDistance_2_2_fu_430_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter14, "ap_enable_reg_pp0_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter15, "ap_enable_reg_pp0_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter16, "ap_enable_reg_pp0_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter17, "ap_enable_reg_pp0_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter18, "ap_enable_reg_pp0_iter18");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_ap_start, "grp_getColorDistance_Str_fu_229_ap_start");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_ap_done, "grp_getColorDistance_Str_fu_229_ap_done");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_ap_idle, "grp_getColorDistance_Str_fu_229_ap_idle");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_ap_ready, "grp_getColorDistance_Str_fu_229_ap_ready");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_ap_ce, "grp_getColorDistance_Str_fu_229_ap_ce");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_pixel_V_TREADY, "grp_getColorDistance_Str_fu_229_pixel_V_TREADY");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_229_pixel_V_TDATA_blk_n, "grp_getColorDistance_Str_fu_229_pixel_V_TDATA_blk_n");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_ap_start, "grp_getColorDistance_Str_fu_236_ap_start");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_ap_done, "grp_getColorDistance_Str_fu_236_ap_done");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_ap_idle, "grp_getColorDistance_Str_fu_236_ap_idle");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_ap_ready, "grp_getColorDistance_Str_fu_236_ap_ready");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_ap_ce, "grp_getColorDistance_Str_fu_236_ap_ce");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_pixel_V_TREADY, "grp_getColorDistance_Str_fu_236_pixel_V_TREADY");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_236_pixel_V_TDATA_blk_n, "grp_getColorDistance_Str_fu_236_pixel_V_TDATA_blk_n");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_ap_start, "grp_getColorDistance_Str_fu_243_ap_start");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_ap_done, "grp_getColorDistance_Str_fu_243_ap_done");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_ap_idle, "grp_getColorDistance_Str_fu_243_ap_idle");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_ap_ready, "grp_getColorDistance_Str_fu_243_ap_ready");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_ap_ce, "grp_getColorDistance_Str_fu_243_ap_ce");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_pixel_V_TREADY, "grp_getColorDistance_Str_fu_243_pixel_V_TREADY");
    sc_trace(mVcdFile, grp_getColorDistance_Str_fu_243_pixel_V_TDATA_blk_n, "grp_getColorDistance_Str_fu_243_pixel_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6, "ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6");
    sc_trace(mVcdFile, ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6, "ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6");
    sc_trace(mVcdFile, ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4, "ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_in_pixel_V5_phi_reg_188, "ap_phi_reg_pp0_iter0_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_in_pixel_V5_phi_reg_188, "ap_phi_reg_pp0_iter1_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_in_pixel_V5_phi_reg_188, "ap_phi_reg_pp0_iter2_in_pixel_V5_phi_reg_188");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistance4_phi_fu_205_p6, "ap_phi_mux_minimumDistance4_phi_fu_205_p6");
    sc_trace(mVcdFile, ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6, "ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6");
    sc_trace(mVcdFile, ap_reg_grp_getColorDistance_Str_fu_229_ap_start, "ap_reg_grp_getColorDistance_Str_fu_229_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_getColorDistance_Str_fu_236_ap_start, "ap_reg_grp_getColorDistance_Str_fu_236_ap_start");
    sc_trace(mVcdFile, ap_reg_grp_getColorDistance_Str_fu_243_ap_start, "ap_reg_grp_getColorDistance_Str_fu_243_ap_start");
    sc_trace(mVcdFile, tmp1_fu_254_p1, "tmp1_fu_254_p1");
    sc_trace(mVcdFile, tmp_s_fu_265_p1, "tmp_s_fu_265_p1");
    sc_trace(mVcdFile, tmp_3_fu_291_p1, "tmp_3_fu_291_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, i_2_fu_270_p2, "i_2_fu_270_p2");
    sc_trace(mVcdFile, minimumDistance_4_ex_fu_296_p1, "minimumDistance_4_ex_fu_296_p1");
    sc_trace(mVcdFile, minimumDistance_1_fu_310_p3, "minimumDistance_1_fu_310_p3");
    sc_trace(mVcdFile, minimumDistance_4_1_s_fu_326_p1, "minimumDistance_4_1_s_fu_326_p1");
    sc_trace(mVcdFile, minimumDistance_2_fu_318_p3, "minimumDistance_2_fu_318_p3");
    sc_trace(mVcdFile, minimumDistance_1_1_fu_340_p3, "minimumDistance_1_1_fu_340_p3");
    sc_trace(mVcdFile, minimumDistanceIndex_4_fu_356_p1, "minimumDistanceIndex_4_fu_356_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_1_fu_360_p3, "minimumDistanceIndex_1_fu_360_p3");
    sc_trace(mVcdFile, i_cast_fu_374_p1, "i_cast_fu_374_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_2_fu_367_p3, "minimumDistanceIndex_2_fu_367_p3");
    sc_trace(mVcdFile, minimumDistanceIndex_5_fu_377_p3, "minimumDistanceIndex_5_fu_377_p3");
    sc_trace(mVcdFile, minimumDistance_4_2_s_fu_394_p1, "minimumDistance_4_2_s_fu_394_p1");
    sc_trace(mVcdFile, tmp_2_2_fu_402_p2, "tmp_2_2_fu_402_p2");
    sc_trace(mVcdFile, i_1_cast_fu_391_p1, "i_1_cast_fu_391_p1");
    sc_trace(mVcdFile, minimumDistanceIndex_6_fu_384_p3, "minimumDistanceIndex_6_fu_384_p3");
    sc_trace(mVcdFile, tmp_1_2_fu_397_p2, "tmp_1_2_fu_397_p2");
    sc_trace(mVcdFile, minimumDistanceIndex_7_fu_407_p3, "minimumDistanceIndex_7_fu_407_p3");
    sc_trace(mVcdFile, minimumDistance_1_2_fu_415_p3, "minimumDistance_1_2_fu_415_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_165, "ap_condition_165");
    sc_trace(mVcdFile, ap_condition_501, "ap_condition_501");
#endif

    }
    mHdltvinHandle.open("getPixelClassification_Stream.hdltvin.dat");
    mHdltvoutHandle.open("getPixelClassification_Stream.hdltvout.dat");
}

getPixelClassification_Stream::~getPixelClassification_Stream() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete p_color_array_stream_s_U;
    delete grp_getColorDistance_Str_fu_229;
    delete grp_getColorDistance_Str_fu_236;
    delete grp_getColorDistance_Str_fu_243;
}

void getPixelClassification_Stream::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void getPixelClassification_Stream::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter14 = ap_enable_reg_pp0_iter13.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter15 = ap_enable_reg_pp0_iter14.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter16 = ap_enable_reg_pp0_iter15.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter17 = ap_enable_reg_pp0_iter16.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter18 = ap_enable_reg_pp0_iter17.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter19 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter19 = ap_enable_reg_pp0_iter18.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter20 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter20 = ap_enable_reg_pp0_iter19.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter21 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter21 = ap_enable_reg_pp0_iter20.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
            ap_enable_reg_pp0_iter21 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_501.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_143.read())) {
            ap_phi_reg_pp0_iter2_in_pixel_V5_phi_reg_188 = in_pixel_V_0_data_out.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter2_in_pixel_V5_phi_reg_188 = ap_phi_reg_pp0_iter1_in_pixel_V5_phi_reg_188.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_getColorDistance_Str_fu_229_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_reg_grp_getColorDistance_Str_fu_229_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_getColorDistance_Str_fu_229_ap_ready.read())) {
            ap_reg_grp_getColorDistance_Str_fu_229_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_getColorDistance_Str_fu_236_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
            ap_reg_grp_getColorDistance_Str_fu_236_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_getColorDistance_Str_fu_236_ap_ready.read())) {
            ap_reg_grp_getColorDistance_Str_fu_236_ap_start = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_grp_getColorDistance_Str_fu_243_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
            ap_reg_grp_getColorDistance_Str_fu_243_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_getColorDistance_Str_fu_243_ap_ready.read())) {
            ap_reg_grp_getColorDistance_Str_fu_243_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_464.read()))) {
        do_init_reg_143 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_464.read())))) {
        do_init_reg_143 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_do_init_reg_143.read())) {
            in_pixel_V5_phi_reg_188 = ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            in_pixel_V5_phi_reg_188 = ap_phi_reg_pp0_iter2_in_pixel_V5_phi_reg_188.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_out.read()))) {
            in_pixel_V_0_sel_rd =  (sc_logic) (~in_pixel_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_in.read()))) {
            in_pixel_V_0_sel_wr =  (sc_logic) (~in_pixel_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        in_pixel_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_2)))) {
            in_pixel_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_1)))) {
            in_pixel_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(in_pixel_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_ack_out.read()))))) {
            in_pixel_V_0_state = ap_const_lv2_3;
        } else {
            in_pixel_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter18_exitcond_reg_464.read()))) {
        minimumDistance4_reg_201 = minimumDistance_2_2_fu_430_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_464.read())))) {
        minimumDistance4_reg_201 = ap_const_lv32_7FFFFFFF;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_464.read()))) {
        minimumDistanceIndex_3_reg_215 = minimumDistanceIndex_8_reg_543.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        minimumDistanceIndex_3_reg_215 = ap_const_lv32_FFFFFFFF;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_464.read()))) {
        minimumDistanceIndex_9_reg_159 = tmp_4_reg_459.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_464.read())))) {
        minimumDistanceIndex_9_reg_159 = ap_const_lv2_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_out.read()))) {
            out_pixel_V_1_sel_rd =  (sc_logic) (~out_pixel_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_in.read()))) {
            out_pixel_V_1_sel_wr =  (sc_logic) (~out_pixel_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        out_pixel_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_V_1_state.read())))) {
            out_pixel_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_V_1_state.read())))) {
            out_pixel_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, out_pixel_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, out_pixel_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, out_pixel_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_ack_out.read()))))) {
            out_pixel_V_1_state = ap_const_lv2_3;
        } else {
            out_pixel_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        ap_phi_reg_pp0_iter1_in_pixel_V5_phi_reg_188 = ap_phi_reg_pp0_iter0_in_pixel_V5_phi_reg_188.read();
        tmp_4_reg_459 = tmp_4_fu_276_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        ap_reg_pp0_iter10_exitcond_reg_464 = ap_reg_pp0_iter9_exitcond_reg_464.read();
        ap_reg_pp0_iter10_i_1_reg_483 = ap_reg_pp0_iter9_i_1_reg_483.read();
        ap_reg_pp0_iter10_i_reg_449 = ap_reg_pp0_iter9_i_reg_449.read();
        ap_reg_pp0_iter10_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter9_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter10_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter9_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter11_exitcond_reg_464 = ap_reg_pp0_iter10_exitcond_reg_464.read();
        ap_reg_pp0_iter11_i_1_reg_483 = ap_reg_pp0_iter10_i_1_reg_483.read();
        ap_reg_pp0_iter11_i_reg_449 = ap_reg_pp0_iter10_i_reg_449.read();
        ap_reg_pp0_iter11_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter10_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter11_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter10_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter12_exitcond_reg_464 = ap_reg_pp0_iter11_exitcond_reg_464.read();
        ap_reg_pp0_iter12_i_1_reg_483 = ap_reg_pp0_iter11_i_1_reg_483.read();
        ap_reg_pp0_iter12_i_reg_449 = ap_reg_pp0_iter11_i_reg_449.read();
        ap_reg_pp0_iter12_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter11_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter12_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter11_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter13_exitcond_reg_464 = ap_reg_pp0_iter12_exitcond_reg_464.read();
        ap_reg_pp0_iter13_i_1_reg_483 = ap_reg_pp0_iter12_i_1_reg_483.read();
        ap_reg_pp0_iter13_i_reg_449 = ap_reg_pp0_iter12_i_reg_449.read();
        ap_reg_pp0_iter13_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter12_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter13_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter12_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter14_exitcond_reg_464 = ap_reg_pp0_iter13_exitcond_reg_464.read();
        ap_reg_pp0_iter14_i_1_reg_483 = ap_reg_pp0_iter13_i_1_reg_483.read();
        ap_reg_pp0_iter14_i_reg_449 = ap_reg_pp0_iter13_i_reg_449.read();
        ap_reg_pp0_iter14_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter13_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter14_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter13_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter15_exitcond_reg_464 = ap_reg_pp0_iter14_exitcond_reg_464.read();
        ap_reg_pp0_iter15_i_1_reg_483 = ap_reg_pp0_iter14_i_1_reg_483.read();
        ap_reg_pp0_iter15_i_reg_449 = ap_reg_pp0_iter14_i_reg_449.read();
        ap_reg_pp0_iter15_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter14_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter15_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter14_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter16_exitcond_reg_464 = ap_reg_pp0_iter15_exitcond_reg_464.read();
        ap_reg_pp0_iter16_i_1_reg_483 = ap_reg_pp0_iter15_i_1_reg_483.read();
        ap_reg_pp0_iter16_i_reg_449 = ap_reg_pp0_iter15_i_reg_449.read();
        ap_reg_pp0_iter16_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter15_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter16_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter15_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter17_exitcond_reg_464 = ap_reg_pp0_iter16_exitcond_reg_464.read();
        ap_reg_pp0_iter17_i_1_reg_483 = ap_reg_pp0_iter16_i_1_reg_483.read();
        ap_reg_pp0_iter17_i_reg_449 = ap_reg_pp0_iter16_i_reg_449.read();
        ap_reg_pp0_iter17_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter16_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter17_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter16_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter18_exitcond_reg_464 = ap_reg_pp0_iter17_exitcond_reg_464.read();
        ap_reg_pp0_iter18_i_1_reg_483 = ap_reg_pp0_iter17_i_1_reg_483.read();
        ap_reg_pp0_iter18_i_reg_449 = ap_reg_pp0_iter17_i_reg_449.read();
        ap_reg_pp0_iter18_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter17_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter17_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter19_exitcond_reg_464 = ap_reg_pp0_iter18_exitcond_reg_464.read();
        ap_reg_pp0_iter19_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter18_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter20_exitcond_reg_464 = ap_reg_pp0_iter19_exitcond_reg_464.read();
        ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543 = minimumDistanceIndex_8_reg_543.read();
        ap_reg_pp0_iter2_exitcond_reg_464 = ap_reg_pp0_iter1_exitcond_reg_464.read();
        ap_reg_pp0_iter2_i_1_reg_483 = i_1_reg_483.read();
        ap_reg_pp0_iter2_i_reg_449 = ap_reg_pp0_iter1_i_reg_449.read();
        ap_reg_pp0_iter2_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter1_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter3_exitcond_reg_464 = ap_reg_pp0_iter2_exitcond_reg_464.read();
        ap_reg_pp0_iter3_i_1_reg_483 = ap_reg_pp0_iter2_i_1_reg_483.read();
        ap_reg_pp0_iter3_i_reg_449 = ap_reg_pp0_iter2_i_reg_449.read();
        ap_reg_pp0_iter3_in_pixel_V5_phi_reg_188 = in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter3_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter2_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter4_exitcond_reg_464 = ap_reg_pp0_iter3_exitcond_reg_464.read();
        ap_reg_pp0_iter4_i_1_reg_483 = ap_reg_pp0_iter3_i_1_reg_483.read();
        ap_reg_pp0_iter4_i_reg_449 = ap_reg_pp0_iter3_i_reg_449.read();
        ap_reg_pp0_iter4_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter3_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter4_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter3_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter5_exitcond_reg_464 = ap_reg_pp0_iter4_exitcond_reg_464.read();
        ap_reg_pp0_iter5_i_1_reg_483 = ap_reg_pp0_iter4_i_1_reg_483.read();
        ap_reg_pp0_iter5_i_reg_449 = ap_reg_pp0_iter4_i_reg_449.read();
        ap_reg_pp0_iter5_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter4_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter5_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter4_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter6_exitcond_reg_464 = ap_reg_pp0_iter5_exitcond_reg_464.read();
        ap_reg_pp0_iter6_i_1_reg_483 = ap_reg_pp0_iter5_i_1_reg_483.read();
        ap_reg_pp0_iter6_i_reg_449 = ap_reg_pp0_iter5_i_reg_449.read();
        ap_reg_pp0_iter6_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter5_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter6_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter5_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter7_exitcond_reg_464 = ap_reg_pp0_iter6_exitcond_reg_464.read();
        ap_reg_pp0_iter7_i_1_reg_483 = ap_reg_pp0_iter6_i_1_reg_483.read();
        ap_reg_pp0_iter7_i_reg_449 = ap_reg_pp0_iter6_i_reg_449.read();
        ap_reg_pp0_iter7_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter6_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter7_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter6_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter8_exitcond_reg_464 = ap_reg_pp0_iter7_exitcond_reg_464.read();
        ap_reg_pp0_iter8_i_1_reg_483 = ap_reg_pp0_iter7_i_1_reg_483.read();
        ap_reg_pp0_iter8_i_reg_449 = ap_reg_pp0_iter7_i_reg_449.read();
        ap_reg_pp0_iter8_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter7_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter8_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter7_minimumDistanceIndex_9_reg_159.read();
        ap_reg_pp0_iter9_exitcond_reg_464 = ap_reg_pp0_iter8_exitcond_reg_464.read();
        ap_reg_pp0_iter9_i_1_reg_483 = ap_reg_pp0_iter8_i_1_reg_483.read();
        ap_reg_pp0_iter9_i_reg_449 = ap_reg_pp0_iter8_i_reg_449.read();
        ap_reg_pp0_iter9_in_pixel_V5_phi_reg_188 = ap_reg_pp0_iter8_in_pixel_V5_phi_reg_188.read();
        ap_reg_pp0_iter9_minimumDistanceIndex_9_reg_159 = ap_reg_pp0_iter8_minimumDistanceIndex_9_reg_159.read();
        minimumDistance_2_1_reg_530 = minimumDistance_2_1_fu_348_p3.read();
        minimumDistance_4_1_reg_504 = grp_getColorDistance_Str_fu_236_ap_return.read();
        minimumDistance_4_2_reg_537 = grp_getColorDistance_Str_fu_243_ap_return.read();
        minimumDistance_4_reg_498 = grp_getColorDistance_Str_fu_229_ap_return.read();
        tmp_1_1_reg_520 = tmp_1_1_fu_329_p2.read();
        tmp_1_reg_510 = tmp_1_fu_299_p2.read();
        tmp_2_1_reg_525 = tmp_2_1_fu_335_p2.read();
        tmp_2_reg_515 = tmp_2_fu_305_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_reg_pp0_iter1_do_init_reg_143 = do_init_reg_143.read();
        ap_reg_pp0_iter1_exitcond_reg_464 = exitcond_reg_464.read();
        ap_reg_pp0_iter1_i_reg_449 = i_reg_449.read();
        ap_reg_pp0_iter1_minimumDistanceIndex_9_reg_159 = minimumDistanceIndex_9_reg_159.read();
        exitcond_reg_464 = exitcond_fu_280_p2.read();
        i_1_reg_483 = i_1_fu_286_p2.read();
        i_reg_449 = i_fu_259_p2.read();
        minimumDistanceIndex_reg_439 = minimumDistanceIndex_fu_250_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_reg_464.read()))) {
        in_pixel_V5_rewind_reg_174 = in_pixel_V5_phi_reg_188.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_load_A.read())) {
        in_pixel_V_0_payload_A = in_pixel_V_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_load_B.read())) {
        in_pixel_V_0_payload_B = in_pixel_V_TDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()))) {
        minimumDistanceIndex_8_reg_543 = minimumDistanceIndex_8_fu_422_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_load_A.read())) {
        out_pixel_V_1_payload_A = out_pixel_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_load_B.read())) {
        out_pixel_V_1_payload_B = out_pixel_V_1_data_in.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_color_array_stream_1_reg_473 = p_color_array_stream_s_q0.read();
        p_color_array_stream_3_reg_478 = p_color_array_stream_s_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        p_color_array_stream_5_reg_493 = p_color_array_stream_s_q2.read();
    }
}

void getPixelClassification_Stream::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void getPixelClassification_Stream::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_143.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read())));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_143.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state22_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state23_io.read()))));
}

void getPixelClassification_Stream::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_143.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state22_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state23_io.read()))));
}

void getPixelClassification_Stream::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state13_pp0_stage0_iter11() {
    ap_block_state13_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state14_pp0_stage0_iter12() {
    ap_block_state14_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state15_pp0_stage0_iter13() {
    ap_block_state15_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state16_pp0_stage0_iter14() {
    ap_block_state16_pp0_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state17_pp0_stage0_iter15() {
    ap_block_state17_pp0_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state18_pp0_stage0_iter16() {
    ap_block_state18_pp0_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state19_pp0_stage0_iter17() {
    ap_block_state19_pp0_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state20_pp0_stage0_iter18() {
    ap_block_state20_pp0_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state21_pp0_stage0_iter19() {
    ap_block_state21_pp0_stage0_iter19 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state22_io() {
    ap_block_state22_io = ((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op131_write_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op132_write_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op133_write_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_write_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op135_write_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op136_write_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op137_write_state22.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op138_write_state22.read())));
}

void getPixelClassification_Stream::thread_ap_block_state22_pp0_stage0_iter20() {
    ap_block_state22_pp0_stage0_iter20 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state23_io() {
    ap_block_state23_io = ((esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op147_write_state23.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op149_write_state23.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op151_write_state23.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op153_write_state23.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op155_write_state23.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op157_write_state23.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op159_write_state23.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op161_write_state23.read())));
}

void getPixelClassification_Stream::thread_ap_block_state23_pp0_stage0_iter21() {
    ap_block_state23_pp0_stage0_iter21 = esl_seteq<1,1,1>(ap_const_logic_0, out_pixel_V_1_ack_in.read());
}

void getPixelClassification_Stream::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_143.read()) && esl_seteq<1,1,1>(ap_const_logic_0, in_pixel_V_0_vld_out.read()));
}

void getPixelClassification_Stream::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getPixelClassification_Stream::thread_ap_condition_165() {
    ap_condition_165 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0));
}

void getPixelClassification_Stream::thread_ap_condition_501() {
    ap_condition_501 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0));
}

void getPixelClassification_Stream::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getPixelClassification_Stream::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter19.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter20.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter21.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter1_do_init_reg_143.read()))) {
        ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4 = ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6.read();
    } else {
        ap_phi_mux_in_pixel_V5_phi_phi_fu_193_p4 = ap_phi_reg_pp0_iter2_in_pixel_V5_phi_reg_188.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter2_exitcond_reg_464.read()))) {
        ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6 = in_pixel_V5_phi_reg_188.read();
    } else {
        ap_phi_mux_in_pixel_V5_rewind_phi_fu_178_p6 = in_pixel_V5_rewind_reg_174.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_minimumDistance4_phi_fu_205_p6() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter19.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter18_exitcond_reg_464.read())) {
            ap_phi_mux_minimumDistance4_phi_fu_205_p6 = ap_const_lv32_7FFFFFFF;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter18_exitcond_reg_464.read())) {
            ap_phi_mux_minimumDistance4_phi_fu_205_p6 = minimumDistance_2_2_fu_430_p3.read();
        } else {
            ap_phi_mux_minimumDistance4_phi_fu_205_p6 = minimumDistance4_reg_201.read();
        }
    } else {
        ap_phi_mux_minimumDistance4_phi_fu_205_p6 = minimumDistance4_reg_201.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()))) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read())) {
            ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6 = ap_const_lv32_FFFFFFFF;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_pp0_iter19_exitcond_reg_464.read())) {
            ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6 = minimumDistanceIndex_8_reg_543.read();
        } else {
            ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6 = minimumDistanceIndex_3_reg_215.read();
        }
    } else {
        ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6 = minimumDistanceIndex_3_reg_215.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6() {
    if (esl_seteq<1,1,1>(ap_condition_165.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_reg_464.read())) {
            ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6 = ap_const_lv2_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_464.read())) {
            ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6 = tmp_4_reg_459.read();
        } else {
            ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6 = minimumDistanceIndex_9_reg_159.read();
        }
    } else {
        ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6 = minimumDistanceIndex_9_reg_159.read();
    }
}

void getPixelClassification_Stream::thread_ap_phi_reg_pp0_iter0_in_pixel_V5_phi_reg_188() {
    ap_phi_reg_pp0_iter0_in_pixel_V5_phi_reg_188 = "XXXXXXXXXXXXXXXXXXXXXXXX";
}

void getPixelClassification_Stream::thread_ap_predicate_op131_write_state22() {
    ap_predicate_op131_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_predicate_op132_write_state22() {
    ap_predicate_op132_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4));
}

void getPixelClassification_Stream::thread_ap_predicate_op133_write_state22() {
    ap_predicate_op133_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3));
}

void getPixelClassification_Stream::thread_ap_predicate_op134_write_state22() {
    ap_predicate_op134_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2));
}

void getPixelClassification_Stream::thread_ap_predicate_op135_write_state22() {
    ap_predicate_op135_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_const_lv32_1, minimumDistanceIndex_8_reg_543.read()));
}

void getPixelClassification_Stream::thread_ap_predicate_op136_write_state22() {
    ap_predicate_op136_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0));
}

void getPixelClassification_Stream::thread_ap_predicate_op137_write_state22() {
    ap_predicate_op137_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_FFFFFFFF));
}

void getPixelClassification_Stream::thread_ap_predicate_op138_write_state22() {
    ap_predicate_op138_write_state22 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_FFFFFFFF) && !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0) && !esl_seteq<1,32,32>(ap_const_lv32_1, minimumDistanceIndex_8_reg_543.read()) && !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2) && !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3) && !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4) && !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_predicate_op147_write_state23() {
    ap_predicate_op147_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_predicate_op149_write_state23() {
    ap_predicate_op149_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4));
}

void getPixelClassification_Stream::thread_ap_predicate_op151_write_state23() {
    ap_predicate_op151_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3));
}

void getPixelClassification_Stream::thread_ap_predicate_op153_write_state23() {
    ap_predicate_op153_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2));
}

void getPixelClassification_Stream::thread_ap_predicate_op155_write_state23() {
    ap_predicate_op155_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read()));
}

void getPixelClassification_Stream::thread_ap_predicate_op157_write_state23() {
    ap_predicate_op157_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0));
}

void getPixelClassification_Stream::thread_ap_predicate_op159_write_state23() {
    ap_predicate_op159_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && esl_seteq<1,32,32>(ap_const_lv32_FFFFFFFF, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read()));
}

void getPixelClassification_Stream::thread_ap_predicate_op161_write_state23() {
    ap_predicate_op161_write_state23 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && !esl_seteq<1,32,32>(ap_const_lv32_FFFFFFFF, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read()) && !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0) && !esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read()) && !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2) && !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3) && !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4) && !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5));
}

void getPixelClassification_Stream::thread_ap_reset_idle_pp0() {
    if (!esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void getPixelClassification_Stream::thread_exitcond_fu_280_p2() {
    exitcond_fu_280_p2 = (!i_2_fu_270_p2.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_2_fu_270_p2.read() == ap_const_lv3_6);
}

void getPixelClassification_Stream::thread_grp_getColorDistance_Str_fu_229_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_getColorDistance_Str_fu_229_ap_ce = ap_const_logic_1;
    } else {
        grp_getColorDistance_Str_fu_229_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_grp_getColorDistance_Str_fu_229_ap_start() {
    grp_getColorDistance_Str_fu_229_ap_start = ap_reg_grp_getColorDistance_Str_fu_229_ap_start.read();
}

void getPixelClassification_Stream::thread_grp_getColorDistance_Str_fu_236_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_getColorDistance_Str_fu_236_ap_ce = ap_const_logic_1;
    } else {
        grp_getColorDistance_Str_fu_236_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_grp_getColorDistance_Str_fu_236_ap_start() {
    grp_getColorDistance_Str_fu_236_ap_start = ap_reg_grp_getColorDistance_Str_fu_236_ap_start.read();
}

void getPixelClassification_Stream::thread_grp_getColorDistance_Str_fu_243_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_getColorDistance_Str_fu_243_ap_ce = ap_const_logic_1;
    } else {
        grp_getColorDistance_Str_fu_243_ap_ce = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_grp_getColorDistance_Str_fu_243_ap_start() {
    grp_getColorDistance_Str_fu_243_ap_start = ap_reg_grp_getColorDistance_Str_fu_243_ap_start.read();
}

void getPixelClassification_Stream::thread_i_1_cast_fu_391_p1() {
    i_1_cast_fu_391_p1 = esl_zext<32,3>(ap_reg_pp0_iter18_i_1_reg_483.read());
}

void getPixelClassification_Stream::thread_i_1_fu_286_p2() {
    i_1_fu_286_p2 = (!ap_const_lv3_2.is_01() || !minimumDistanceIndex_reg_439.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(minimumDistanceIndex_reg_439.read()));
}

void getPixelClassification_Stream::thread_i_2_fu_270_p2() {
    i_2_fu_270_p2 = (!ap_const_lv3_3.is_01() || !minimumDistanceIndex_fu_250_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_3) + sc_biguint<3>(minimumDistanceIndex_fu_250_p1.read()));
}

void getPixelClassification_Stream::thread_i_cast_fu_374_p1() {
    i_cast_fu_374_p1 = esl_zext<32,3>(ap_reg_pp0_iter18_i_reg_449.read());
}

void getPixelClassification_Stream::thread_i_fu_259_p2() {
    i_fu_259_p2 = (!ap_const_lv3_1.is_01() || !minimumDistanceIndex_fu_250_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(minimumDistanceIndex_fu_250_p1.read()));
}

void getPixelClassification_Stream::thread_in_pixel_V_0_ack_in() {
    in_pixel_V_0_ack_in = in_pixel_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_in_pixel_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_143.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_pixel_V_0_ack_out = ap_const_logic_1;
    } else {
        in_pixel_V_0_ack_out = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_in_pixel_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, in_pixel_V_0_sel.read())) {
        in_pixel_V_0_data_out = in_pixel_V_0_payload_B.read();
    } else {
        in_pixel_V_0_data_out = in_pixel_V_0_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_in_pixel_V_0_load_A() {
    in_pixel_V_0_load_A = (in_pixel_V_0_state_cmp_full.read() & ~in_pixel_V_0_sel_wr.read());
}

void getPixelClassification_Stream::thread_in_pixel_V_0_load_B() {
    in_pixel_V_0_load_B = (in_pixel_V_0_sel_wr.read() & in_pixel_V_0_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_in_pixel_V_0_sel() {
    in_pixel_V_0_sel = in_pixel_V_0_sel_rd.read();
}

void getPixelClassification_Stream::thread_in_pixel_V_0_state_cmp_full() {
    in_pixel_V_0_state_cmp_full =  (sc_logic) ((!in_pixel_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(in_pixel_V_0_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_in_pixel_V_0_vld_in() {
    in_pixel_V_0_vld_in = in_pixel_V_TVALID.read();
}

void getPixelClassification_Stream::thread_in_pixel_V_0_vld_out() {
    in_pixel_V_0_vld_out = in_pixel_V_0_state.read()[0];
}

void getPixelClassification_Stream::thread_in_pixel_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, do_init_reg_143.read()))) {
        in_pixel_V_TDATA_blk_n = in_pixel_V_0_state.read()[0];
    } else {
        in_pixel_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void getPixelClassification_Stream::thread_in_pixel_V_TREADY() {
    in_pixel_V_TREADY = in_pixel_V_0_state.read()[1];
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_1_fu_360_p3() {
    minimumDistanceIndex_1_fu_360_p3 = (!tmp_2_reg_515.read()[0].is_01())? sc_lv<32>(): ((tmp_2_reg_515.read()[0].to_bool())? minimumDistanceIndex_4_fu_356_p1.read(): ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_2_fu_367_p3() {
    minimumDistanceIndex_2_fu_367_p3 = (!tmp_1_reg_510.read()[0].is_01())? sc_lv<32>(): ((tmp_1_reg_510.read()[0].to_bool())? minimumDistanceIndex_1_fu_360_p3.read(): ap_phi_mux_minimumDistanceIndex_3_phi_fu_219_p6.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_4_fu_356_p1() {
    minimumDistanceIndex_4_fu_356_p1 = esl_zext<32,2>(ap_reg_pp0_iter18_minimumDistanceIndex_9_reg_159.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_5_fu_377_p3() {
    minimumDistanceIndex_5_fu_377_p3 = (!tmp_2_1_reg_525.read()[0].is_01())? sc_lv<32>(): ((tmp_2_1_reg_525.read()[0].to_bool())? i_cast_fu_374_p1.read(): minimumDistanceIndex_2_fu_367_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_6_fu_384_p3() {
    minimumDistanceIndex_6_fu_384_p3 = (!tmp_1_1_reg_520.read()[0].is_01())? sc_lv<32>(): ((tmp_1_1_reg_520.read()[0].to_bool())? minimumDistanceIndex_5_fu_377_p3.read(): minimumDistanceIndex_2_fu_367_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_7_fu_407_p3() {
    minimumDistanceIndex_7_fu_407_p3 = (!tmp_2_2_fu_402_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_2_fu_402_p2.read()[0].to_bool())? i_1_cast_fu_391_p1.read(): minimumDistanceIndex_6_fu_384_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_8_fu_422_p3() {
    minimumDistanceIndex_8_fu_422_p3 = (!tmp_1_2_fu_397_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_2_fu_397_p2.read()[0].to_bool())? minimumDistanceIndex_7_fu_407_p3.read(): minimumDistanceIndex_6_fu_384_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistanceIndex_fu_250_p1() {
    minimumDistanceIndex_fu_250_p1 = esl_zext<3,2>(ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_1_fu_340_p3() {
    minimumDistance_1_1_fu_340_p3 = (!tmp_2_1_fu_335_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_1_fu_335_p2.read()[0].to_bool())? minimumDistance_4_1_s_fu_326_p1.read(): minimumDistance_2_fu_318_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_2_fu_415_p3() {
    minimumDistance_1_2_fu_415_p3 = (!tmp_2_2_fu_402_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_2_fu_402_p2.read()[0].to_bool())? minimumDistance_4_2_s_fu_394_p1.read(): minimumDistance_2_1_reg_530.read());
}

void getPixelClassification_Stream::thread_minimumDistance_1_fu_310_p3() {
    minimumDistance_1_fu_310_p3 = (!tmp_2_fu_305_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_2_fu_305_p2.read()[0].to_bool())? minimumDistance_4_ex_fu_296_p1.read(): ap_phi_mux_minimumDistance4_phi_fu_205_p6.read());
}

void getPixelClassification_Stream::thread_minimumDistance_2_1_fu_348_p3() {
    minimumDistance_2_1_fu_348_p3 = (!tmp_1_1_fu_329_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_1_fu_329_p2.read()[0].to_bool())? minimumDistance_1_1_fu_340_p3.read(): minimumDistance_2_fu_318_p3.read());
}

void getPixelClassification_Stream::thread_minimumDistance_2_2_fu_430_p3() {
    minimumDistance_2_2_fu_430_p3 = (!tmp_1_2_fu_397_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_2_fu_397_p2.read()[0].to_bool())? minimumDistance_1_2_fu_415_p3.read(): minimumDistance_2_1_reg_530.read());
}

void getPixelClassification_Stream::thread_minimumDistance_2_fu_318_p3() {
    minimumDistance_2_fu_318_p3 = (!tmp_1_fu_299_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_fu_299_p2.read()[0].to_bool())? minimumDistance_1_fu_310_p3.read(): ap_phi_mux_minimumDistance4_phi_fu_205_p6.read());
}

void getPixelClassification_Stream::thread_minimumDistance_4_1_s_fu_326_p1() {
    minimumDistance_4_1_s_fu_326_p1 = esl_zext<32,12>(minimumDistance_4_1_reg_504.read());
}

void getPixelClassification_Stream::thread_minimumDistance_4_2_s_fu_394_p1() {
    minimumDistance_4_2_s_fu_394_p1 = esl_zext<32,12>(minimumDistance_4_2_reg_537.read());
}

void getPixelClassification_Stream::thread_minimumDistance_4_ex_fu_296_p1() {
    minimumDistance_4_ex_fu_296_p1 = esl_zext<32,12>(minimumDistance_4_reg_498.read());
}

void getPixelClassification_Stream::thread_out_pixel_V_1_ack_in() {
    out_pixel_V_1_ack_in = out_pixel_V_1_state.read()[1];
}

void getPixelClassification_Stream::thread_out_pixel_V_1_ack_out() {
    out_pixel_V_1_ack_out = out_pixel_V_TREADY.read();
}

void getPixelClassification_Stream::thread_out_pixel_V_1_data_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op137_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op138_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0)))) {
        out_pixel_V_1_data_in = ap_reg_pp0_iter19_in_pixel_V5_phi_reg_188.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op136_write_state22.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_pixel_V_1_data_in = ap_const_lv24_FF0000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op135_write_state22.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_pixel_V_1_data_in = ap_const_lv24_FF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_write_state22.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_pixel_V_1_data_in = ap_const_lv24_FF00;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op133_write_state22.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_pixel_V_1_data_in = ap_const_lv24_FFFF00;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op132_write_state22.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_pixel_V_1_data_in = ap_const_lv24_FF00FF;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op131_write_state22.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        out_pixel_V_1_data_in = ap_const_lv24_FFFF;
    } else {
        out_pixel_V_1_data_in = "XXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, out_pixel_V_1_sel.read())) {
        out_pixel_V_1_data_out = out_pixel_V_1_payload_B.read();
    } else {
        out_pixel_V_1_data_out = out_pixel_V_1_payload_A.read();
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_1_load_A() {
    out_pixel_V_1_load_A = (out_pixel_V_1_state_cmp_full.read() & ~out_pixel_V_1_sel_wr.read());
}

void getPixelClassification_Stream::thread_out_pixel_V_1_load_B() {
    out_pixel_V_1_load_B = (out_pixel_V_1_sel_wr.read() & out_pixel_V_1_state_cmp_full.read());
}

void getPixelClassification_Stream::thread_out_pixel_V_1_sel() {
    out_pixel_V_1_sel = out_pixel_V_1_sel_rd.read();
}

void getPixelClassification_Stream::thread_out_pixel_V_1_state_cmp_full() {
    out_pixel_V_1_state_cmp_full =  (sc_logic) ((!out_pixel_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(out_pixel_V_1_state.read() != ap_const_lv2_1))[0];
}

void getPixelClassification_Stream::thread_out_pixel_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op131_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op132_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op133_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op134_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op135_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op136_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op137_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op138_write_state22.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_pixel_V_1_vld_in = ap_const_logic_1;
    } else {
        out_pixel_V_1_vld_in = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_1_vld_out() {
    out_pixel_V_1_vld_out = out_pixel_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_out_pixel_V_TDATA() {
    out_pixel_V_TDATA = out_pixel_V_1_data_out.read();
}

void getPixelClassification_Stream::thread_out_pixel_V_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_FFFFFFFF)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_FFFFFFFF, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_1, minimumDistanceIndex_8_reg_543.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter20.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter19_exitcond_reg_464.read()) && 
          !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_FFFFFFFF) && 
          !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0) && 
          !esl_seteq<1,32,32>(ap_const_lv32_1, minimumDistanceIndex_8_reg_543.read()) && 
          !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4) && 
          !esl_seteq<1,32,32>(minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5)) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_reg_pp0_iter20_exitcond_reg_464.read()) && 
          !esl_seteq<1,32,32>(ap_const_lv32_FFFFFFFF, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read()) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_0) && 
          !esl_seteq<1,32,32>(ap_const_lv32_1, ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read()) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_2) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_3) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_4) && 
          !esl_seteq<1,32,32>(ap_reg_pp0_iter20_minimumDistanceIndex_8_reg_543.read(), ap_const_lv32_5)))) {
        out_pixel_V_TDATA_blk_n = out_pixel_V_1_state.read()[1];
    } else {
        out_pixel_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void getPixelClassification_Stream::thread_out_pixel_V_TVALID() {
    out_pixel_V_TVALID = out_pixel_V_1_state.read()[0];
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_address0() {
    p_color_array_stream_s_address0 =  (sc_lv<3>) (tmp1_fu_254_p1.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_address1() {
    p_color_array_stream_s_address1 =  (sc_lv<3>) (tmp_s_fu_265_p1.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_address2() {
    p_color_array_stream_s_address2 =  (sc_lv<3>) (tmp_3_fu_291_p1.read());
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        p_color_array_stream_s_ce0 = ap_const_logic_1;
    } else {
        p_color_array_stream_s_ce0 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1))) {
        p_color_array_stream_s_ce1 = ap_const_logic_1;
    } else {
        p_color_array_stream_s_ce1 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_p_color_array_stream_s_ce2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_color_array_stream_s_ce2 = ap_const_logic_1;
    } else {
        p_color_array_stream_s_ce2 = ap_const_logic_0;
    }
}

void getPixelClassification_Stream::thread_tmp1_fu_254_p1() {
    tmp1_fu_254_p1 = esl_zext<64,2>(ap_phi_mux_minimumDistanceIndex_9_phi_fu_163_p6.read());
}

void getPixelClassification_Stream::thread_tmp_1_1_fu_329_p2() {
    tmp_1_1_fu_329_p2 = (!minimumDistance_4_1_s_fu_326_p1.read().is_01() || !minimumDistance_2_fu_318_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(minimumDistance_4_1_s_fu_326_p1.read()) < sc_bigint<32>(minimumDistance_2_fu_318_p3.read()));
}

void getPixelClassification_Stream::thread_tmp_1_2_fu_397_p2() {
    tmp_1_2_fu_397_p2 = (!minimumDistance_4_2_s_fu_394_p1.read().is_01() || !minimumDistance_2_1_reg_530.read().is_01())? sc_lv<1>(): (sc_bigint<32>(minimumDistance_4_2_s_fu_394_p1.read()) < sc_bigint<32>(minimumDistance_2_1_reg_530.read()));
}

void getPixelClassification_Stream::thread_tmp_1_fu_299_p2() {
    tmp_1_fu_299_p2 = (!minimumDistance_4_ex_fu_296_p1.read().is_01() || !ap_phi_mux_minimumDistance4_phi_fu_205_p6.read().is_01())? sc_lv<1>(): (sc_bigint<32>(minimumDistance_4_ex_fu_296_p1.read()) < sc_bigint<32>(ap_phi_mux_minimumDistance4_phi_fu_205_p6.read()));
}

void getPixelClassification_Stream::thread_tmp_2_1_fu_335_p2() {
    tmp_2_1_fu_335_p2 = (!minimumDistance_4_1_reg_504.read().is_01() || !ap_const_lv12_109.is_01())? sc_lv<1>(): (sc_biguint<12>(minimumDistance_4_1_reg_504.read()) < sc_biguint<12>(ap_const_lv12_109));
}

void getPixelClassification_Stream::thread_tmp_2_2_fu_402_p2() {
    tmp_2_2_fu_402_p2 = (!minimumDistance_4_2_reg_537.read().is_01() || !ap_const_lv12_109.is_01())? sc_lv<1>(): (sc_biguint<12>(minimumDistance_4_2_reg_537.read()) < sc_biguint<12>(ap_const_lv12_109));
}

void getPixelClassification_Stream::thread_tmp_2_fu_305_p2() {
    tmp_2_fu_305_p2 = (!minimumDistance_4_reg_498.read().is_01() || !ap_const_lv12_109.is_01())? sc_lv<1>(): (sc_biguint<12>(minimumDistance_4_reg_498.read()) < sc_biguint<12>(ap_const_lv12_109));
}

void getPixelClassification_Stream::thread_tmp_3_fu_291_p1() {
    tmp_3_fu_291_p1 = esl_zext<64,3>(i_1_fu_286_p2.read());
}

void getPixelClassification_Stream::thread_tmp_4_fu_276_p1() {
    tmp_4_fu_276_p1 = i_2_fu_270_p2.read().range(2-1, 0);
}

void getPixelClassification_Stream::thread_tmp_s_fu_265_p1() {
    tmp_s_fu_265_p1 = esl_zext<64,3>(i_fu_259_p2.read());
}

void getPixelClassification_Stream::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reset_idle_pp0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

void getPixelClassification_Stream::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_V_TDATA\" :  \"" << in_pixel_V_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_pixel_V_TVALID\" :  \"" << in_pixel_V_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_pixel_V_TREADY\" :  \"" << in_pixel_V_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_V_TDATA\" :  \"" << out_pixel_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_pixel_V_TVALID\" :  \"" << out_pixel_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_pixel_V_TREADY\" :  \"" << out_pixel_V_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

